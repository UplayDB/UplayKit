// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Statistics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uplay.Statistics {

  /// <summary>Holder for reflection information generated from Statistics.proto</summary>
  public static partial class StatisticsReflection {

    #region Descriptor
    /// <summary>File descriptor for Statistics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StatisticsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chx1cGNfZHVtcF8xMC9TdGF0aXN0aWNzLnByb3RvEhZtZy5wcm90b2NvbC5z",
            "dGF0aXN0aWNzIlEKEUdhbWVTdGFydFR5cGVEYXRhEhEKCW1hY2hpbmVJZBgB",
            "IAEoCRIUCgxidWlsZFZlcnNpb24YAiABKAkSEwoLZ2FtZVZlcnNpb24YAyAB",
            "KAkigAEKGEdhbWVMb2NhbGl6YXRpb25UeXBlRGF0YRIbChNhcmVTdWJ0aXRs",
            "ZXNFbmFibGVkGAEgASgIEhQKDGdhbWVMYW5ndWFnZRgCIAEoCRIWCg5wbGF0",
            "Zm9ybUxvY2FsZRgDIAEoCRIZChFzdWJ0aXRsZXNMYW5ndWFnZRgEIAEoCSJT",
            "ChRDb250ZXh0U3RhcnRUeXBlRGF0YRITCgtjb250ZXh0VHlwZRgBIAEoCRIT",
            "Cgtjb250ZXh0TmFtZRgCIAEoCRIRCgljb250ZXh0SWQYAyABKA0iawoTQ29u",
            "dGV4dFN0b3BUeXBlRGF0YRITCgtjb250ZXh0VHlwZRgBIAEoCRITCgtjb250",
            "ZXh0TmFtZRgCIAEoCRIXCg9jb250ZXh0RHVyYXRpb24YAyABKA0SEQoJY29u",
            "dGV4dElkGAQgASgNIpYCChFHYW1lRW5kT2JqZWN0RGF0YRISCgpnYW1lTGVu",
            "Z3RoGAEgASgNEhUKDW5iU2NyZWVuc2hvdHMYAiABKA0SEgoKbmJVbml0c1dv",
            "bhgDIAEoDRIdChVuYkFjaGlldm1lbnRzVW5sb2NrZWQYBCABKA0SEQoJcHJv",
            "ZHVjdElkGAUgASgNEhUKDWFjdGl2YXRpb25JZHMYBiABKAkSEQoJbmJQYXJ0",
            "aWVzGAcgASgNEg0KBWJyYW5kGAggASgNEhgKEG9wZW5PdmVybGF5Q291bnQY",
            "CiABKA0SIQoSZ2VuZXJhdGVkRnJvbUNhY2hlGAwgASgIOgVmYWxzZRIaCgtz",
            "aG9wVmlzaWJsZRgNIAEoCDoFZmFsc2UiqwEKEURMRXJyb3JPYmplY3REYXRh",
            "EhMKC2RsU2Vzc2lvbklkGAEgASgJEhEKCXByb2R1Y3RJZBgCIAEoDRITCgtl",
            "cnJvclNvdXJjZRgDIAEoCRIPCgdjb250ZXh0GAQgASgJEhEKCWVycm9yQ29k",
            "ZRgFIAEoCRIUCgxuYk9jY3VyZW5jZXMYBiABKA0SDQoFYnJhbmQYByABKA0S",
            "EAoIY2F0ZWdvcnkYCCABKAkiyAMKHkRlY29tcHJlc3NTbGljZUVycm9yT2Jq",
            "ZWN0RGF0YRIRCglwcm9kdWN0SWQYASABKA0SFAoMbWFuaWZlc3RTSEExGAIg",
            "ASgJEhAKCGZpbGVQYXRoGAMgASgJEhkKEXNsaWNlT2Zmc2V0SW5GaWxlGAQg",
            "ASgNEhEKCXNsaWNlU2l6ZRgFIAEoDRJjChFjb21wcmVzc2lvbk1ldGhvZBgG",
            "IAEoDjJILm1nLnByb3RvY29sLnN0YXRpc3RpY3MuRGVjb21wcmVzc1NsaWNl",
            "RXJyb3JPYmplY3REYXRhLkNvbXByZXNzaW9uTWV0aG9kEhEKCWVycm9yQ29k",
            "ZRgHIAEoBRJNCgZzb3VyY2UYCCABKA4yPS5tZy5wcm90b2NvbC5zdGF0aXN0",
            "aWNzLkRlY29tcHJlc3NTbGljZUVycm9yT2JqZWN0RGF0YS5Tb3VyY2USFQoN",
            "c2xpY2VGaWxlbmFtZRgJIAEoCSI7ChFDb21wcmVzc2lvbk1ldGhvZBIICgRO",
            "T05FEAESBwoDWklQEAISCQoFTFpIQU0QAxIICgRaU1REEAQiIgoGU291cmNl",
            "EgoKBlJFVEFJTBABEgwKCERPV05MT0FEEAIigQEKFEZvbGxvd0xpbmtPYmpl",
            "Y3REYXRhEg4KBnNlbmRlchgBIAEoCRIPCgdsaW5rVXJsGAIgASgJEg4KBnRh",
            "cmdldBgDIAEoCRIPCgdtZXRhVGFnGAQgASgJEhMKC3Zpc3VhbEFzc2V0GAUg",
            "ASgJEhIKCmxpbmtSZXN1bHQYBiABKAkihAIKFEdhbWVMYXVuY2hPYmplY3RE",
            "YXRhEhEKCXByb2R1Y3RJZBgBIAEoDRIUCgxsYXVuY2hNZXRob2QYAiABKAkS",
            "FwoPZ2FtZVN0YXJ0ZXJUaW1lGAMgASgNEhMKC2lucHV0U291cmNlGAQgASgJ",
            "EhQKDHN0ZWFtQWNjb3VudBgFIAEoCRINCgVicmFuZBgHIAEoDRIVCg1hY3Rp",
            "dmF0aW9uSWRzGAggASgJEhMKC3Nob3BWaXNpYmxlGAkgASgIEhgKEHByb2R1",
            "Y3RBY3RpdmF0ZWQYCiABKAgSEwoLbWFjaGluZUd1aWQYCyABKAkSFQoNbGF1",
            "bmNoUGFydG5lchgMIAEoCSKoAwoRQXBwUXVpdE9iamVjdERhdGESSAoKcXVp",
            "dFJlYXNvbhgBIAEoDjI0Lm1nLnByb3RvY29sLnN0YXRpc3RpY3MuQXBwUXVp",
            "dE9iamVjdERhdGEuUXVpdFJlYXNvbhIZChFzZWNvbmRzU2luY2VTdGFydBgC",
            "IAEoDRIjChtkZW11eENvbm5lY3Rpb25GYWlsdXJlQ291bnQYAyABKA0SHAoU",
            "ZGlzY2FyZGVkRXZlbnRzQ291bnQYBSABKA0SIQoSZ2VuZXJhdGVkRnJvbUNh",
            "Y2hlGAYgASgIOgVmYWxzZRIaCgtzaG9wVmlzaWJsZRgHIAEoCDoFZmFsc2Ui",
            "qwEKClF1aXRSZWFzb24SCAoEVVNFUhABEgoKBkxPR09VVBACEhEKDUZBSUxF",
            "RFJFTE9HSU4QAxIOCgpMT0dPVVRQVVNIEAQSCQoFUEFUQ0gQBRINCglHT09G",
            "RkxJTkUQBhIMCghHT09OTElORRAHEg4KClVTRVJCQU5ORUQQCBILCgdSRVNU",
            "QVJUEAkSEgoOQ0xJRU5UT1VUREFURUQQChILCgdVTktOT1dOEAsizwYKG0dh",
            "bWVDbG91ZFNhdmVTeW5jT2JqZWN0RGF0YRIRCglwcm9kdWN0SWQYASABKA0S",
            "EQoJbWFjaGluZUlkGAIgASgJEkYKBHdoZW4YAyABKA4yOC5tZy5wcm90b2Nv",
            "bC5zdGF0aXN0aWNzLkdhbWVDbG91ZFNhdmVTeW5jT2JqZWN0RGF0YS5XaGVu",
            "ElAKCWRpcmVjdGlvbhgEIAEoDjI9Lm1nLnByb3RvY29sLnN0YXRpc3RpY3Mu",
            "R2FtZUNsb3VkU2F2ZVN5bmNPYmplY3REYXRhLkRpcmVjdGlvbhJOCghjb25m",
            "bGljdBgFIAEoDjI8Lm1nLnByb3RvY29sLnN0YXRpc3RpY3MuR2FtZUNsb3Vk",
            "U2F2ZVN5bmNPYmplY3REYXRhLkNvbmZsaWN0EkgKBWVycm9yGAYgASgOMjku",
            "bWcucHJvdG9jb2wuc3RhdGlzdGljcy5HYW1lQ2xvdWRTYXZlU3luY09iamVj",
            "dERhdGEuRXJyb3ISUgoKcmVzb2x1dGlvbhgHIAEoDjI+Lm1nLnByb3RvY29s",
            "LnN0YXRpc3RpY3MuR2FtZUNsb3VkU2F2ZVN5bmNPYmplY3REYXRhLlJlc29s",
            "dXRpb24SEQoJYnl0ZXNTZW50GAggASgNEg0KBWJyYW5kGAkgASgNIhoKBFdo",
            "ZW4SCQoFU1RBUlQQARIHCgNFTkQQAiIlCglEaXJlY3Rpb24SCgoGVVBMT0FE",
            "EAESDAoIRE9XTkxPQUQQAiJJCghDb25mbGljdBIMCghNSVNNQVRDSBABEhUK",
            "EU1JR1JBVElPTkNPTkZMSUNUEAISGAoUQ0xPVURTVE9SQUdFQ09ORkxJQ1QQ",
            "AyKtAQoFRXJyb3ISHQoZR0VUQ09OU0lTVEVOVFNFUlZFUkZBSUxFRBABEh0K",
            "GVNFVENPTlNJU1RFTlRTRVJWRVJGQUlMRUQQAhITCg9QQUNLRklMRVNGQUlM",
            "RUQQAxIWChJHRVRVUExPQURVUkxGQUlMRUQQBBIQCgxVUExPQURGQUlMRUQQ",
            "BRITCg9NSUdSQVRJT05GQUlMRUQQBhISCg5ET1dOTE9BREZBSUxFRBAHIiIK",
            "ClJlc29sdXRpb24SCQoFQ0xPVUQQARIJCgVMT0NBTBACImMKGFNldHRpbmdD",
            "aGFuZ2VkT2JqZWN0RGF0YRITCgtzZXR0aW5nTmFtZRgBIAEoCRIQCghvbGRW",
            "YWx1ZRgCIAEoCRIQCghuZXdWYWx1ZRgDIAEoCRIOCgZzZW5kZXIYBCABKAki",
            "XQoXU2hvcEFkZFRvQ2FydE9iamVjdERhdGESEQoJcHJvZHVjdElkGAEgASgN",
            "Eg4KBmdhbWVJZBgCIAEoDRIPCgd0aXRsZUlkGAMgASgNEg4KBmFjdGlvbhgE",
            "IAEoCSKUAQoPVUlOYXZPYmplY3REYXRhEgoKAmlkGAEgAigJEg0KBWluZGV4",
            "GAIgAigJEhMKC3RpbWVPbkZvY3VzGAMgASgNEhIKCnRpbWVPbkJsdXIYBCAB",
            "KA0SIQoSZ2VuZXJhdGVkRnJvbUNhY2hlGAYgASgIOgVmYWxzZRIaCgtzaG9w",
            "VmlzaWJsZRgHIAEoCDoFZmFsc2UihQEKGkJhdHRsZVBhc3NBY3Rpb25PYmpl",
            "Y3REYXRhEg4KBmFjdGlvbhgBIAIoCRIPCgdkZXRhaWxzGAIgAigJEhEKCWVu",
            "ZHN0YXR1cxgDIAEoCRIOCgZnYW1lSWQYBCACKA0SDwoHYnJhbmRJZBgFIAIo",
            "DRISCgp2aWV3U291cmNlGAYgAigJIskDChJBcHBTdGFydE9iamVjdERhdGES",
            "FAoMbGF1bmNoTWV0aG9kGAEgASgJEhEKCW1hY2hpbmVJZBgCIAEoCRITCgtm",
            "aWxlVmVyc2lvbhgDIAEoCRIRCglwYXRjaFRpbWUYBCABKA0SEQoJbG9naW5U",
            "aW1lGAUgASgNEhIKCmNvbmZpZ1RpbWUYBiABKA0SEgoKb3B0SW5QYXRjaBgH",
            "IAEoCRIUCgxvZmZsaW5lU3RhcnQYCCABKAgSEAoIYXV0aFR5cGUYCSABKA0S",
            "EwoLc2hvcFZpc2libGUYCiABKAgSFQoNdmVyaWZpZWRFbWFpbBgMIAEoCBIR",
            "Cgl0d29GQXR5cGUYDSABKAkSFQoNdHJ1c3RlZERldmljZRgOIAEoCBIVCg12",
            "ZXJpZmllZFBob25lGA8gASgIEhYKDmNsaWVudExhbmd1YWdlGBAgASgJInoK",
            "CEF1dGhUeXBlEgoKBk5PUk1BTBAAEgkKBVNURUFNEAESGAoUR09PR0xFX0FV",
            "VEhFTlRJQ0FUT1IQAhIKCgZPQ1VMVVMQAxIKCgZOVklESUEQBBIKCgZVQklU",
            "VVMQBRIZChVVQklTT0ZUX0FVVEhFTlRJQ0FUT1IQBiKOBAoSRG93bmxvYWRP",
            "YmplY3REYXRhEhMKC2RsU2Vzc2lvbklkGAEgASgJEhAKCGNvbnRyYWN0GAIg",
            "ASgJEhMKC2NvbnRlbnRUeXBlGAMgASgJEhIKCmlzUmVzdW1pbmcYBCABKAgS",
            "EQoJcHJvZHVjdElkGAUgASgNEg8KB3BhdGNoREwYBiABKA0SDgoGZGxTaXpl",
            "GAcgASgEEhUKDW92ZXJoZWFkV2FzdGUYCCABKAQSGAoQb3ZlcmhlYWRNZXRh",
            "ZGF0YRgJIAEoBBIVCg1vdmVyaGVhZFRvdGFsGAogASgEEhkKEXRvdGFsRXhw",
            "ZWN0ZWRTaXplGAsgASgEEhMKC3RvdGFsRExTaXplGAwgASgEEhcKD21pbGVz",
            "dG9uZURMVGltZRgNIAEoDRITCgt0b3RhbERMVGltZRgOIAEoDRISCgphdmdE",
            "TFNwZWVkGA8gASgEEhIKCm1heERMU3BlZWQYECABKAQSFQoNbmJUaW1lc1Bh",
            "dXNlZBgRIAEoDRIRCgllbmRTdGF0dXMYEiABKAkSEgoKZmFpbFJlYXNvbhgT",
            "IAEoCRIWCg51c2VyU3BlZWRMaW1pdBgUIAEoDRIVCg1hY3RpdmF0aW9uSWRz",
            "GBUgASgJEg0KBWJyYW5kGBYgASgNEhUKDWluaXRpYXRlZEZyb20YGCABKAkS",
            "EwoLaW5zdGFsbGVySWQYGSABKAkiiwEKEUhhcmR3YXJlU2NvcmVEYXRhEhAK",
            "CGNwdVNjb3JlGAEgASgNEhAKCGdwdVNjb3JlGAIgASgNEg8KB2NwdU5hbWUY",
            "AyABKAkSDwoHZ3B1TmFtZRgEIAEoCRIPCgdyYW1TaXplGAUgASgNEh8KF2dw",
            "dVNjb3JlQ29uZmlkZW5jZUxldmVsGAYgASgCInMKB0dQVUluZm8SDAoEbmFt",
            "ZRgBIAEoCRIQCgh2ZW5kb3JJZBgCIAEoDRIQCghkZXZpY2VJZBgDIAEoDRIM",
            "CgR2cmFtGAQgASgNEhEKCWR4VmVyc2lvbhgFIAEoCRIVCg1kcml2ZXJWZXJz",
            "aW9uGAYgASgJIloKD1NvdW5kRGV2aWNlSW5mbxIMCgRuYW1lGAEgASgJEhAK",
            "CHZlbmRvcklkGAIgASgNEhAKCGRldmljZUlkGAMgASgNEhUKDWRyaXZlclZl",
            "cnNpb24YBCABKAkiTAoNUGh5c2ljYWxEcml2ZRINCgVtb2RlbBgBIAEoCRIQ",
            "CghkZXZpY2VJZBgCIAEoCRIMCgRzaXplGAMgASgNEgwKBG5hbWUYBCABKAki",
            "PQoJVVNCRGV2aWNlEgwKBG5hbWUYASABKAkSEAoIdmVuZG9ySWQYAiABKA0S",
            "EAoIZGV2aWNlSWQYAyABKA0ilAgKFU1hY2hpbmVDb25mT2JqZWN0RGF0YRIT",
            "CgttYWNoaW5lR3VpZBgBIAEoCRIPCgdyYW1TaXplGAIgASgNEg8KB3JhbVR5",
            "cGUYAyABKAkSEAoIY3B1Q291bnQYBCABKA0SEAoIY3B1Q29yZXMYBSABKA0S",
            "EgoKY3B1VGhyZWFkcxgGIAEoDRIPCgdjcHVOYW1lGAcgASgJEg4KBmNwdUhT",
            "SRgIIAEoCRIYChBjcHVEZXRlY3RlZFNwZWVkGAkgASgNEhAKCGdwdUNvdW50",
            "GAogASgNEg8KB2dwdU5hbWUYCyABKAkSEQoJZ3B1VmVuZG9yGAwgASgJEhQK",
            "DGdwdURYVmVyc2lvbhgNIAEoCRIPCgdncHVWcmFtGA4gASgNEhAKCG1vbml0",
            "b3IxGA8gASgJEhAKCG1vbml0b3IyGBAgASgJEhAKCGhkZENvdW50GBEgASgN",
            "EhMKC2hkZFRvdFNwYWNlGBIgASgNEhQKDGhkZEZyZWVTcGFjZRgTIAEoDRIO",
            "CgZvc05hbWUYFCABKAkSDgoGb3NCaXRzGBUgASgNEhAKCG9zUmVnaW9uGBYg",
            "ASgJEhEKCXNvdW5kQ2FyZBgXIAEoCRIUCgxuZXRCYW5kd2lkdGgYGCABKA0S",
            "EAoIY3B1U2NvcmUYGSABKA0SEAoIZ3B1U2NvcmUYGiABKA0SEgoKbWljcm9w",
            "aG9uZRgbIAEoCRIPCgdnYW1lcGFkGBwgASgJEhUKDWRldGVjdGlvblRpbWUY",
            "HSABKA0SEQoJb3NWZXJzaW9uGB4gASgJEgwKBHV1aWQYHyABKAkSEwoLY291",
            "bnRyeUNvZGUYICABKAkSEgoKY3B1Q2FjaGVMMRghIAEoDRISCgpjcHVDYWNo",
            "ZUwyGCIgASgNEhIKCmNwdUNhY2hlTDMYIyABKA0SFgoOY3B1RGVzY3JpcHRp",
            "b24YJCABKAkSFgoObmV0QWRhcHRlclR5cGUYJSABKAkSEwoLbmV0VmVuZG9y",
            "SWQYJiABKA0SEwoLbmV0RGV2aWNlSWQYJyABKA0SGgoSbW90aGVyYm9hcmRD",
            "aGlwc2V0GCkgASgJEhAKCGZpcmV3YWxsGCogASgJEiwKA2dwdRgrIAMoCzIf",
            "Lm1nLnByb3RvY29sLnN0YXRpc3RpY3MuR1BVSW5mbxI8Cgtzb3VuZERldmlj",
            "ZRgsIAMoCzInLm1nLnByb3RvY29sLnN0YXRpc3RpY3MuU291bmREZXZpY2VJ",
            "bmZvEjwKDXBoeXNpY2FsRHJpdmUYLSADKAsyJS5tZy5wcm90b2NvbC5zdGF0",
            "aXN0aWNzLlBoeXNpY2FsRHJpdmUSNAoJdXNiRGV2aWNlGC4gAygLMiEubWcu",
            "cHJvdG9jb2wuc3RhdGlzdGljcy5VU0JEZXZpY2UiigEKHEh0dHBTZXJ2aWNl",
            "UmVxdWVzdE9iamVjdERhdGESCwoDdXJsGAEgASgJEgwKBG5hbWUYAiABKAkS",
            "FAoMcmVzcG9uc2VDb2RlGAMgASgNEhMKC2Nvbm5lY3RUaW1lGAQgASgNEhMK",
            "C3JlcXVlc3RUaW1lGAUgASgNEg8KB3RvdFRpbWUYBiABKA0iYQocSW1wb3J0",
            "U3RlYW1GcmllbmRzT2JqZWN0RGF0YRIXCg90b3RTdGVhbUZyaWVuZHMYASAB",
            "KA0SFwoPZnJpZW5kc0ltcG9ydGVkGAIgASgNEg8KB3N0ZWFtSWQYAyABKAki",
            "qAIKGUFjdGl2YXRlUHJvZHVjdE9iamVjdERhdGESEQoJcGFja2FnZUlkGAEg",
            "ASgNEg4KBmdhbWVJZBgCIAEoDRIPCgdicmFuZElkGAMgASgNEhIKCmZhaWxS",
            "ZWFzb24YBCABKAkSFQoNbmJLZXlBdHRlbXB0cxgFIAEoDRIOCgZiYW5uZWQY",
            "BiABKAgSFgoOYWN0aXZhdGlvblRpbWUYByABKAQSFQoNaW5pdGlhdGVkRnJv",
            "bRgIIAEoCRIUCgxjdXJyZW50R3JvdXAYCSABKAkSFQoNcHJldmlvdXNHcm91",
            "cBgKIAEoCRIVCg1uYk5vcm1hbEdhbWVzGAsgASgNEhQKDG5iU3RlYW1HYW1l",
            "cxgMIAEoDRITCgtwcm9kdWN0VHlwZRgNIAEoCSLKAQoPUGFydHlPYmplY3RE",
            "YXRhEg8KB3BhcnR5SWQYASABKAMSEwoLam9pbmVkUGFydHkYAiABKAUSEQoJ",
            "bGVmdFBhcnR5GAMgASgFEhMKC2lzSW5pdGlhdG9yGAQgASgIEhUKDWRlY2xp",
            "bmVkUGFydHkYBSABKAgSEQoJcHJvZHVjdElkGAYgASgFEhUKDWFjdGl2YXRp",
            "b25JZHMYByABKAkSDwoHYnJhbmRJZBgIIAEoBRIXCg9tYXhQYXJ0eU1lbWJl",
            "cnMYCSABKAUi+wIKGUFjY291bnRDcmVhdGlvbk9iamVjdERhdGESTgoJZW5k",
            "U3RhdHVzGAUgASgOMjsubWcucHJvdG9jb2wuc3RhdGlzdGljcy5BY2NvdW50",
            "Q3JlYXRpb25PYmplY3REYXRhLkVuZFN0YXR1cxJQCgpmYWlsUmVhc29uGAYg",
            "ASgOMjwubWcucHJvdG9jb2wuc3RhdGlzdGljcy5BY2NvdW50Q3JlYXRpb25P",
            "YmplY3REYXRhLkZhaWxSZWFzb24SEgoKZXJyb3JDb2RlcxgHIAEoCRIVCg1p",
            "bml0aWF0ZWRGcm9tGAggASgJEhMKC2luc3RhbGxlcklkGAkgASgJIi4KCUVu",
            "ZFN0YXR1cxILCgdTVUNDRVNTEAESCAoERkFJTBACEgoKBkNBTkNFTBADIkwK",
            "CkZhaWxSZWFzb24SEwoPR0VUUE9MSUNJRVNGQUlMEAESEgoOVkFMSURBVElO",
            "R0ZBSUwQAhIVChFDUkVBVEVBQ0NPVU5URkFJTBADInMKFkZyaWVuZEFjdGlv",
            "bk9iamVjdERhdGESDgoGYWN0aW9uGAEgASgJEhAKCGZyaWVuZElkGAIgASgJ",
            "EhEKCXByb2R1Y3RJZBgDIAEoDRIPCgdicmFuZElkGAQgASgNEhMKC2lucHV0",
            "U291cmNlGAUgASgJIoIBCiBGcmllbmRTdWdnZXN0aW9uQWN0aW9uT2JqZWN0",
            "RGF0YRIOCgZhY3Rpb24YASABKAkSEAoIZnJpZW5kSWQYAiABKAkSFgoOc3Vn",
            "Z2VzdGlvblR5cGUYAyABKAkSEwoLaW5wdXRTb3VyY2UYBCABKAkSDwoHYnJh",
            "bmRJZBgFIAEoDSKHAQokRnJpZW5kU3VnZ2VzdGlvbkltcHJlc3Npb25PYmpl",
            "Y3REYXRhEhAKCGZyaWVuZElkGAEgASgJEhYKDnN1Z2dlc3Rpb25UeXBlGAIg",
            "ASgJEhMKC2lucHV0U291cmNlGAMgASgJEg8KB2JyYW5kSWQYBCABKA0SDwoH",
            "c3VnUmFuaxgFIAEoDSKLAQoWUmVkZWVtUmV3YXJkT2JqZWN0RGF0YRIQCgh1",
            "bml0Q29zdBgBIAEoDRIQCghyZXdhcmRJZBgCIAEoCRISCgpzb3VyY2VQYWdl",
            "GAMgASgJEhEKCXByb2R1Y3RJZBgEIAEoDRIVCg1hY3RpdmF0aW9uSWRzGAUg",
            "ASgJEg8KB2JyYW5kSWQYBiABKA0igAIKGlN0cmVhbWluZ1Nlc3Npb25PYmpl",
            "Y3REYXRhEhIKCmdhbWVWb2x1bWUYASABKAUSEQoJbWljVm9sdW1lGAIgASgF",
            "Eg4KBnBhdXNlZBgDIAEoBRIRCglzdGFydFRpbWUYBCABKAUSDwoHZW5kVGlt",
            "ZRgFIAEoBRIPCgdjb3B5VXJsGAYgASgFEhMKC3N0YXJ0TWV0aG9kGAcgASgJ",
            "EhQKDG1heE5iVmlld2VycxgIIAEoBRIOCgZnYW1lSWQYCSABKAUSDwoHYnJh",
            "bmRJZBgKIAEoBRIVCg1zdHJlYW1pbmdUaW1lGAsgASgFEhMKC3NlcnZpY2VO",
            "YW1lGA0gASgJIlkKGEFjY291bnRMaW5raW5nT2JqZWN0RGF0YRIWCg50aGly",
            "ZFBhcnR5TmFtZRgBIAEoCRIPCgdzdWNjZXNzGAIgASgFEhQKDHRoaXJkUGFy",
            "dHlJZBgDIAEoCSJjChVDaGF0U2Vzc2lvbk9iamVjdERhdGESFgoOY29udmVy",
            "c2F0aW9uSWQYASABKAkSDwoHbXNnU2VudBgCIAEoBRITCgttc2dSZWNlaXZl",
            "ZBgDIAEoBRIMCgR0eXBlGAQgASgFIpwBChlDaGFsbGVuZ2VBY3Rpb25PYmpl",
            "Y3REYXRhEhEKCXByb2R1Y3RJZBgBIAEoDRIVCg1hY3RpdmF0aW9uSWRzGAIg",
            "ASgJEg8KB2JyYW5kSWQYAyABKA0SDgoGYWN0aW9uGAQgASgJEg4KBnBvb2xJ",
            "ZBgFIAEoCRITCgtjaGFsbGVuZ2VJZBgGIAEoCRIPCgdleHBpcmVkGAcgASgI",
            "In8KE05ld3NDbGlja09iamVjdERhdGESDQoFaWduSWQYASABKAkSEAoIdmll",
            "d05hbWUYAiABKAkSEwoLZGlzcGxheVR5cGUYAyABKAkSDwoHYnJhbmRJZBgE",
            "IAEoDRIRCglwcm9kdWN0SWQYBSABKA0SDgoGbGF5b3V0GAcgASgJIkUKEk5l",
            "d3NPcGVuT2JqZWN0RGF0YRINCgVpZ25JZBgBIAEoCRIOCgZzZW5kZXIYAiAB",
            "KAkSEAoIc2VuZGVySWQYAyABKAkidAoYTmV3c0ltcHJlc3Npb25PYmplY3RE",
            "YXRhEg0KBWlnbklkGAEgASgJEhAKCHZpZXdOYW1lGAIgASgJEhMKC2Rpc3Bs",
            "YXlUeXBlGAMgASgJEg8KB2JyYW5kSWQYBCABKA0SEQoJcHJvZHVjdElkGAUg",
            "ASgNIjoKFkFkSW1wcmVzc2lvbk9iamVjdERhdGESDwoHbGlua1VybBgBIAEo",
            "CRIPCgdtZXRhVGFnGAIgASgJIrkBCh1Qcm9tb1RhYkludGVyYWN0aW9uT2Jq",
            "ZWN0RGF0YRIPCgd0YWJOYW1lGAEgASgJEhcKD2ludGVyYWN0aW9uVHlwZRgC",
            "IAEoCRIOCgZ0YXJnZXQYAyABKAkSEwoLc2VjdGlvbk5hbWUYBCABKAkSDwoH",
            "YnJhbmRJZBgFIAEoDRILCgN1cmwYBiABKAkSFgoOY2xpZW50TGFuZ3VhZ2UY",
            "ByABKAkSEwoLb3duU2NlbmFyaW8YCCABKAkizQEKGU5ld3NJbnRlcmFjdGlv",
            "bk9iamVjdERhdGESDQoFaWduSWQYASABKAkSFwoPaW50ZXJhY3Rpb25UeXBl",
            "GAIgASgJEg4KBnRhcmdldBgDIAEoCRIQCgh2aWV3TmFtZRgEIAEoCRIPCgdi",
            "cmFuZElkGAUgASgNEhEKCXByb2R1Y3RJZBgGIAEoDRILCgN1cmwYCCABKAkS",
            "DgoGbGF5b3V0GAkgASgJEhAKCGJldGFDb2RlGAogASgJEhMKC2JldGFQaGFz",
            "ZUlkGAsgASgNIm4KHlRpY2tldFJlbmV3YWxGYWlsdXJlT2JqZWN0RGF0YRIY",
            "ChBmYWlsUmVuZXdhbENvdW50GAEgASgNEhYKDnJlc3VsdEh0dHBDb2RlGAIg",
            "ASgNEhoKEmlzUmVtZW1iZXJNZVRpY2tldBgDIAEoCCKyAQoVR3JvdXBBY3Rp",
            "b25PYmplY3REYXRhEg4KBmFjdGlvbhgBIAEoCRIPCgdncm91cElkGAIgASgJ",
            "EhEKCWludml0ZWVJZBgDIAEoCRIRCglncm91cE5hbWUYBCABKAkSGQoRZ3Jv",
            "dXBQcmV2aW91c05hbWUYBSABKAkSEQoJcHJvZHVjdElkGAYgASgNEg8KB2Jy",
            "YW5kSWQYByABKA0SEwoLaW5wdXRTb3VyY2UYCCABKAkixAEKHkluZ2FtZVNo",
            "b3BJbXByZXNzaW9uT2JqZWN0RGF0YRIQCghhc3NldFVybBgBIAEoCRIQCgh2",
            "aWV3TmFtZRgCIAEoCRIOCgZnYW1lSWQYAyABKA0SDwoHYnJhbmRJZBgEIAEo",
            "DRIOCgZzaG9wSWQYBSABKAkSEAoIbWFya2V0SWQYBiABKAkSEQoJY291bnRy",
            "eUlkGAcgASgJEhEKCXByb2R1Y3RJZBgIIAEoDRIVCg1zaG9wUHJvZHVjdElk",
            "GAkgASgJIpQCChpJbmdhbWVTaG9wQWN0aW9uT2JqZWN0RGF0YRIOCgZnYW1l",
            "SWQYASABKA0SDwoHYnJhbmRJZBgCIAEoDRIOCgZzaG9wSWQYAyABKAkSEAoI",
            "bWFya2V0SWQYBCABKAkSEQoJY291bnRyeUlkGAUgASgJEhEKCXByb2R1Y3RJ",
            "ZBgGIAEoDRIVCg1zaG9wUHJvZHVjdElkGAcgASgJEg0KBXBzcElkGAggASgJ",
            "Eg8KB3Byb21vSWQYCSABKAkSEAoIZmlsdGVySWQYCiABKA0SFAoMaXRlbUNh",
            "dGVnb3J5GAsgASgJEg4KBnJlc3VsdBgMIAEoCBIOCgZhY3Rpb24YDSABKAkS",
            "DgoGc291cmNlGA4gASgJIioKFERpYWdub3N0aWNPYmplY3REYXRhEhIKCmN1",
            "c3RvbURhdGEYAiABKAkiQgobRW1haWxWZXJpZmljYXRpb25PYmplY3REYXRh",
            "Eg4KBmFjdGlvbhgBIAEoCRITCgtpbnB1dFNvdXJjZRgCIAEoCSJAChlUd29G",
            "QUFjdGl2YXRpb25PYmplY3REYXRhEg4KBmFjdGlvbhgBIAEoCRITCgtpbnB1",
            "dFNvdXJjZRgCIAEoCSI+ChdQaG9uZVNlY3VyaXR5T2JqZWN0RGF0YRIOCgZh",
            "Y3Rpb24YASABKAkSEwoLaW5wdXRTb3VyY2UYAiABKAkiSAohU2VuZFNtc1Ry",
            "YWNrRXZlbnRBY3Rpb25PYmplY3REYXRhEg4KBmFjdGlvbhgBIAEoCRITCgtp",
            "bnB1dFNvdXJjZRgCIAEoCSJpChtQb3BVcERpc3BsYXlFdmVudE9iamVjdERh",
            "dGESEQoJcG9wVXBOYW1lGAEgASgJEhAKCHZpZXdOYW1lGAIgASgJEhIKCmZp",
            "bmFsU3RhdGUYAyABKAkSEQoJY29udGVudElkGAQgASgJIlkKF1RydXN0ZWRE",
            "ZXZpY2VBY3Rpb25EYXRhEg4KBmFjdGlvbhgBIAEoCRIRCgltYWNoaW5lSWQY",
            "AiABKAkSGwoTZGVmYXVsdEZyaWVuZGx5TmFtZRgDIAEoCCJ5CiZTaGFyZVBs",
            "YXlIb3N0U2Vzc2lvblN0cmVhbWluZ1N0YXJ0RGF0YRISCgpob3N0UGVlcklk",
            "GAEgASgJEgwKBHNpZGUYAiABKAkSEwoLc3BhY2VJZEdhbWUYAyABKAkSGAoQ",
            "c3RyZWFtaW5nU2VydmljZRgEIAEoCSKIAQolU2hhcmVQbGF5SG9zdFNlc3Np",
            "b25TdHJlYW1pbmdTdG9wRGF0YRISCgpob3N0UGVlcklkGAEgASgJEgwKBHNp",
            "ZGUYAiABKAkSDgoGcmVhc29uGAMgASgJEhMKC3NwYWNlSWRHYW1lGAQgASgJ",
            "EhgKEHN0cmVhbWluZ1NlcnZpY2UYBSABKAkiUwoXU2hhcmVQbGF5T25ib2Fy",
            "ZGluZ0RhdGESGgoSc291cmNlVHJhY2tpbmdEYXRhGAEgASgJEg4KBnJlYXNv",
            "bhgCIAEoCRIMCgRzdGVwGAMgASgNIjMKFVNoYXJlUGxheUhvc3RQYWdlRGF0",
            "YRIaChJzb3VyY2VUcmFja2luZ0RhdGEYASABKAkibgocU2hhcmVQbGF5R3Vl",
            "c3RJbnZpdGF0aW9uRGF0YRIYChBpbnZpdGF0aW9uU291cmNlGAEgASgJEhgK",
            "EGludml0YXRpb25TdGF0dXMYAiABKAkSGgoSaW52aXRhdGlvblNlbnRUaW1l",
            "GAMgASgJImcKG1NoYXJlUGxheUhvc3RJbnZpdGF0aW9uRGF0YRIYChBpbnZp",
            "dGF0aW9uVGFyZ2V0GAEgASgJEhgKEGludml0YXRpb25TdGF0dXMYAiABKAkS",
            "FAoMaW52aXRhdGlvbklkGAMgASgJIpYBChZTaGFyZVBsYXlIb3N0RXJyb3JE",
            "YXRhEhEKCWVycm9yVHlwZRgBIAEoCRIRCgllcnJvck5hbWUYAiABKAkSEwoL",
            "ZXJyb3JTb3VyY2UYAyABKAkSFAoMaW52aXRhdGlvbklkGAQgASgJEhQKDGhv",
            "c3RTdHJlYW1JZBgFIAEoCRIVCg1ndWVzdFN0cmVhbUlkGAYgASgJIo0BChlT",
            "aGFyZVBsYXlIb3N0U2V0dGluZ3NEYXRhEg8KB2JpdHJhdGUYASABKA0SJQod",
            "bW91c2VBbmRLZXlib2FyZEFjY2Vzc0FsbG93ZWQYAiABKAgSHAoUZ2FtZXBh",
            "ZEFjY2Vzc0FsbG93ZWQYAyABKAgSGgoSc291cmNlVHJhY2tpbmdEYXRhGAQg",
            "ASgJIowBCh1TdHJlYW1pbmdIb3N0U3RhcnRTZXNzaW9uRGF0YRISCgpob3N0",
            "UGVlcklkGAEgASgJEgwKBHNpZGUYAiABKAkSEwoLc3BhY2VJZEdhbWUYAyAB",
            "KAkSEwoLYml0cmF0ZU1icHMYBCABKA0SEgoKcmVzb2x1dGlvbhgFIAEoCRIL",
            "CgNmcHMYBiABKA0imwEKHFN0cmVhbWluZ0hvc3RTdG9wU2Vzc2lvbkRhdGES",
            "EgoKaG9zdFBlZXJJZBgBIAEoCRIMCgRzaWRlGAIgASgJEhMKC3NwYWNlSWRH",
            "YW1lGAMgASgJEg4KBnJlYXNvbhgEIAEoCRITCgtiaXRyYXRlTWJwcxgFIAEo",
            "DRISCgpyZXNvbHV0aW9uGAYgASgJEgsKA2ZwcxgHIAEoDSJuCiNTdHJlYW1p",
            "bmdIb3N0U2Vzc2lvblNldHRpbmdzQ2hhbmdlZBIOCgZzZW5kZXIYASABKAkS",
            "EwoLc2V0dGluZ05hbWUYAiABKAkSEAoIbmV3VmFsdWUYAyABKAkSEAoIb2xk",
            "VmFsdWUYBCABKAkiXAoSU3RyZWFtaW5nRXJyb3JEYXRhEhEKCWVycm9yTmFt",
            "ZRgBIAEoCRIRCgllcnJvclR5cGUYAiABKAkSEgoKaG9zdFBlZXJJZBgDIAEo",
            "CRIMCgRzaWRlGAQgASgJInYKE1N0cmVhbWluZ1N0YXR1c0RhdGESDgoGc3Rh",
            "dHVzGAEgASgJEhIKCmhvc3RQZWVySWQYAiABKAkSDAoEc2lkZRgDIAEoCRIY",
            "ChBzdHJlYW1pbmdTZXJ2aWNlGAQgASgJEhMKC3NwYWNlSWRHYW1lGAUgASgJ",
            "IpMDChVTdHJlYW1pbmdGZWVkQmFja0RhdGESGQoKYXVkaW9Jc3N1ZRgBIAEo",
            "CDoFZmFsc2USFwoIaW5wdXRMYWcYAiABKAg6BWZhbHNlEh8KEGludml0YXRp",
            "b25GYWlsZWQYAyABKAg6BWZhbHNlEhQKBW90aGVyGAQgASgIOgVmYWxzZRId",
            "Cg5wb29yQ29ubmVjdGlvbhgFIAEoCDoFZmFsc2USDgoGcmF0aW5nGAYgASgN",
            "EhMKC2lucHV0U291cmNlGAcgASgJEg0KBWJyYW5kGAggASgNEhQKDGludml0",
            "YXRpb25JZBgJIAEoCRIjChRob3N0UGVyZm9ybWFuY2VJc3N1ZRgKIAEoCDoF",
            "ZmFsc2USJAoVZ3Vlc3RQZXJmb3JtYW5jZUlzc3VlGAsgASgIOgVmYWxzZRIg",
            "ChFwb29yR3Vlc3RCZWhhdmlvchgMIAEoCDoFZmFsc2USGQoKdmlkZW9Jc3N1",
            "ZRgNIAEoCDoFZmFsc2USDAoEc2lkZRgOIAEoCRIQCgh1c2VyVHlwZRgPIAEo",
            "CSJZCiBTdHJlYW1pbmdIb3N0T3V0T2ZGb2N1c1N0YXJ0RGF0YRISCgpob3N0",
            "UGVlcklkGAEgASgJEgwKBHNpZGUYAiABKAkSEwoLc3BhY2VJZEdhbWUYAyAB",
            "KAkiWAofU3RyZWFtaW5nSG9zdE91dE9mRm9jdXNTdG9wRGF0YRISCgpob3N0",
            "UGVlcklkGAEgASgJEgwKBHNpZGUYAiABKAkSEwoLc3BhY2VJZEdhbWUYAyAB",
            "KAkiqwEKEVN0cmVhbWluZ1ZHUEV2ZW50EhAKCGRldmljZUlkGAEgASgNEhIK",
            "CmRldmljZU5hbWUYAiABKAkSEgoKZGV2aWNlVHlwZRgDIAEoCRIWCg5ndWVz",
            "dFByb2ZpbGVJZBgEIAEoCRISCgpob3N0UGVlcklkGAUgASgJEgwKBHNpZGUY",
            "BiABKAkSEwoLc3BhY2VJZEdhbWUYByABKAkSDQoFc3RhdGUYCCABKAkiWAod",
            "U3RyZWFtaW5nSG9zdExpbmtDcmVhdGVkRXZlbnQSEgoKaG9zdFBlZXJJZBgB",
            "IAEoCRITCgtzcGFjZUlkR2FtZRgCIAEoCRIOCgZzb3VyY2UYAyABKAkinwIK",
            "DUV2ZW50VHlwZURhdGESPAoJZ2FtZVN0YXJ0GAEgASgLMikubWcucHJvdG9j",
            "b2wuc3RhdGlzdGljcy5HYW1lU3RhcnRUeXBlRGF0YRJKChBnYW1lTG9jYWxp",
            "emF0aW9uGAIgASgLMjAubWcucHJvdG9jb2wuc3RhdGlzdGljcy5HYW1lTG9j",
            "YWxpemF0aW9uVHlwZURhdGESQgoMY29udGV4dFN0YXJ0GAMgASgLMiwubWcu",
            "cHJvdG9jb2wuc3RhdGlzdGljcy5Db250ZXh0U3RhcnRUeXBlRGF0YRJACgtj",
            "b250ZXh0U3RvcBgEIAEoCzIrLm1nLnByb3RvY29sLnN0YXRpc3RpY3MuQ29u",
            "dGV4dFN0b3BUeXBlRGF0YSJ6CidSZW1vdGVQbGF5SG9zdFNlc3Npb25TdHJl",
            "YW1pbmdTdGFydERhdGESEgoKaG9zdFBlZXJJZBgBIAEoCRIMCgRzaWRlGAIg",
            "ASgJEhMKC3NwYWNlSWRHYW1lGAMgASgJEhgKEHN0cmVhbWluZ1NlcnZpY2UY",
            "BCABKAkieQomUmVtb3RlUGxheUhvc3RTZXNzaW9uU3RyZWFtaW5nU3RvcERh",
            "dGESEgoKaG9zdFBlZXJJZBgBIAEoCRIMCgRzaWRlGAIgASgJEhMKC3NwYWNl",
            "SWRHYW1lGAMgASgJEhgKEHN0cmVhbWluZ1NlcnZpY2UYBCABKAki0yYKD0V2",
            "ZW50T2JqZWN0RGF0YRJACgpnYW1lTGF1bmNoGAEgASgLMiwubWcucHJvdG9j",
            "b2wuc3RhdGlzdGljcy5HYW1lTGF1bmNoT2JqZWN0RGF0YRI2CgV1aU5hdhgC",
            "IAEoCzInLm1nLnByb3RvY29sLnN0YXRpc3RpY3MuVUlOYXZPYmplY3REYXRh",
            "EjwKCGFwcFN0YXJ0GAMgASgLMioubWcucHJvdG9jb2wuc3RhdGlzdGljcy5B",
            "cHBTdGFydE9iamVjdERhdGESPAoIZG93bmxvYWQYBCABKAsyKi5tZy5wcm90",
            "b2NvbC5zdGF0aXN0aWNzLkRvd25sb2FkT2JqZWN0RGF0YRJACgpmb2xsb3dM",
            "aW5rGAUgASgLMiwubWcucHJvdG9jb2wuc3RhdGlzdGljcy5Gb2xsb3dMaW5r",
            "T2JqZWN0RGF0YRJOChFnYW1lQ2xvdWRTYXZlU3luYxgGIAEoCzIzLm1nLnBy",
            "b3RvY29sLnN0YXRpc3RpY3MuR2FtZUNsb3VkU2F2ZVN5bmNPYmplY3REYXRh",
            "EkgKDnNldHRpbmdDaGFuZ2VkGAcgASgLMjAubWcucHJvdG9jb2wuc3RhdGlz",
            "dGljcy5TZXR0aW5nQ2hhbmdlZE9iamVjdERhdGESQgoLbWFjaGluZUNvbmYY",
            "CCABKAsyLS5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLk1hY2hpbmVDb25mT2Jq",
            "ZWN0RGF0YRI6CgdkbEVycm9yGAkgASgLMikubWcucHJvdG9jb2wuc3RhdGlz",
            "dGljcy5ETEVycm9yT2JqZWN0RGF0YRI6CgdhcHBRdWl0GAogASgLMikubWcu",
            "cHJvdG9jb2wuc3RhdGlzdGljcy5BcHBRdWl0T2JqZWN0RGF0YRJUChRkZWNv",
            "bXByZXNzU2xpY2VFcnJvchgLIAEoCzI2Lm1nLnByb3RvY29sLnN0YXRpc3Rp",
            "Y3MuRGVjb21wcmVzc1NsaWNlRXJyb3JPYmplY3REYXRhEjoKB2dhbWVFbmQY",
            "DCABKAsyKS5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLkdhbWVFbmRPYmplY3RE",
            "YXRhElAKEmh0dHBTZXJ2aWNlUmVxdWVzdBgNIAEoCzI0Lm1nLnByb3RvY29s",
            "LnN0YXRpc3RpY3MuSHR0cFNlcnZpY2VSZXF1ZXN0T2JqZWN0RGF0YRJQChJp",
            "bXBvcnRTdGVhbUZyaWVuZHMYDiABKAsyNC5tZy5wcm90b2NvbC5zdGF0aXN0",
            "aWNzLkltcG9ydFN0ZWFtRnJpZW5kc09iamVjdERhdGESSgoPYWN0aXZhdGVQ",
            "cm9kdWN0GA8gASgLMjEubWcucHJvdG9jb2wuc3RhdGlzdGljcy5BY3RpdmF0",
            "ZVByb2R1Y3RPYmplY3REYXRhEkQKDGZyaWVuZEFjdGlvbhgQIAEoCzIuLm1n",
            "LnByb3RvY29sLnN0YXRpc3RpY3MuRnJpZW5kQWN0aW9uT2JqZWN0RGF0YRJE",
            "CgxyZWRlZW1SZXdhcmQYESABKAsyLi5tZy5wcm90b2NvbC5zdGF0aXN0aWNz",
            "LlJlZGVlbVJld2FyZE9iamVjdERhdGESSgoPYWNjb3VudENyZWF0aW9uGBIg",
            "ASgLMjEubWcucHJvdG9jb2wuc3RhdGlzdGljcy5BY2NvdW50Q3JlYXRpb25P",
            "YmplY3REYXRhEkwKEHN0cmVhbWluZ1Nlc3Npb24YEyABKAsyMi5tZy5wcm90",
            "b2NvbC5zdGF0aXN0aWNzLlN0cmVhbWluZ1Nlc3Npb25PYmplY3REYXRhEkgK",
            "DmFjY291bnRMaW5raW5nGBQgASgLMjAubWcucHJvdG9jb2wuc3RhdGlzdGlj",
            "cy5BY2NvdW50TGlua2luZ09iamVjdERhdGESQgoLY2hhdFNlc3Npb24YFSAB",
            "KAsyLS5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLkNoYXRTZXNzaW9uT2JqZWN0",
            "RGF0YRI2CgVwYXJ0eRgWIAEoCzInLm1nLnByb3RvY29sLnN0YXRpc3RpY3Mu",
            "UGFydHlPYmplY3REYXRhEkoKD2NoYWxsZW5nZUFjdGlvbhgXIAEoCzIxLm1n",
            "LnByb3RvY29sLnN0YXRpc3RpY3MuQ2hhbGxlbmdlQWN0aW9uT2JqZWN0RGF0",
            "YRI+CgluZXdzQ2xpY2sYGCABKAsyKy5tZy5wcm90b2NvbC5zdGF0aXN0aWNz",
            "Lk5ld3NDbGlja09iamVjdERhdGESSAoObmV3c0ltcHJlc3Npb24YGSABKAsy",
            "MC5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLk5ld3NJbXByZXNzaW9uT2JqZWN0",
            "RGF0YRJKCg9uZXdzSW50ZXJhY3Rpb24YGiABKAsyMS5tZy5wcm90b2NvbC5z",
            "dGF0aXN0aWNzLk5ld3NJbnRlcmFjdGlvbk9iamVjdERhdGESRgoNc2hvcEFk",
            "ZFRvQ2FydBgbIAEoCzIvLm1nLnByb3RvY29sLnN0YXRpc3RpY3MuU2hvcEFk",
            "ZFRvQ2FydE9iamVjdERhdGESVAoUdGlja2V0UmVuZXdhbEZhaWx1cmUYHCAB",
            "KAsyNi5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLlRpY2tldFJlbmV3YWxGYWls",
            "dXJlT2JqZWN0RGF0YRJCCgtncm91cEFjdGlvbhgdIAEoCzItLm1nLnByb3Rv",
            "Y29sLnN0YXRpc3RpY3MuR3JvdXBBY3Rpb25PYmplY3REYXRhEkAKCmRpYWdu",
            "b3N0aWMYHiABKAsyLC5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLkRpYWdub3N0",
            "aWNPYmplY3REYXRhEkwKEGluZ2FtZVNob3BBY3Rpb24YHyABKAsyMi5tZy5w",
            "cm90b2NvbC5zdGF0aXN0aWNzLkluZ2FtZVNob3BBY3Rpb25PYmplY3REYXRh",
            "ElQKFEluZ2FtZVNob3BJbXByZXNzaW9uGCAgASgLMjYubWcucHJvdG9jb2wu",
            "c3RhdGlzdGljcy5JbmdhbWVTaG9wSW1wcmVzc2lvbk9iamVjdERhdGESUgoT",
            "cHJvbW9UYWJJbnRlcmFjdGlvbhghIAEoCzI1Lm1nLnByb3RvY29sLnN0YXRp",
            "c3RpY3MuUHJvbW9UYWJJbnRlcmFjdGlvbk9iamVjdERhdGESTgoRZW1haWxW",
            "ZXJpZmljYXRpb24YIiABKAsyMy5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLkVt",
            "YWlsVmVyaWZpY2F0aW9uT2JqZWN0RGF0YRJKCg90d29GQUFjdGl2YXRpb24Y",
            "IyABKAsyMS5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLlR3b0ZBQWN0aXZhdGlv",
            "bk9iamVjdERhdGESRAoMYWRJbXByZXNzaW9uGCQgASgLMi4ubWcucHJvdG9j",
            "b2wuc3RhdGlzdGljcy5BZEltcHJlc3Npb25PYmplY3REYXRhEk4KEXBvcFVw",
            "RGlzcGxheUV2ZW50GCUgASgLMjMubWcucHJvdG9jb2wuc3RhdGlzdGljcy5Q",
            "b3BVcERpc3BsYXlFdmVudE9iamVjdERhdGESPAoIbmV3c09wZW4YJiABKAsy",
            "Ki5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLk5ld3NPcGVuT2JqZWN0RGF0YRJM",
            "ChBiYXR0bGVQYXNzQWN0aW9uGCcgASgLMjIubWcucHJvdG9jb2wuc3RhdGlz",
            "dGljcy5CYXR0bGVQYXNzQWN0aW9uT2JqZWN0RGF0YRJMChN0cnVzdGVkRGV2",
            "aWNlQWN0aW9uGCggASgLMi8ubWcucHJvdG9jb2wuc3RhdGlzdGljcy5UcnVz",
            "dGVkRGV2aWNlQWN0aW9uRGF0YRJYChZmcmllbmRTdWdnZXN0aW9uQWN0aW9u",
            "GCkgASgLMjgubWcucHJvdG9jb2wuc3RhdGlzdGljcy5GcmllbmRTdWdnZXN0",
            "aW9uQWN0aW9uT2JqZWN0RGF0YRJgChpmcmllbmRTdWdnZXN0aW9uSW1wcmVz",
            "c2lvbhgqIAEoCzI8Lm1nLnByb3RvY29sLnN0YXRpc3RpY3MuRnJpZW5kU3Vn",
            "Z2VzdGlvbkltcHJlc3Npb25PYmplY3REYXRhEkYKDXBob25lU2VjdXJpdHkY",
            "KyABKAsyLy5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLlBob25lU2VjdXJpdHlP",
            "YmplY3REYXRhElAKDVNlbmRTbXNBY3Rpb24YLCABKAsyOS5tZy5wcm90b2Nv",
            "bC5zdGF0aXN0aWNzLlNlbmRTbXNUcmFja0V2ZW50QWN0aW9uT2JqZWN0RGF0",
            "YRJdChVzaGFyZVBsYXlTZXNzaW9uU3RhcnQYLSABKAsyPi5tZy5wcm90b2Nv",
            "bC5zdGF0aXN0aWNzLlNoYXJlUGxheUhvc3RTZXNzaW9uU3RyZWFtaW5nU3Rh",
            "cnREYXRhElsKFHNoYXJlUGxheVNlc3Npb25TdG9wGC4gASgLMj0ubWcucHJv",
            "dG9jb2wuc3RhdGlzdGljcy5TaGFyZVBsYXlIb3N0U2Vzc2lvblN0cmVhbWlu",
            "Z1N0b3BEYXRhEkgKEXNoYXJlUGxheUhvc3RQYWdlGC8gASgLMi0ubWcucHJv",
            "dG9jb2wuc3RhdGlzdGljcy5TaGFyZVBsYXlIb3N0UGFnZURhdGESVgoYc2hh",
            "cmVQbGF5R3Vlc3RJbnZpdGF0aW9uGDAgASgLMjQubWcucHJvdG9jb2wuc3Rh",
            "dGlzdGljcy5TaGFyZVBsYXlHdWVzdEludml0YXRpb25EYXRhElQKF3NoYXJl",
            "UGxheUhvc3RJbnZpdGF0aW9uGDEgASgLMjMubWcucHJvdG9jb2wuc3RhdGlz",
            "dGljcy5TaGFyZVBsYXlIb3N0SW52aXRhdGlvbkRhdGESSgoSc2hhcmVQbGF5",
            "SG9zdEVycm9yGDIgASgLMi4ubWcucHJvdG9jb2wuc3RhdGlzdGljcy5TaGFy",
            "ZVBsYXlIb3N0RXJyb3JEYXRhElAKFXNoYXJlUGxheUhvc3RTZXR0aW5ncxgz",
            "IAEoCzIxLm1nLnByb3RvY29sLnN0YXRpc3RpY3MuU2hhcmVQbGF5SG9zdFNl",
            "dHRpbmdzRGF0YRJMChNzaGFyZVBsYXlPbmJvYXJkaW5nGDQgASgLMi8ubWcu",
            "cHJvdG9jb2wuc3RhdGlzdGljcy5TaGFyZVBsYXlPbmJvYXJkaW5nRGF0YRJe",
            "ChxzdHJlYW1pbmdIb3N0T3V0T2ZGb2N1c1N0YXJ0GDUgASgLMjgubWcucHJv",
            "dG9jb2wuc3RhdGlzdGljcy5TdHJlYW1pbmdIb3N0T3V0T2ZGb2N1c1N0YXJ0",
            "RGF0YRJcChtzdHJlYW1pbmdIb3N0T3V0T2ZGb2N1c1N0b3AYNiABKAsyNy5t",
            "Zy5wcm90b2NvbC5zdGF0aXN0aWNzLlN0cmVhbWluZ0hvc3RPdXRPZkZvY3Vz",
            "U3RvcERhdGESSAoRc3RyZWFtaW5nRmVlZEJhY2sYNyABKAsyLS5tZy5wcm90",
            "b2NvbC5zdGF0aXN0aWNzLlN0cmVhbWluZ0ZlZWRCYWNrRGF0YRJYChlzdHJl",
            "YW1pbmdIb3N0U3RhcnRTZXNzaW9uGDggASgLMjUubWcucHJvdG9jb2wuc3Rh",
            "dGlzdGljcy5TdHJlYW1pbmdIb3N0U3RhcnRTZXNzaW9uRGF0YRJWChhzdHJl",
            "YW1pbmdIb3N0U3RvcFNlc3Npb24YOSABKAsyNC5tZy5wcm90b2NvbC5zdGF0",
            "aXN0aWNzLlN0cmVhbWluZ0hvc3RTdG9wU2Vzc2lvbkRhdGESQgoOc3RyZWFt",
            "aW5nRXJyb3IYOiABKAsyKi5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLlN0cmVh",
            "bWluZ0Vycm9yRGF0YRJhChxzdHJlYW1pbmdIb3N0U2Vzc2lvblNldHRpbmdz",
            "GDsgASgLMjsubWcucHJvdG9jb2wuc3RhdGlzdGljcy5TdHJlYW1pbmdIb3N0",
            "U2Vzc2lvblNldHRpbmdzQ2hhbmdlZBJEChFzdHJlYW1pbmdWR1BFdmVudBg8",
            "IAEoCzIpLm1nLnByb3RvY29sLnN0YXRpc3RpY3MuU3RyZWFtaW5nVkdQRXZl",
            "bnQSVwoYc3RyZWFtaW5nSG9zdExpbmtDcmVhdGVkGD0gASgLMjUubWcucHJv",
            "dG9jb2wuc3RhdGlzdGljcy5TdHJlYW1pbmdIb3N0TGlua0NyZWF0ZWRFdmVu",
            "dBJfChZyZW1vdGVQbGF5U2Vzc2lvblN0YXJ0GD4gASgLMj8ubWcucHJvdG9j",
            "b2wuc3RhdGlzdGljcy5SZW1vdGVQbGF5SG9zdFNlc3Npb25TdHJlYW1pbmdT",
            "dGFydERhdGESXQoVcmVtb3RlUGxheVNlc3Npb25TdG9wGD8gASgLMj4ubWcu",
            "cHJvdG9jb2wuc3RhdGlzdGljcy5SZW1vdGVQbGF5SG9zdFNlc3Npb25TdHJl",
            "YW1pbmdTdG9wRGF0YRJECg9zdHJlYW1pbmdTdGF0dXMYQCABKAsyKy5tZy5w",
            "cm90b2NvbC5zdGF0aXN0aWNzLlN0cmVhbWluZ1N0YXR1c0RhdGEingIKBUV2",
            "ZW50EgwKBHR5cGUYASACKAkSDQoFc2VxSWQYAiABKA0SEwoLY3JlYXRlZERh",
            "dGUYAyABKAkSEAoIY29udGV4dHMYBCADKA0SNAoDb2JqGAUgASgLMicubWcu",
            "cHJvdG9jb2wuc3RhdGlzdGljcy5FdmVudE9iamVjdERhdGESNwoIdHlwZURh",
            "dGEYBiABKAsyJS5tZy5wcm90b2NvbC5zdGF0aXN0aWNzLkV2ZW50VHlwZURh",
            "dGESEwoLYnVpbGROdW1iZXIYByABKA0SFQoNY2xpZW50VmVyc2lvbhgIIAEo",
            "CRISCgpvd25lZEdhbWVzGAwgASgNEhAKCHVzZXJUeXBlGA0gASgJEhAKCG1B",
            "Y2NvdW50GA4gASgIInUKD1RyYWNraW5nU2Vzc2lvbhIvCghlbmRFdmVudBgB",
            "IAEoCzIdLm1nLnByb3RvY29sLnN0YXRpc3RpY3MuRXZlbnQSFgoOcnVudGlt",
            "ZVNlY29uZHMYAiABKAQSGQoRc2Vjb25kc1NpbmNlU3RhcnQYAyABKA0i8wEK",
            "EVN0YXRpc3RpY3NTZXNzaW9uEi0KBmV2ZW50cxgBIAMoCzIdLm1nLnByb3Rv",
            "Y29sLnN0YXRpc3RpY3MuRXZlbnQSEwoLYnVpbGROdW1iZXIYAiABKA0SEQoJ",
            "YWNjb3VudElkGAMgASgJEhEKCXNlc3Npb25JZBgEIAEoCRIWCg5uZXh0U2Vx",
            "dWVuY2VJZBgFIAEoDRJBChB0cmFja2luZ1Nlc3Npb25zGAYgAygLMicubWcu",
            "cHJvdG9jb2wuc3RhdGlzdGljcy5UcmFja2luZ1Nlc3Npb24SGQoRc2Vjb25k",
            "c1NpbmNlU3RhcnQYByABKA0ibQoPU3RhdGlzdGljc0NhY2hlEg8KB3ZlcnNp",
            "b24YASACKA0SOwoIc2Vzc2lvbnMYAiADKAsyKS5tZy5wcm90b2NvbC5zdGF0",
            "aXN0aWNzLlN0YXRpc3RpY3NTZXNzaW9uEgwKBGRhdGUYAyABKAk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.GameStartTypeData), global::Uplay.Statistics.GameStartTypeData.Parser, new[]{ "MachineId", "BuildVersion", "GameVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.GameLocalizationTypeData), global::Uplay.Statistics.GameLocalizationTypeData.Parser, new[]{ "AreSubtitlesEnabled", "GameLanguage", "PlatformLocale", "SubtitlesLanguage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.ContextStartTypeData), global::Uplay.Statistics.ContextStartTypeData.Parser, new[]{ "ContextType", "ContextName", "ContextId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.ContextStopTypeData), global::Uplay.Statistics.ContextStopTypeData.Parser, new[]{ "ContextType", "ContextName", "ContextDuration", "ContextId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.GameEndObjectData), global::Uplay.Statistics.GameEndObjectData.Parser, new[]{ "GameLength", "NbScreenshots", "NbUnitsWon", "NbAchievmentsUnlocked", "ProductId", "ActivationIds", "NbParties", "Brand", "OpenOverlayCount", "GeneratedFromCache", "ShopVisible" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.DLErrorObjectData), global::Uplay.Statistics.DLErrorObjectData.Parser, new[]{ "DlSessionId", "ProductId", "ErrorSource", "Context", "ErrorCode", "NbOccurences", "Brand", "Category" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.DecompressSliceErrorObjectData), global::Uplay.Statistics.DecompressSliceErrorObjectData.Parser, new[]{ "ProductId", "ManifestSHA1", "FilePath", "SliceOffsetInFile", "SliceSize", "CompressionMethod", "ErrorCode", "Source", "SliceFilename" }, null, new[]{ typeof(global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.CompressionMethod), typeof(global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.Source) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.FollowLinkObjectData), global::Uplay.Statistics.FollowLinkObjectData.Parser, new[]{ "Sender", "LinkUrl", "Target", "MetaTag", "VisualAsset", "LinkResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.GameLaunchObjectData), global::Uplay.Statistics.GameLaunchObjectData.Parser, new[]{ "ProductId", "LaunchMethod", "GameStarterTime", "InputSource", "SteamAccount", "Brand", "ActivationIds", "ShopVisible", "ProductActivated", "MachineGuid", "LaunchPartner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.AppQuitObjectData), global::Uplay.Statistics.AppQuitObjectData.Parser, new[]{ "QuitReason", "SecondsSinceStart", "DemuxConnectionFailureCount", "DiscardedEventsCount", "GeneratedFromCache", "ShopVisible" }, null, new[]{ typeof(global::Uplay.Statistics.AppQuitObjectData.Types.QuitReason) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.GameCloudSaveSyncObjectData), global::Uplay.Statistics.GameCloudSaveSyncObjectData.Parser, new[]{ "ProductId", "MachineId", "When", "Direction", "Conflict", "Error", "Resolution", "BytesSent", "Brand" }, null, new[]{ typeof(global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.When), typeof(global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Direction), typeof(global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Conflict), typeof(global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Error), typeof(global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Resolution) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SettingChangedObjectData), global::Uplay.Statistics.SettingChangedObjectData.Parser, new[]{ "SettingName", "OldValue", "NewValue", "Sender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.ShopAddToCartObjectData), global::Uplay.Statistics.ShopAddToCartObjectData.Parser, new[]{ "ProductId", "GameId", "TitleId", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.UINavObjectData), global::Uplay.Statistics.UINavObjectData.Parser, new[]{ "Id", "Index", "TimeOnFocus", "TimeOnBlur", "GeneratedFromCache", "ShopVisible" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.BattlePassActionObjectData), global::Uplay.Statistics.BattlePassActionObjectData.Parser, new[]{ "Action", "Details", "Endstatus", "GameId", "BrandId", "ViewSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.AppStartObjectData), global::Uplay.Statistics.AppStartObjectData.Parser, new[]{ "LaunchMethod", "MachineId", "FileVersion", "PatchTime", "LoginTime", "ConfigTime", "OptInPatch", "OfflineStart", "AuthType", "ShopVisible", "VerifiedEmail", "TwoFAtype", "TrustedDevice", "VerifiedPhone", "ClientLanguage" }, null, new[]{ typeof(global::Uplay.Statistics.AppStartObjectData.Types.AuthType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.DownloadObjectData), global::Uplay.Statistics.DownloadObjectData.Parser, new[]{ "DlSessionId", "Contract", "ContentType", "IsResuming", "ProductId", "PatchDL", "DlSize", "OverheadWaste", "OverheadMetadata", "OverheadTotal", "TotalExpectedSize", "TotalDLSize", "MilestoneDLTime", "TotalDLTime", "AvgDLSpeed", "MaxDLSpeed", "NbTimesPaused", "EndStatus", "FailReason", "UserSpeedLimit", "ActivationIds", "Brand", "InitiatedFrom", "InstallerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.HardwareScoreData), global::Uplay.Statistics.HardwareScoreData.Parser, new[]{ "CpuScore", "GpuScore", "CpuName", "GpuName", "RamSize", "GpuScoreConfidenceLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.GPUInfo), global::Uplay.Statistics.GPUInfo.Parser, new[]{ "Name", "VendorId", "DeviceId", "Vram", "DxVersion", "DriverVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SoundDeviceInfo), global::Uplay.Statistics.SoundDeviceInfo.Parser, new[]{ "Name", "VendorId", "DeviceId", "DriverVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.PhysicalDrive), global::Uplay.Statistics.PhysicalDrive.Parser, new[]{ "Model", "DeviceId", "Size", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.USBDevice), global::Uplay.Statistics.USBDevice.Parser, new[]{ "Name", "VendorId", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.MachineConfObjectData), global::Uplay.Statistics.MachineConfObjectData.Parser, new[]{ "MachineGuid", "RamSize", "RamType", "CpuCount", "CpuCores", "CpuThreads", "CpuName", "CpuHSI", "CpuDetectedSpeed", "GpuCount", "GpuName", "GpuVendor", "GpuDXVersion", "GpuVram", "Monitor1", "Monitor2", "HddCount", "HddTotSpace", "HddFreeSpace", "OsName", "OsBits", "OsRegion", "SoundCard", "NetBandwidth", "CpuScore", "GpuScore", "Microphone", "Gamepad", "DetectionTime", "OsVersion", "Uuid", "CountryCode", "CpuCacheL1", "CpuCacheL2", "CpuCacheL3", "CpuDescription", "NetAdapterType", "NetVendorId", "NetDeviceId", "MotherboardChipset", "Firewall", "Gpu", "SoundDevice", "PhysicalDrive", "UsbDevice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.HttpServiceRequestObjectData), global::Uplay.Statistics.HttpServiceRequestObjectData.Parser, new[]{ "Url", "Name", "ResponseCode", "ConnectTime", "RequestTime", "TotTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.ImportSteamFriendsObjectData), global::Uplay.Statistics.ImportSteamFriendsObjectData.Parser, new[]{ "TotSteamFriends", "FriendsImported", "SteamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.ActivateProductObjectData), global::Uplay.Statistics.ActivateProductObjectData.Parser, new[]{ "PackageId", "GameId", "BrandId", "FailReason", "NbKeyAttempts", "Banned", "ActivationTime", "InitiatedFrom", "CurrentGroup", "PreviousGroup", "NbNormalGames", "NbSteamGames", "ProductType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.PartyObjectData), global::Uplay.Statistics.PartyObjectData.Parser, new[]{ "PartyId", "JoinedParty", "LeftParty", "IsInitiator", "DeclinedParty", "ProductId", "ActivationIds", "BrandId", "MaxPartyMembers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.AccountCreationObjectData), global::Uplay.Statistics.AccountCreationObjectData.Parser, new[]{ "EndStatus", "FailReason", "ErrorCodes", "InitiatedFrom", "InstallerId" }, null, new[]{ typeof(global::Uplay.Statistics.AccountCreationObjectData.Types.EndStatus), typeof(global::Uplay.Statistics.AccountCreationObjectData.Types.FailReason) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.FriendActionObjectData), global::Uplay.Statistics.FriendActionObjectData.Parser, new[]{ "Action", "FriendId", "ProductId", "BrandId", "InputSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.FriendSuggestionActionObjectData), global::Uplay.Statistics.FriendSuggestionActionObjectData.Parser, new[]{ "Action", "FriendId", "SuggestionType", "InputSource", "BrandId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.FriendSuggestionImpressionObjectData), global::Uplay.Statistics.FriendSuggestionImpressionObjectData.Parser, new[]{ "FriendId", "SuggestionType", "InputSource", "BrandId", "SugRank" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.RedeemRewardObjectData), global::Uplay.Statistics.RedeemRewardObjectData.Parser, new[]{ "UnitCost", "RewardId", "SourcePage", "ProductId", "ActivationIds", "BrandId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingSessionObjectData), global::Uplay.Statistics.StreamingSessionObjectData.Parser, new[]{ "GameVolume", "MicVolume", "Paused", "StartTime", "EndTime", "CopyUrl", "StartMethod", "MaxNbViewers", "GameId", "BrandId", "StreamingTime", "ServiceName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.AccountLinkingObjectData), global::Uplay.Statistics.AccountLinkingObjectData.Parser, new[]{ "ThirdPartyName", "Success", "ThirdPartyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.ChatSessionObjectData), global::Uplay.Statistics.ChatSessionObjectData.Parser, new[]{ "ConversationId", "MsgSent", "MsgReceived", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.ChallengeActionObjectData), global::Uplay.Statistics.ChallengeActionObjectData.Parser, new[]{ "ProductId", "ActivationIds", "BrandId", "Action", "PoolId", "ChallengeId", "Expired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.NewsClickObjectData), global::Uplay.Statistics.NewsClickObjectData.Parser, new[]{ "IgnId", "ViewName", "DisplayType", "BrandId", "ProductId", "Layout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.NewsOpenObjectData), global::Uplay.Statistics.NewsOpenObjectData.Parser, new[]{ "IgnId", "Sender", "SenderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.NewsImpressionObjectData), global::Uplay.Statistics.NewsImpressionObjectData.Parser, new[]{ "IgnId", "ViewName", "DisplayType", "BrandId", "ProductId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.AdImpressionObjectData), global::Uplay.Statistics.AdImpressionObjectData.Parser, new[]{ "LinkUrl", "MetaTag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.PromoTabInteractionObjectData), global::Uplay.Statistics.PromoTabInteractionObjectData.Parser, new[]{ "TabName", "InteractionType", "Target", "SectionName", "BrandId", "Url", "ClientLanguage", "OwnScenario" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.NewsInteractionObjectData), global::Uplay.Statistics.NewsInteractionObjectData.Parser, new[]{ "IgnId", "InteractionType", "Target", "ViewName", "BrandId", "ProductId", "Url", "Layout", "BetaCode", "BetaPhaseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.TicketRenewalFailureObjectData), global::Uplay.Statistics.TicketRenewalFailureObjectData.Parser, new[]{ "FailRenewalCount", "ResultHttpCode", "IsRememberMeTicket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.GroupActionObjectData), global::Uplay.Statistics.GroupActionObjectData.Parser, new[]{ "Action", "GroupId", "InviteeId", "GroupName", "GroupPreviousName", "ProductId", "BrandId", "InputSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.IngameShopImpressionObjectData), global::Uplay.Statistics.IngameShopImpressionObjectData.Parser, new[]{ "AssetUrl", "ViewName", "GameId", "BrandId", "ShopId", "MarketId", "CountryId", "ProductId", "ShopProductId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.IngameShopActionObjectData), global::Uplay.Statistics.IngameShopActionObjectData.Parser, new[]{ "GameId", "BrandId", "ShopId", "MarketId", "CountryId", "ProductId", "ShopProductId", "PspId", "PromoId", "FilterId", "ItemCategory", "Result", "Action", "Source" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.DiagnosticObjectData), global::Uplay.Statistics.DiagnosticObjectData.Parser, new[]{ "CustomData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.EmailVerificationObjectData), global::Uplay.Statistics.EmailVerificationObjectData.Parser, new[]{ "Action", "InputSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.TwoFAActivationObjectData), global::Uplay.Statistics.TwoFAActivationObjectData.Parser, new[]{ "Action", "InputSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.PhoneSecurityObjectData), global::Uplay.Statistics.PhoneSecurityObjectData.Parser, new[]{ "Action", "InputSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SendSmsTrackEventActionObjectData), global::Uplay.Statistics.SendSmsTrackEventActionObjectData.Parser, new[]{ "Action", "InputSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.PopUpDisplayEventObjectData), global::Uplay.Statistics.PopUpDisplayEventObjectData.Parser, new[]{ "PopUpName", "ViewName", "FinalState", "ContentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.TrustedDeviceActionData), global::Uplay.Statistics.TrustedDeviceActionData.Parser, new[]{ "Action", "MachineId", "DefaultFriendlyName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SharePlayHostSessionStreamingStartData), global::Uplay.Statistics.SharePlayHostSessionStreamingStartData.Parser, new[]{ "HostPeerId", "Side", "SpaceIdGame", "StreamingService" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SharePlayHostSessionStreamingStopData), global::Uplay.Statistics.SharePlayHostSessionStreamingStopData.Parser, new[]{ "HostPeerId", "Side", "Reason", "SpaceIdGame", "StreamingService" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SharePlayOnboardingData), global::Uplay.Statistics.SharePlayOnboardingData.Parser, new[]{ "SourceTrackingData", "Reason", "Step" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SharePlayHostPageData), global::Uplay.Statistics.SharePlayHostPageData.Parser, new[]{ "SourceTrackingData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SharePlayGuestInvitationData), global::Uplay.Statistics.SharePlayGuestInvitationData.Parser, new[]{ "InvitationSource", "InvitationStatus", "InvitationSentTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SharePlayHostInvitationData), global::Uplay.Statistics.SharePlayHostInvitationData.Parser, new[]{ "InvitationTarget", "InvitationStatus", "InvitationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SharePlayHostErrorData), global::Uplay.Statistics.SharePlayHostErrorData.Parser, new[]{ "ErrorType", "ErrorName", "ErrorSource", "InvitationId", "HostStreamId", "GuestStreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.SharePlayHostSettingsData), global::Uplay.Statistics.SharePlayHostSettingsData.Parser, new[]{ "Bitrate", "MouseAndKeyboardAccessAllowed", "GamepadAccessAllowed", "SourceTrackingData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingHostStartSessionData), global::Uplay.Statistics.StreamingHostStartSessionData.Parser, new[]{ "HostPeerId", "Side", "SpaceIdGame", "BitrateMbps", "Resolution", "Fps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingHostStopSessionData), global::Uplay.Statistics.StreamingHostStopSessionData.Parser, new[]{ "HostPeerId", "Side", "SpaceIdGame", "Reason", "BitrateMbps", "Resolution", "Fps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingHostSessionSettingsChanged), global::Uplay.Statistics.StreamingHostSessionSettingsChanged.Parser, new[]{ "Sender", "SettingName", "NewValue", "OldValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingErrorData), global::Uplay.Statistics.StreamingErrorData.Parser, new[]{ "ErrorName", "ErrorType", "HostPeerId", "Side" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingStatusData), global::Uplay.Statistics.StreamingStatusData.Parser, new[]{ "Status", "HostPeerId", "Side", "StreamingService", "SpaceIdGame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingFeedBackData), global::Uplay.Statistics.StreamingFeedBackData.Parser, new[]{ "AudioIssue", "InputLag", "InvitationFailed", "Other", "PoorConnection", "Rating", "InputSource", "Brand", "InvitationId", "HostPerformanceIssue", "GuestPerformanceIssue", "PoorGuestBehavior", "VideoIssue", "Side", "UserType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingHostOutOfFocusStartData), global::Uplay.Statistics.StreamingHostOutOfFocusStartData.Parser, new[]{ "HostPeerId", "Side", "SpaceIdGame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingHostOutOfFocusStopData), global::Uplay.Statistics.StreamingHostOutOfFocusStopData.Parser, new[]{ "HostPeerId", "Side", "SpaceIdGame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingVGPEvent), global::Uplay.Statistics.StreamingVGPEvent.Parser, new[]{ "DeviceId", "DeviceName", "DeviceType", "GuestProfileId", "HostPeerId", "Side", "SpaceIdGame", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StreamingHostLinkCreatedEvent), global::Uplay.Statistics.StreamingHostLinkCreatedEvent.Parser, new[]{ "HostPeerId", "SpaceIdGame", "Source" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.EventTypeData), global::Uplay.Statistics.EventTypeData.Parser, new[]{ "GameStart", "GameLocalization", "ContextStart", "ContextStop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.RemotePlayHostSessionStreamingStartData), global::Uplay.Statistics.RemotePlayHostSessionStreamingStartData.Parser, new[]{ "HostPeerId", "Side", "SpaceIdGame", "StreamingService" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.RemotePlayHostSessionStreamingStopData), global::Uplay.Statistics.RemotePlayHostSessionStreamingStopData.Parser, new[]{ "HostPeerId", "Side", "SpaceIdGame", "StreamingService" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.EventObjectData), global::Uplay.Statistics.EventObjectData.Parser, new[]{ "GameLaunch", "UiNav", "AppStart", "Download", "FollowLink", "GameCloudSaveSync", "SettingChanged", "MachineConf", "DlError", "AppQuit", "DecompressSliceError", "GameEnd", "HttpServiceRequest", "ImportSteamFriends", "ActivateProduct", "FriendAction", "RedeemReward", "AccountCreation", "StreamingSession", "AccountLinking", "ChatSession", "Party", "ChallengeAction", "NewsClick", "NewsImpression", "NewsInteraction", "ShopAddToCart", "TicketRenewalFailure", "GroupAction", "Diagnostic", "IngameShopAction", "IngameShopImpression", "PromoTabInteraction", "EmailVerification", "TwoFAActivation", "AdImpression", "PopUpDisplayEvent", "NewsOpen", "BattlePassAction", "TrustedDeviceAction", "FriendSuggestionAction", "FriendSuggestionImpression", "PhoneSecurity", "SendSmsAction", "SharePlaySessionStart", "SharePlaySessionStop", "SharePlayHostPage", "SharePlayGuestInvitation", "SharePlayHostInvitation", "SharePlayHostError", "SharePlayHostSettings", "SharePlayOnboarding", "StreamingHostOutOfFocusStart", "StreamingHostOutOfFocusStop", "StreamingFeedBack", "StreamingHostStartSession", "StreamingHostStopSession", "StreamingError", "StreamingHostSessionSettings", "StreamingVGPEvent", "StreamingHostLinkCreated", "RemotePlaySessionStart", "RemotePlaySessionStop", "StreamingStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.Event), global::Uplay.Statistics.Event.Parser, new[]{ "Type", "SeqId", "CreatedDate", "Contexts", "Obj", "TypeData", "BuildNumber", "ClientVersion", "OwnedGames", "UserType", "MAccount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.TrackingSession), global::Uplay.Statistics.TrackingSession.Parser, new[]{ "EndEvent", "RuntimeSeconds", "SecondsSinceStart" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StatisticsSession), global::Uplay.Statistics.StatisticsSession.Parser, new[]{ "Events", "BuildNumber", "AccountId", "SessionId", "NextSequenceId", "TrackingSessions", "SecondsSinceStart" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Statistics.StatisticsCache), global::Uplay.Statistics.StatisticsCache.Parser, new[]{ "Version", "Sessions", "Date" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GameStartTypeData : pb::IMessage<GameStartTypeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameStartTypeData> _parser = new pb::MessageParser<GameStartTypeData>(() => new GameStartTypeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameStartTypeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameStartTypeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameStartTypeData(GameStartTypeData other) : this() {
      machineId_ = other.machineId_;
      buildVersion_ = other.buildVersion_;
      gameVersion_ = other.gameVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameStartTypeData Clone() {
      return new GameStartTypeData(this);
    }

    /// <summary>Field number for the "machineId" field.</summary>
    public const int MachineIdFieldNumber = 1;
    private readonly static string MachineIdDefaultValue = "";

    private string machineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineId {
      get { return machineId_ ?? MachineIdDefaultValue; }
      set {
        machineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "machineId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMachineId {
      get { return machineId_ != null; }
    }
    /// <summary>Clears the value of the "machineId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMachineId() {
      machineId_ = null;
    }

    /// <summary>Field number for the "buildVersion" field.</summary>
    public const int BuildVersionFieldNumber = 2;
    private readonly static string BuildVersionDefaultValue = "";

    private string buildVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BuildVersion {
      get { return buildVersion_ ?? BuildVersionDefaultValue; }
      set {
        buildVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "buildVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildVersion {
      get { return buildVersion_ != null; }
    }
    /// <summary>Clears the value of the "buildVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildVersion() {
      buildVersion_ = null;
    }

    /// <summary>Field number for the "gameVersion" field.</summary>
    public const int GameVersionFieldNumber = 3;
    private readonly static string GameVersionDefaultValue = "";

    private string gameVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameVersion {
      get { return gameVersion_ ?? GameVersionDefaultValue; }
      set {
        gameVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gameVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameVersion {
      get { return gameVersion_ != null; }
    }
    /// <summary>Clears the value of the "gameVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameVersion() {
      gameVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameStartTypeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameStartTypeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MachineId != other.MachineId) return false;
      if (BuildVersion != other.BuildVersion) return false;
      if (GameVersion != other.GameVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMachineId) hash ^= MachineId.GetHashCode();
      if (HasBuildVersion) hash ^= BuildVersion.GetHashCode();
      if (HasGameVersion) hash ^= GameVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMachineId) {
        output.WriteRawTag(10);
        output.WriteString(MachineId);
      }
      if (HasBuildVersion) {
        output.WriteRawTag(18);
        output.WriteString(BuildVersion);
      }
      if (HasGameVersion) {
        output.WriteRawTag(26);
        output.WriteString(GameVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMachineId) {
        output.WriteRawTag(10);
        output.WriteString(MachineId);
      }
      if (HasBuildVersion) {
        output.WriteRawTag(18);
        output.WriteString(BuildVersion);
      }
      if (HasGameVersion) {
        output.WriteRawTag(26);
        output.WriteString(GameVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMachineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineId);
      }
      if (HasBuildVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildVersion);
      }
      if (HasGameVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameStartTypeData other) {
      if (other == null) {
        return;
      }
      if (other.HasMachineId) {
        MachineId = other.MachineId;
      }
      if (other.HasBuildVersion) {
        BuildVersion = other.BuildVersion;
      }
      if (other.HasGameVersion) {
        GameVersion = other.GameVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MachineId = input.ReadString();
            break;
          }
          case 18: {
            BuildVersion = input.ReadString();
            break;
          }
          case 26: {
            GameVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MachineId = input.ReadString();
            break;
          }
          case 18: {
            BuildVersion = input.ReadString();
            break;
          }
          case 26: {
            GameVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameLocalizationTypeData : pb::IMessage<GameLocalizationTypeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameLocalizationTypeData> _parser = new pb::MessageParser<GameLocalizationTypeData>(() => new GameLocalizationTypeData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameLocalizationTypeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameLocalizationTypeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameLocalizationTypeData(GameLocalizationTypeData other) : this() {
      _hasBits0 = other._hasBits0;
      areSubtitlesEnabled_ = other.areSubtitlesEnabled_;
      gameLanguage_ = other.gameLanguage_;
      platformLocale_ = other.platformLocale_;
      subtitlesLanguage_ = other.subtitlesLanguage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameLocalizationTypeData Clone() {
      return new GameLocalizationTypeData(this);
    }

    /// <summary>Field number for the "areSubtitlesEnabled" field.</summary>
    public const int AreSubtitlesEnabledFieldNumber = 1;
    private readonly static bool AreSubtitlesEnabledDefaultValue = false;

    private bool areSubtitlesEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AreSubtitlesEnabled {
      get { if ((_hasBits0 & 1) != 0) { return areSubtitlesEnabled_; } else { return AreSubtitlesEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        areSubtitlesEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "areSubtitlesEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAreSubtitlesEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "areSubtitlesEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAreSubtitlesEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameLanguage" field.</summary>
    public const int GameLanguageFieldNumber = 2;
    private readonly static string GameLanguageDefaultValue = "";

    private string gameLanguage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameLanguage {
      get { return gameLanguage_ ?? GameLanguageDefaultValue; }
      set {
        gameLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gameLanguage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameLanguage {
      get { return gameLanguage_ != null; }
    }
    /// <summary>Clears the value of the "gameLanguage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameLanguage() {
      gameLanguage_ = null;
    }

    /// <summary>Field number for the "platformLocale" field.</summary>
    public const int PlatformLocaleFieldNumber = 3;
    private readonly static string PlatformLocaleDefaultValue = "";

    private string platformLocale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlatformLocale {
      get { return platformLocale_ ?? PlatformLocaleDefaultValue; }
      set {
        platformLocale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platformLocale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatformLocale {
      get { return platformLocale_ != null; }
    }
    /// <summary>Clears the value of the "platformLocale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatformLocale() {
      platformLocale_ = null;
    }

    /// <summary>Field number for the "subtitlesLanguage" field.</summary>
    public const int SubtitlesLanguageFieldNumber = 4;
    private readonly static string SubtitlesLanguageDefaultValue = "";

    private string subtitlesLanguage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubtitlesLanguage {
      get { return subtitlesLanguage_ ?? SubtitlesLanguageDefaultValue; }
      set {
        subtitlesLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtitlesLanguage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubtitlesLanguage {
      get { return subtitlesLanguage_ != null; }
    }
    /// <summary>Clears the value of the "subtitlesLanguage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubtitlesLanguage() {
      subtitlesLanguage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameLocalizationTypeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameLocalizationTypeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreSubtitlesEnabled != other.AreSubtitlesEnabled) return false;
      if (GameLanguage != other.GameLanguage) return false;
      if (PlatformLocale != other.PlatformLocale) return false;
      if (SubtitlesLanguage != other.SubtitlesLanguage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAreSubtitlesEnabled) hash ^= AreSubtitlesEnabled.GetHashCode();
      if (HasGameLanguage) hash ^= GameLanguage.GetHashCode();
      if (HasPlatformLocale) hash ^= PlatformLocale.GetHashCode();
      if (HasSubtitlesLanguage) hash ^= SubtitlesLanguage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAreSubtitlesEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(AreSubtitlesEnabled);
      }
      if (HasGameLanguage) {
        output.WriteRawTag(18);
        output.WriteString(GameLanguage);
      }
      if (HasPlatformLocale) {
        output.WriteRawTag(26);
        output.WriteString(PlatformLocale);
      }
      if (HasSubtitlesLanguage) {
        output.WriteRawTag(34);
        output.WriteString(SubtitlesLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAreSubtitlesEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(AreSubtitlesEnabled);
      }
      if (HasGameLanguage) {
        output.WriteRawTag(18);
        output.WriteString(GameLanguage);
      }
      if (HasPlatformLocale) {
        output.WriteRawTag(26);
        output.WriteString(PlatformLocale);
      }
      if (HasSubtitlesLanguage) {
        output.WriteRawTag(34);
        output.WriteString(SubtitlesLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAreSubtitlesEnabled) {
        size += 1 + 1;
      }
      if (HasGameLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameLanguage);
      }
      if (HasPlatformLocale) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformLocale);
      }
      if (HasSubtitlesLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubtitlesLanguage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameLocalizationTypeData other) {
      if (other == null) {
        return;
      }
      if (other.HasAreSubtitlesEnabled) {
        AreSubtitlesEnabled = other.AreSubtitlesEnabled;
      }
      if (other.HasGameLanguage) {
        GameLanguage = other.GameLanguage;
      }
      if (other.HasPlatformLocale) {
        PlatformLocale = other.PlatformLocale;
      }
      if (other.HasSubtitlesLanguage) {
        SubtitlesLanguage = other.SubtitlesLanguage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreSubtitlesEnabled = input.ReadBool();
            break;
          }
          case 18: {
            GameLanguage = input.ReadString();
            break;
          }
          case 26: {
            PlatformLocale = input.ReadString();
            break;
          }
          case 34: {
            SubtitlesLanguage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AreSubtitlesEnabled = input.ReadBool();
            break;
          }
          case 18: {
            GameLanguage = input.ReadString();
            break;
          }
          case 26: {
            PlatformLocale = input.ReadString();
            break;
          }
          case 34: {
            SubtitlesLanguage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ContextStartTypeData : pb::IMessage<ContextStartTypeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContextStartTypeData> _parser = new pb::MessageParser<ContextStartTypeData>(() => new ContextStartTypeData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ContextStartTypeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextStartTypeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextStartTypeData(ContextStartTypeData other) : this() {
      _hasBits0 = other._hasBits0;
      contextType_ = other.contextType_;
      contextName_ = other.contextName_;
      contextId_ = other.contextId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextStartTypeData Clone() {
      return new ContextStartTypeData(this);
    }

    /// <summary>Field number for the "contextType" field.</summary>
    public const int ContextTypeFieldNumber = 1;
    private readonly static string ContextTypeDefaultValue = "";

    private string contextType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContextType {
      get { return contextType_ ?? ContextTypeDefaultValue; }
      set {
        contextType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contextType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContextType {
      get { return contextType_ != null; }
    }
    /// <summary>Clears the value of the "contextType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContextType() {
      contextType_ = null;
    }

    /// <summary>Field number for the "contextName" field.</summary>
    public const int ContextNameFieldNumber = 2;
    private readonly static string ContextNameDefaultValue = "";

    private string contextName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContextName {
      get { return contextName_ ?? ContextNameDefaultValue; }
      set {
        contextName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contextName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContextName {
      get { return contextName_ != null; }
    }
    /// <summary>Clears the value of the "contextName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContextName() {
      contextName_ = null;
    }

    /// <summary>Field number for the "contextId" field.</summary>
    public const int ContextIdFieldNumber = 3;
    private readonly static uint ContextIdDefaultValue = 0;

    private uint contextId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ContextId {
      get { if ((_hasBits0 & 1) != 0) { return contextId_; } else { return ContextIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        contextId_ = value;
      }
    }
    /// <summary>Gets whether the "contextId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContextId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "contextId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContextId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ContextStartTypeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ContextStartTypeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContextType != other.ContextType) return false;
      if (ContextName != other.ContextName) return false;
      if (ContextId != other.ContextId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasContextType) hash ^= ContextType.GetHashCode();
      if (HasContextName) hash ^= ContextName.GetHashCode();
      if (HasContextId) hash ^= ContextId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasContextType) {
        output.WriteRawTag(10);
        output.WriteString(ContextType);
      }
      if (HasContextName) {
        output.WriteRawTag(18);
        output.WriteString(ContextName);
      }
      if (HasContextId) {
        output.WriteRawTag(24);
        output.WriteUInt32(ContextId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasContextType) {
        output.WriteRawTag(10);
        output.WriteString(ContextType);
      }
      if (HasContextName) {
        output.WriteRawTag(18);
        output.WriteString(ContextName);
      }
      if (HasContextId) {
        output.WriteRawTag(24);
        output.WriteUInt32(ContextId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasContextType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContextType);
      }
      if (HasContextName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContextName);
      }
      if (HasContextId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContextId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ContextStartTypeData other) {
      if (other == null) {
        return;
      }
      if (other.HasContextType) {
        ContextType = other.ContextType;
      }
      if (other.HasContextName) {
        ContextName = other.ContextName;
      }
      if (other.HasContextId) {
        ContextId = other.ContextId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContextType = input.ReadString();
            break;
          }
          case 18: {
            ContextName = input.ReadString();
            break;
          }
          case 24: {
            ContextId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContextType = input.ReadString();
            break;
          }
          case 18: {
            ContextName = input.ReadString();
            break;
          }
          case 24: {
            ContextId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ContextStopTypeData : pb::IMessage<ContextStopTypeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContextStopTypeData> _parser = new pb::MessageParser<ContextStopTypeData>(() => new ContextStopTypeData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ContextStopTypeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextStopTypeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextStopTypeData(ContextStopTypeData other) : this() {
      _hasBits0 = other._hasBits0;
      contextType_ = other.contextType_;
      contextName_ = other.contextName_;
      contextDuration_ = other.contextDuration_;
      contextId_ = other.contextId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextStopTypeData Clone() {
      return new ContextStopTypeData(this);
    }

    /// <summary>Field number for the "contextType" field.</summary>
    public const int ContextTypeFieldNumber = 1;
    private readonly static string ContextTypeDefaultValue = "";

    private string contextType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContextType {
      get { return contextType_ ?? ContextTypeDefaultValue; }
      set {
        contextType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contextType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContextType {
      get { return contextType_ != null; }
    }
    /// <summary>Clears the value of the "contextType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContextType() {
      contextType_ = null;
    }

    /// <summary>Field number for the "contextName" field.</summary>
    public const int ContextNameFieldNumber = 2;
    private readonly static string ContextNameDefaultValue = "";

    private string contextName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContextName {
      get { return contextName_ ?? ContextNameDefaultValue; }
      set {
        contextName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contextName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContextName {
      get { return contextName_ != null; }
    }
    /// <summary>Clears the value of the "contextName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContextName() {
      contextName_ = null;
    }

    /// <summary>Field number for the "contextDuration" field.</summary>
    public const int ContextDurationFieldNumber = 3;
    private readonly static uint ContextDurationDefaultValue = 0;

    private uint contextDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ContextDuration {
      get { if ((_hasBits0 & 1) != 0) { return contextDuration_; } else { return ContextDurationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        contextDuration_ = value;
      }
    }
    /// <summary>Gets whether the "contextDuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContextDuration {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "contextDuration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContextDuration() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "contextId" field.</summary>
    public const int ContextIdFieldNumber = 4;
    private readonly static uint ContextIdDefaultValue = 0;

    private uint contextId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ContextId {
      get { if ((_hasBits0 & 2) != 0) { return contextId_; } else { return ContextIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        contextId_ = value;
      }
    }
    /// <summary>Gets whether the "contextId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContextId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "contextId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContextId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ContextStopTypeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ContextStopTypeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContextType != other.ContextType) return false;
      if (ContextName != other.ContextName) return false;
      if (ContextDuration != other.ContextDuration) return false;
      if (ContextId != other.ContextId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasContextType) hash ^= ContextType.GetHashCode();
      if (HasContextName) hash ^= ContextName.GetHashCode();
      if (HasContextDuration) hash ^= ContextDuration.GetHashCode();
      if (HasContextId) hash ^= ContextId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasContextType) {
        output.WriteRawTag(10);
        output.WriteString(ContextType);
      }
      if (HasContextName) {
        output.WriteRawTag(18);
        output.WriteString(ContextName);
      }
      if (HasContextDuration) {
        output.WriteRawTag(24);
        output.WriteUInt32(ContextDuration);
      }
      if (HasContextId) {
        output.WriteRawTag(32);
        output.WriteUInt32(ContextId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasContextType) {
        output.WriteRawTag(10);
        output.WriteString(ContextType);
      }
      if (HasContextName) {
        output.WriteRawTag(18);
        output.WriteString(ContextName);
      }
      if (HasContextDuration) {
        output.WriteRawTag(24);
        output.WriteUInt32(ContextDuration);
      }
      if (HasContextId) {
        output.WriteRawTag(32);
        output.WriteUInt32(ContextId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasContextType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContextType);
      }
      if (HasContextName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContextName);
      }
      if (HasContextDuration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContextDuration);
      }
      if (HasContextId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContextId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ContextStopTypeData other) {
      if (other == null) {
        return;
      }
      if (other.HasContextType) {
        ContextType = other.ContextType;
      }
      if (other.HasContextName) {
        ContextName = other.ContextName;
      }
      if (other.HasContextDuration) {
        ContextDuration = other.ContextDuration;
      }
      if (other.HasContextId) {
        ContextId = other.ContextId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContextType = input.ReadString();
            break;
          }
          case 18: {
            ContextName = input.ReadString();
            break;
          }
          case 24: {
            ContextDuration = input.ReadUInt32();
            break;
          }
          case 32: {
            ContextId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContextType = input.ReadString();
            break;
          }
          case 18: {
            ContextName = input.ReadString();
            break;
          }
          case 24: {
            ContextDuration = input.ReadUInt32();
            break;
          }
          case 32: {
            ContextId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameEndObjectData : pb::IMessage<GameEndObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameEndObjectData> _parser = new pb::MessageParser<GameEndObjectData>(() => new GameEndObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameEndObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEndObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEndObjectData(GameEndObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      gameLength_ = other.gameLength_;
      nbScreenshots_ = other.nbScreenshots_;
      nbUnitsWon_ = other.nbUnitsWon_;
      nbAchievmentsUnlocked_ = other.nbAchievmentsUnlocked_;
      productId_ = other.productId_;
      activationIds_ = other.activationIds_;
      nbParties_ = other.nbParties_;
      brand_ = other.brand_;
      openOverlayCount_ = other.openOverlayCount_;
      generatedFromCache_ = other.generatedFromCache_;
      shopVisible_ = other.shopVisible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEndObjectData Clone() {
      return new GameEndObjectData(this);
    }

    /// <summary>Field number for the "gameLength" field.</summary>
    public const int GameLengthFieldNumber = 1;
    private readonly static uint GameLengthDefaultValue = 0;

    private uint gameLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameLength {
      get { if ((_hasBits0 & 1) != 0) { return gameLength_; } else { return GameLengthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameLength_ = value;
      }
    }
    /// <summary>Gets whether the "gameLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameLength {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gameLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameLength() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "nbScreenshots" field.</summary>
    public const int NbScreenshotsFieldNumber = 2;
    private readonly static uint NbScreenshotsDefaultValue = 0;

    private uint nbScreenshots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbScreenshots {
      get { if ((_hasBits0 & 2) != 0) { return nbScreenshots_; } else { return NbScreenshotsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        nbScreenshots_ = value;
      }
    }
    /// <summary>Gets whether the "nbScreenshots" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbScreenshots {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "nbScreenshots" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbScreenshots() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "nbUnitsWon" field.</summary>
    public const int NbUnitsWonFieldNumber = 3;
    private readonly static uint NbUnitsWonDefaultValue = 0;

    private uint nbUnitsWon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbUnitsWon {
      get { if ((_hasBits0 & 4) != 0) { return nbUnitsWon_; } else { return NbUnitsWonDefaultValue; } }
      set {
        _hasBits0 |= 4;
        nbUnitsWon_ = value;
      }
    }
    /// <summary>Gets whether the "nbUnitsWon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbUnitsWon {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "nbUnitsWon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbUnitsWon() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "nbAchievmentsUnlocked" field.</summary>
    public const int NbAchievmentsUnlockedFieldNumber = 4;
    private readonly static uint NbAchievmentsUnlockedDefaultValue = 0;

    private uint nbAchievmentsUnlocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbAchievmentsUnlocked {
      get { if ((_hasBits0 & 8) != 0) { return nbAchievmentsUnlocked_; } else { return NbAchievmentsUnlockedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        nbAchievmentsUnlocked_ = value;
      }
    }
    /// <summary>Gets whether the "nbAchievmentsUnlocked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbAchievmentsUnlocked {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "nbAchievmentsUnlocked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbAchievmentsUnlocked() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 5;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 16) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "activationIds" field.</summary>
    public const int ActivationIdsFieldNumber = 6;
    private readonly static string ActivationIdsDefaultValue = "";

    private string activationIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivationIds {
      get { return activationIds_ ?? ActivationIdsDefaultValue; }
      set {
        activationIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "activationIds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationIds {
      get { return activationIds_ != null; }
    }
    /// <summary>Clears the value of the "activationIds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationIds() {
      activationIds_ = null;
    }

    /// <summary>Field number for the "nbParties" field.</summary>
    public const int NbPartiesFieldNumber = 7;
    private readonly static uint NbPartiesDefaultValue = 0;

    private uint nbParties_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbParties {
      get { if ((_hasBits0 & 32) != 0) { return nbParties_; } else { return NbPartiesDefaultValue; } }
      set {
        _hasBits0 |= 32;
        nbParties_ = value;
      }
    }
    /// <summary>Gets whether the "nbParties" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbParties {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "nbParties" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbParties() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 8;
    private readonly static uint BrandDefaultValue = 0;

    private uint brand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Brand {
      get { if ((_hasBits0 & 64) != 0) { return brand_; } else { return BrandDefaultValue; } }
      set {
        _hasBits0 |= 64;
        brand_ = value;
      }
    }
    /// <summary>Gets whether the "brand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrand {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "brand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrand() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "openOverlayCount" field.</summary>
    public const int OpenOverlayCountFieldNumber = 10;
    private readonly static uint OpenOverlayCountDefaultValue = 0;

    private uint openOverlayCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OpenOverlayCount {
      get { if ((_hasBits0 & 128) != 0) { return openOverlayCount_; } else { return OpenOverlayCountDefaultValue; } }
      set {
        _hasBits0 |= 128;
        openOverlayCount_ = value;
      }
    }
    /// <summary>Gets whether the "openOverlayCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpenOverlayCount {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "openOverlayCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpenOverlayCount() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "generatedFromCache" field.</summary>
    public const int GeneratedFromCacheFieldNumber = 12;
    private readonly static bool GeneratedFromCacheDefaultValue = false;

    private bool generatedFromCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GeneratedFromCache {
      get { if ((_hasBits0 & 256) != 0) { return generatedFromCache_; } else { return GeneratedFromCacheDefaultValue; } }
      set {
        _hasBits0 |= 256;
        generatedFromCache_ = value;
      }
    }
    /// <summary>Gets whether the "generatedFromCache" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGeneratedFromCache {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "generatedFromCache" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGeneratedFromCache() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "shopVisible" field.</summary>
    public const int ShopVisibleFieldNumber = 13;
    private readonly static bool ShopVisibleDefaultValue = false;

    private bool shopVisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShopVisible {
      get { if ((_hasBits0 & 512) != 0) { return shopVisible_; } else { return ShopVisibleDefaultValue; } }
      set {
        _hasBits0 |= 512;
        shopVisible_ = value;
      }
    }
    /// <summary>Gets whether the "shopVisible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopVisible {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "shopVisible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopVisible() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameEndObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameEndObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameLength != other.GameLength) return false;
      if (NbScreenshots != other.NbScreenshots) return false;
      if (NbUnitsWon != other.NbUnitsWon) return false;
      if (NbAchievmentsUnlocked != other.NbAchievmentsUnlocked) return false;
      if (ProductId != other.ProductId) return false;
      if (ActivationIds != other.ActivationIds) return false;
      if (NbParties != other.NbParties) return false;
      if (Brand != other.Brand) return false;
      if (OpenOverlayCount != other.OpenOverlayCount) return false;
      if (GeneratedFromCache != other.GeneratedFromCache) return false;
      if (ShopVisible != other.ShopVisible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameLength) hash ^= GameLength.GetHashCode();
      if (HasNbScreenshots) hash ^= NbScreenshots.GetHashCode();
      if (HasNbUnitsWon) hash ^= NbUnitsWon.GetHashCode();
      if (HasNbAchievmentsUnlocked) hash ^= NbAchievmentsUnlocked.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasActivationIds) hash ^= ActivationIds.GetHashCode();
      if (HasNbParties) hash ^= NbParties.GetHashCode();
      if (HasBrand) hash ^= Brand.GetHashCode();
      if (HasOpenOverlayCount) hash ^= OpenOverlayCount.GetHashCode();
      if (HasGeneratedFromCache) hash ^= GeneratedFromCache.GetHashCode();
      if (HasShopVisible) hash ^= ShopVisible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameLength) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameLength);
      }
      if (HasNbScreenshots) {
        output.WriteRawTag(16);
        output.WriteUInt32(NbScreenshots);
      }
      if (HasNbUnitsWon) {
        output.WriteRawTag(24);
        output.WriteUInt32(NbUnitsWon);
      }
      if (HasNbAchievmentsUnlocked) {
        output.WriteRawTag(32);
        output.WriteUInt32(NbAchievmentsUnlocked);
      }
      if (HasProductId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProductId);
      }
      if (HasActivationIds) {
        output.WriteRawTag(50);
        output.WriteString(ActivationIds);
      }
      if (HasNbParties) {
        output.WriteRawTag(56);
        output.WriteUInt32(NbParties);
      }
      if (HasBrand) {
        output.WriteRawTag(64);
        output.WriteUInt32(Brand);
      }
      if (HasOpenOverlayCount) {
        output.WriteRawTag(80);
        output.WriteUInt32(OpenOverlayCount);
      }
      if (HasGeneratedFromCache) {
        output.WriteRawTag(96);
        output.WriteBool(GeneratedFromCache);
      }
      if (HasShopVisible) {
        output.WriteRawTag(104);
        output.WriteBool(ShopVisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameLength) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameLength);
      }
      if (HasNbScreenshots) {
        output.WriteRawTag(16);
        output.WriteUInt32(NbScreenshots);
      }
      if (HasNbUnitsWon) {
        output.WriteRawTag(24);
        output.WriteUInt32(NbUnitsWon);
      }
      if (HasNbAchievmentsUnlocked) {
        output.WriteRawTag(32);
        output.WriteUInt32(NbAchievmentsUnlocked);
      }
      if (HasProductId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProductId);
      }
      if (HasActivationIds) {
        output.WriteRawTag(50);
        output.WriteString(ActivationIds);
      }
      if (HasNbParties) {
        output.WriteRawTag(56);
        output.WriteUInt32(NbParties);
      }
      if (HasBrand) {
        output.WriteRawTag(64);
        output.WriteUInt32(Brand);
      }
      if (HasOpenOverlayCount) {
        output.WriteRawTag(80);
        output.WriteUInt32(OpenOverlayCount);
      }
      if (HasGeneratedFromCache) {
        output.WriteRawTag(96);
        output.WriteBool(GeneratedFromCache);
      }
      if (HasShopVisible) {
        output.WriteRawTag(104);
        output.WriteBool(ShopVisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameLength);
      }
      if (HasNbScreenshots) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbScreenshots);
      }
      if (HasNbUnitsWon) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbUnitsWon);
      }
      if (HasNbAchievmentsUnlocked) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbAchievmentsUnlocked);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasActivationIds) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivationIds);
      }
      if (HasNbParties) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbParties);
      }
      if (HasBrand) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Brand);
      }
      if (HasOpenOverlayCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OpenOverlayCount);
      }
      if (HasGeneratedFromCache) {
        size += 1 + 1;
      }
      if (HasShopVisible) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameEndObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasGameLength) {
        GameLength = other.GameLength;
      }
      if (other.HasNbScreenshots) {
        NbScreenshots = other.NbScreenshots;
      }
      if (other.HasNbUnitsWon) {
        NbUnitsWon = other.NbUnitsWon;
      }
      if (other.HasNbAchievmentsUnlocked) {
        NbAchievmentsUnlocked = other.NbAchievmentsUnlocked;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasActivationIds) {
        ActivationIds = other.ActivationIds;
      }
      if (other.HasNbParties) {
        NbParties = other.NbParties;
      }
      if (other.HasBrand) {
        Brand = other.Brand;
      }
      if (other.HasOpenOverlayCount) {
        OpenOverlayCount = other.OpenOverlayCount;
      }
      if (other.HasGeneratedFromCache) {
        GeneratedFromCache = other.GeneratedFromCache;
      }
      if (other.HasShopVisible) {
        ShopVisible = other.ShopVisible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameLength = input.ReadUInt32();
            break;
          }
          case 16: {
            NbScreenshots = input.ReadUInt32();
            break;
          }
          case 24: {
            NbUnitsWon = input.ReadUInt32();
            break;
          }
          case 32: {
            NbAchievmentsUnlocked = input.ReadUInt32();
            break;
          }
          case 40: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 50: {
            ActivationIds = input.ReadString();
            break;
          }
          case 56: {
            NbParties = input.ReadUInt32();
            break;
          }
          case 64: {
            Brand = input.ReadUInt32();
            break;
          }
          case 80: {
            OpenOverlayCount = input.ReadUInt32();
            break;
          }
          case 96: {
            GeneratedFromCache = input.ReadBool();
            break;
          }
          case 104: {
            ShopVisible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameLength = input.ReadUInt32();
            break;
          }
          case 16: {
            NbScreenshots = input.ReadUInt32();
            break;
          }
          case 24: {
            NbUnitsWon = input.ReadUInt32();
            break;
          }
          case 32: {
            NbAchievmentsUnlocked = input.ReadUInt32();
            break;
          }
          case 40: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 50: {
            ActivationIds = input.ReadString();
            break;
          }
          case 56: {
            NbParties = input.ReadUInt32();
            break;
          }
          case 64: {
            Brand = input.ReadUInt32();
            break;
          }
          case 80: {
            OpenOverlayCount = input.ReadUInt32();
            break;
          }
          case 96: {
            GeneratedFromCache = input.ReadBool();
            break;
          }
          case 104: {
            ShopVisible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DLErrorObjectData : pb::IMessage<DLErrorObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DLErrorObjectData> _parser = new pb::MessageParser<DLErrorObjectData>(() => new DLErrorObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DLErrorObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DLErrorObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DLErrorObjectData(DLErrorObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      dlSessionId_ = other.dlSessionId_;
      productId_ = other.productId_;
      errorSource_ = other.errorSource_;
      context_ = other.context_;
      errorCode_ = other.errorCode_;
      nbOccurences_ = other.nbOccurences_;
      brand_ = other.brand_;
      category_ = other.category_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DLErrorObjectData Clone() {
      return new DLErrorObjectData(this);
    }

    /// <summary>Field number for the "dlSessionId" field.</summary>
    public const int DlSessionIdFieldNumber = 1;
    private readonly static string DlSessionIdDefaultValue = "";

    private string dlSessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DlSessionId {
      get { return dlSessionId_ ?? DlSessionIdDefaultValue; }
      set {
        dlSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dlSessionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDlSessionId {
      get { return dlSessionId_ != null; }
    }
    /// <summary>Clears the value of the "dlSessionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDlSessionId() {
      dlSessionId_ = null;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "errorSource" field.</summary>
    public const int ErrorSourceFieldNumber = 3;
    private readonly static string ErrorSourceDefaultValue = "";

    private string errorSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorSource {
      get { return errorSource_ ?? ErrorSourceDefaultValue; }
      set {
        errorSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorSource {
      get { return errorSource_ != null; }
    }
    /// <summary>Clears the value of the "errorSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorSource() {
      errorSource_ = null;
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 4;
    private readonly static string ContextDefaultValue = "";

    private string context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Context {
      get { return context_ ?? ContextDefaultValue; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContext {
      get { return context_ != null; }
    }
    /// <summary>Clears the value of the "context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContext() {
      context_ = null;
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 5;
    private readonly static string ErrorCodeDefaultValue = "";

    private string errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorCode {
      get { return errorCode_ ?? ErrorCodeDefaultValue; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCode {
      get { return errorCode_ != null; }
    }
    /// <summary>Clears the value of the "errorCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCode() {
      errorCode_ = null;
    }

    /// <summary>Field number for the "nbOccurences" field.</summary>
    public const int NbOccurencesFieldNumber = 6;
    private readonly static uint NbOccurencesDefaultValue = 0;

    private uint nbOccurences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbOccurences {
      get { if ((_hasBits0 & 2) != 0) { return nbOccurences_; } else { return NbOccurencesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        nbOccurences_ = value;
      }
    }
    /// <summary>Gets whether the "nbOccurences" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbOccurences {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "nbOccurences" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbOccurences() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 7;
    private readonly static uint BrandDefaultValue = 0;

    private uint brand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Brand {
      get { if ((_hasBits0 & 4) != 0) { return brand_; } else { return BrandDefaultValue; } }
      set {
        _hasBits0 |= 4;
        brand_ = value;
      }
    }
    /// <summary>Gets whether the "brand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrand {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "brand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrand() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 8;
    private readonly static string CategoryDefaultValue = "";

    private string category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Category {
      get { return category_ ?? CategoryDefaultValue; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "category" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCategory {
      get { return category_ != null; }
    }
    /// <summary>Clears the value of the "category" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCategory() {
      category_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DLErrorObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DLErrorObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DlSessionId != other.DlSessionId) return false;
      if (ProductId != other.ProductId) return false;
      if (ErrorSource != other.ErrorSource) return false;
      if (Context != other.Context) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (NbOccurences != other.NbOccurences) return false;
      if (Brand != other.Brand) return false;
      if (Category != other.Category) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDlSessionId) hash ^= DlSessionId.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasErrorSource) hash ^= ErrorSource.GetHashCode();
      if (HasContext) hash ^= Context.GetHashCode();
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (HasNbOccurences) hash ^= NbOccurences.GetHashCode();
      if (HasBrand) hash ^= Brand.GetHashCode();
      if (HasCategory) hash ^= Category.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDlSessionId) {
        output.WriteRawTag(10);
        output.WriteString(DlSessionId);
      }
      if (HasProductId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ProductId);
      }
      if (HasErrorSource) {
        output.WriteRawTag(26);
        output.WriteString(ErrorSource);
      }
      if (HasContext) {
        output.WriteRawTag(34);
        output.WriteString(Context);
      }
      if (HasErrorCode) {
        output.WriteRawTag(42);
        output.WriteString(ErrorCode);
      }
      if (HasNbOccurences) {
        output.WriteRawTag(48);
        output.WriteUInt32(NbOccurences);
      }
      if (HasBrand) {
        output.WriteRawTag(56);
        output.WriteUInt32(Brand);
      }
      if (HasCategory) {
        output.WriteRawTag(66);
        output.WriteString(Category);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDlSessionId) {
        output.WriteRawTag(10);
        output.WriteString(DlSessionId);
      }
      if (HasProductId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ProductId);
      }
      if (HasErrorSource) {
        output.WriteRawTag(26);
        output.WriteString(ErrorSource);
      }
      if (HasContext) {
        output.WriteRawTag(34);
        output.WriteString(Context);
      }
      if (HasErrorCode) {
        output.WriteRawTag(42);
        output.WriteString(ErrorCode);
      }
      if (HasNbOccurences) {
        output.WriteRawTag(48);
        output.WriteUInt32(NbOccurences);
      }
      if (HasBrand) {
        output.WriteRawTag(56);
        output.WriteUInt32(Brand);
      }
      if (HasCategory) {
        output.WriteRawTag(66);
        output.WriteString(Category);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDlSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DlSessionId);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasErrorSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorSource);
      }
      if (HasContext) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (HasNbOccurences) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbOccurences);
      }
      if (HasBrand) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Brand);
      }
      if (HasCategory) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DLErrorObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasDlSessionId) {
        DlSessionId = other.DlSessionId;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasErrorSource) {
        ErrorSource = other.ErrorSource;
      }
      if (other.HasContext) {
        Context = other.Context;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      if (other.HasNbOccurences) {
        NbOccurences = other.NbOccurences;
      }
      if (other.HasBrand) {
        Brand = other.Brand;
      }
      if (other.HasCategory) {
        Category = other.Category;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DlSessionId = input.ReadString();
            break;
          }
          case 16: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 26: {
            ErrorSource = input.ReadString();
            break;
          }
          case 34: {
            Context = input.ReadString();
            break;
          }
          case 42: {
            ErrorCode = input.ReadString();
            break;
          }
          case 48: {
            NbOccurences = input.ReadUInt32();
            break;
          }
          case 56: {
            Brand = input.ReadUInt32();
            break;
          }
          case 66: {
            Category = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DlSessionId = input.ReadString();
            break;
          }
          case 16: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 26: {
            ErrorSource = input.ReadString();
            break;
          }
          case 34: {
            Context = input.ReadString();
            break;
          }
          case 42: {
            ErrorCode = input.ReadString();
            break;
          }
          case 48: {
            NbOccurences = input.ReadUInt32();
            break;
          }
          case 56: {
            Brand = input.ReadUInt32();
            break;
          }
          case 66: {
            Category = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DecompressSliceErrorObjectData : pb::IMessage<DecompressSliceErrorObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DecompressSliceErrorObjectData> _parser = new pb::MessageParser<DecompressSliceErrorObjectData>(() => new DecompressSliceErrorObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DecompressSliceErrorObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DecompressSliceErrorObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DecompressSliceErrorObjectData(DecompressSliceErrorObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      manifestSHA1_ = other.manifestSHA1_;
      filePath_ = other.filePath_;
      sliceOffsetInFile_ = other.sliceOffsetInFile_;
      sliceSize_ = other.sliceSize_;
      compressionMethod_ = other.compressionMethod_;
      errorCode_ = other.errorCode_;
      source_ = other.source_;
      sliceFilename_ = other.sliceFilename_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DecompressSliceErrorObjectData Clone() {
      return new DecompressSliceErrorObjectData(this);
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "manifestSHA1" field.</summary>
    public const int ManifestSHA1FieldNumber = 2;
    private readonly static string ManifestSHA1DefaultValue = "";

    private string manifestSHA1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ManifestSHA1 {
      get { return manifestSHA1_ ?? ManifestSHA1DefaultValue; }
      set {
        manifestSHA1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "manifestSHA1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasManifestSHA1 {
      get { return manifestSHA1_ != null; }
    }
    /// <summary>Clears the value of the "manifestSHA1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearManifestSHA1() {
      manifestSHA1_ = null;
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 3;
    private readonly static string FilePathDefaultValue = "";

    private string filePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilePath {
      get { return filePath_ ?? FilePathDefaultValue; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filePath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilePath {
      get { return filePath_ != null; }
    }
    /// <summary>Clears the value of the "filePath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilePath() {
      filePath_ = null;
    }

    /// <summary>Field number for the "sliceOffsetInFile" field.</summary>
    public const int SliceOffsetInFileFieldNumber = 4;
    private readonly static uint SliceOffsetInFileDefaultValue = 0;

    private uint sliceOffsetInFile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SliceOffsetInFile {
      get { if ((_hasBits0 & 2) != 0) { return sliceOffsetInFile_; } else { return SliceOffsetInFileDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sliceOffsetInFile_ = value;
      }
    }
    /// <summary>Gets whether the "sliceOffsetInFile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSliceOffsetInFile {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sliceOffsetInFile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSliceOffsetInFile() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sliceSize" field.</summary>
    public const int SliceSizeFieldNumber = 5;
    private readonly static uint SliceSizeDefaultValue = 0;

    private uint sliceSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SliceSize {
      get { if ((_hasBits0 & 4) != 0) { return sliceSize_; } else { return SliceSizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        sliceSize_ = value;
      }
    }
    /// <summary>Gets whether the "sliceSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSliceSize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "sliceSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSliceSize() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "compressionMethod" field.</summary>
    public const int CompressionMethodFieldNumber = 6;
    private readonly static global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.CompressionMethod CompressionMethodDefaultValue = global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.CompressionMethod.None;

    private global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.CompressionMethod compressionMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.CompressionMethod CompressionMethod {
      get { if ((_hasBits0 & 8) != 0) { return compressionMethod_; } else { return CompressionMethodDefaultValue; } }
      set {
        _hasBits0 |= 8;
        compressionMethod_ = value;
      }
    }
    /// <summary>Gets whether the "compressionMethod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCompressionMethod {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "compressionMethod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCompressionMethod() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 7;
    private readonly static int ErrorCodeDefaultValue = 0;

    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { if ((_hasBits0 & 16) != 0) { return errorCode_; } else { return ErrorCodeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        errorCode_ = value;
      }
    }
    /// <summary>Gets whether the "errorCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCode {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "errorCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCode() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 8;
    private readonly static global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.Source SourceDefaultValue = global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.Source.Retail;

    private global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.Source source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.Source Source {
      get { if ((_hasBits0 & 32) != 0) { return source_; } else { return SourceDefaultValue; } }
      set {
        _hasBits0 |= 32;
        source_ = value;
      }
    }
    /// <summary>Gets whether the "source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSource {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "sliceFilename" field.</summary>
    public const int SliceFilenameFieldNumber = 9;
    private readonly static string SliceFilenameDefaultValue = "";

    private string sliceFilename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SliceFilename {
      get { return sliceFilename_ ?? SliceFilenameDefaultValue; }
      set {
        sliceFilename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sliceFilename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSliceFilename {
      get { return sliceFilename_ != null; }
    }
    /// <summary>Clears the value of the "sliceFilename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSliceFilename() {
      sliceFilename_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DecompressSliceErrorObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DecompressSliceErrorObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (ManifestSHA1 != other.ManifestSHA1) return false;
      if (FilePath != other.FilePath) return false;
      if (SliceOffsetInFile != other.SliceOffsetInFile) return false;
      if (SliceSize != other.SliceSize) return false;
      if (CompressionMethod != other.CompressionMethod) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (Source != other.Source) return false;
      if (SliceFilename != other.SliceFilename) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasManifestSHA1) hash ^= ManifestSHA1.GetHashCode();
      if (HasFilePath) hash ^= FilePath.GetHashCode();
      if (HasSliceOffsetInFile) hash ^= SliceOffsetInFile.GetHashCode();
      if (HasSliceSize) hash ^= SliceSize.GetHashCode();
      if (HasCompressionMethod) hash ^= CompressionMethod.GetHashCode();
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (HasSource) hash ^= Source.GetHashCode();
      if (HasSliceFilename) hash ^= SliceFilename.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasManifestSHA1) {
        output.WriteRawTag(18);
        output.WriteString(ManifestSHA1);
      }
      if (HasFilePath) {
        output.WriteRawTag(26);
        output.WriteString(FilePath);
      }
      if (HasSliceOffsetInFile) {
        output.WriteRawTag(32);
        output.WriteUInt32(SliceOffsetInFile);
      }
      if (HasSliceSize) {
        output.WriteRawTag(40);
        output.WriteUInt32(SliceSize);
      }
      if (HasCompressionMethod) {
        output.WriteRawTag(48);
        output.WriteEnum((int) CompressionMethod);
      }
      if (HasErrorCode) {
        output.WriteRawTag(56);
        output.WriteInt32(ErrorCode);
      }
      if (HasSource) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Source);
      }
      if (HasSliceFilename) {
        output.WriteRawTag(74);
        output.WriteString(SliceFilename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasManifestSHA1) {
        output.WriteRawTag(18);
        output.WriteString(ManifestSHA1);
      }
      if (HasFilePath) {
        output.WriteRawTag(26);
        output.WriteString(FilePath);
      }
      if (HasSliceOffsetInFile) {
        output.WriteRawTag(32);
        output.WriteUInt32(SliceOffsetInFile);
      }
      if (HasSliceSize) {
        output.WriteRawTag(40);
        output.WriteUInt32(SliceSize);
      }
      if (HasCompressionMethod) {
        output.WriteRawTag(48);
        output.WriteEnum((int) CompressionMethod);
      }
      if (HasErrorCode) {
        output.WriteRawTag(56);
        output.WriteInt32(ErrorCode);
      }
      if (HasSource) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Source);
      }
      if (HasSliceFilename) {
        output.WriteRawTag(74);
        output.WriteString(SliceFilename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasManifestSHA1) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ManifestSHA1);
      }
      if (HasFilePath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (HasSliceOffsetInFile) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SliceOffsetInFile);
      }
      if (HasSliceSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SliceSize);
      }
      if (HasCompressionMethod) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CompressionMethod);
      }
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (HasSource) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
      }
      if (HasSliceFilename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SliceFilename);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DecompressSliceErrorObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasManifestSHA1) {
        ManifestSHA1 = other.ManifestSHA1;
      }
      if (other.HasFilePath) {
        FilePath = other.FilePath;
      }
      if (other.HasSliceOffsetInFile) {
        SliceOffsetInFile = other.SliceOffsetInFile;
      }
      if (other.HasSliceSize) {
        SliceSize = other.SliceSize;
      }
      if (other.HasCompressionMethod) {
        CompressionMethod = other.CompressionMethod;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      if (other.HasSource) {
        Source = other.Source;
      }
      if (other.HasSliceFilename) {
        SliceFilename = other.SliceFilename;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            ManifestSHA1 = input.ReadString();
            break;
          }
          case 26: {
            FilePath = input.ReadString();
            break;
          }
          case 32: {
            SliceOffsetInFile = input.ReadUInt32();
            break;
          }
          case 40: {
            SliceSize = input.ReadUInt32();
            break;
          }
          case 48: {
            CompressionMethod = (global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.CompressionMethod) input.ReadEnum();
            break;
          }
          case 56: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 64: {
            Source = (global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.Source) input.ReadEnum();
            break;
          }
          case 74: {
            SliceFilename = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            ManifestSHA1 = input.ReadString();
            break;
          }
          case 26: {
            FilePath = input.ReadString();
            break;
          }
          case 32: {
            SliceOffsetInFile = input.ReadUInt32();
            break;
          }
          case 40: {
            SliceSize = input.ReadUInt32();
            break;
          }
          case 48: {
            CompressionMethod = (global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.CompressionMethod) input.ReadEnum();
            break;
          }
          case 56: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 64: {
            Source = (global::Uplay.Statistics.DecompressSliceErrorObjectData.Types.Source) input.ReadEnum();
            break;
          }
          case 74: {
            SliceFilename = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DecompressSliceErrorObjectData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CompressionMethod {
        [pbr::OriginalName("NONE")] None = 1,
        [pbr::OriginalName("ZIP")] Zip = 2,
        [pbr::OriginalName("LZHAM")] Lzham = 3,
        [pbr::OriginalName("ZSTD")] Zstd = 4,
      }

      public enum Source {
        [pbr::OriginalName("RETAIL")] Retail = 1,
        [pbr::OriginalName("DOWNLOAD")] Download = 2,
      }

    }
    #endregion

  }

  public sealed partial class FollowLinkObjectData : pb::IMessage<FollowLinkObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FollowLinkObjectData> _parser = new pb::MessageParser<FollowLinkObjectData>(() => new FollowLinkObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FollowLinkObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FollowLinkObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FollowLinkObjectData(FollowLinkObjectData other) : this() {
      sender_ = other.sender_;
      linkUrl_ = other.linkUrl_;
      target_ = other.target_;
      metaTag_ = other.metaTag_;
      visualAsset_ = other.visualAsset_;
      linkResult_ = other.linkResult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FollowLinkObjectData Clone() {
      return new FollowLinkObjectData(this);
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 1;
    private readonly static string SenderDefaultValue = "";

    private string sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sender {
      get { return sender_ ?? SenderDefaultValue; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sender" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSender {
      get { return sender_ != null; }
    }
    /// <summary>Clears the value of the "sender" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSender() {
      sender_ = null;
    }

    /// <summary>Field number for the "linkUrl" field.</summary>
    public const int LinkUrlFieldNumber = 2;
    private readonly static string LinkUrlDefaultValue = "";

    private string linkUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LinkUrl {
      get { return linkUrl_ ?? LinkUrlDefaultValue; }
      set {
        linkUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "linkUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLinkUrl {
      get { return linkUrl_ != null; }
    }
    /// <summary>Clears the value of the "linkUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLinkUrl() {
      linkUrl_ = null;
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private readonly static string TargetDefaultValue = "";

    private string target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Target {
      get { return target_ ?? TargetDefaultValue; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTarget {
      get { return target_ != null; }
    }
    /// <summary>Clears the value of the "target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      target_ = null;
    }

    /// <summary>Field number for the "metaTag" field.</summary>
    public const int MetaTagFieldNumber = 4;
    private readonly static string MetaTagDefaultValue = "";

    private string metaTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MetaTag {
      get { return metaTag_ ?? MetaTagDefaultValue; }
      set {
        metaTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "metaTag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMetaTag {
      get { return metaTag_ != null; }
    }
    /// <summary>Clears the value of the "metaTag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetaTag() {
      metaTag_ = null;
    }

    /// <summary>Field number for the "visualAsset" field.</summary>
    public const int VisualAssetFieldNumber = 5;
    private readonly static string VisualAssetDefaultValue = "";

    private string visualAsset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VisualAsset {
      get { return visualAsset_ ?? VisualAssetDefaultValue; }
      set {
        visualAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "visualAsset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisualAsset {
      get { return visualAsset_ != null; }
    }
    /// <summary>Clears the value of the "visualAsset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisualAsset() {
      visualAsset_ = null;
    }

    /// <summary>Field number for the "linkResult" field.</summary>
    public const int LinkResultFieldNumber = 6;
    private readonly static string LinkResultDefaultValue = "";

    private string linkResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LinkResult {
      get { return linkResult_ ?? LinkResultDefaultValue; }
      set {
        linkResult_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "linkResult" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLinkResult {
      get { return linkResult_ != null; }
    }
    /// <summary>Clears the value of the "linkResult" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLinkResult() {
      linkResult_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FollowLinkObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FollowLinkObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sender != other.Sender) return false;
      if (LinkUrl != other.LinkUrl) return false;
      if (Target != other.Target) return false;
      if (MetaTag != other.MetaTag) return false;
      if (VisualAsset != other.VisualAsset) return false;
      if (LinkResult != other.LinkResult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSender) hash ^= Sender.GetHashCode();
      if (HasLinkUrl) hash ^= LinkUrl.GetHashCode();
      if (HasTarget) hash ^= Target.GetHashCode();
      if (HasMetaTag) hash ^= MetaTag.GetHashCode();
      if (HasVisualAsset) hash ^= VisualAsset.GetHashCode();
      if (HasLinkResult) hash ^= LinkResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSender) {
        output.WriteRawTag(10);
        output.WriteString(Sender);
      }
      if (HasLinkUrl) {
        output.WriteRawTag(18);
        output.WriteString(LinkUrl);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (HasMetaTag) {
        output.WriteRawTag(34);
        output.WriteString(MetaTag);
      }
      if (HasVisualAsset) {
        output.WriteRawTag(42);
        output.WriteString(VisualAsset);
      }
      if (HasLinkResult) {
        output.WriteRawTag(50);
        output.WriteString(LinkResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSender) {
        output.WriteRawTag(10);
        output.WriteString(Sender);
      }
      if (HasLinkUrl) {
        output.WriteRawTag(18);
        output.WriteString(LinkUrl);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (HasMetaTag) {
        output.WriteRawTag(34);
        output.WriteString(MetaTag);
      }
      if (HasVisualAsset) {
        output.WriteRawTag(42);
        output.WriteString(VisualAsset);
      }
      if (HasLinkResult) {
        output.WriteRawTag(50);
        output.WriteString(LinkResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSender) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (HasLinkUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkUrl);
      }
      if (HasTarget) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (HasMetaTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaTag);
      }
      if (HasVisualAsset) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VisualAsset);
      }
      if (HasLinkResult) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FollowLinkObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasSender) {
        Sender = other.Sender;
      }
      if (other.HasLinkUrl) {
        LinkUrl = other.LinkUrl;
      }
      if (other.HasTarget) {
        Target = other.Target;
      }
      if (other.HasMetaTag) {
        MetaTag = other.MetaTag;
      }
      if (other.HasVisualAsset) {
        VisualAsset = other.VisualAsset;
      }
      if (other.HasLinkResult) {
        LinkResult = other.LinkResult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sender = input.ReadString();
            break;
          }
          case 18: {
            LinkUrl = input.ReadString();
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            MetaTag = input.ReadString();
            break;
          }
          case 42: {
            VisualAsset = input.ReadString();
            break;
          }
          case 50: {
            LinkResult = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Sender = input.ReadString();
            break;
          }
          case 18: {
            LinkUrl = input.ReadString();
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            MetaTag = input.ReadString();
            break;
          }
          case 42: {
            VisualAsset = input.ReadString();
            break;
          }
          case 50: {
            LinkResult = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameLaunchObjectData : pb::IMessage<GameLaunchObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameLaunchObjectData> _parser = new pb::MessageParser<GameLaunchObjectData>(() => new GameLaunchObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameLaunchObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameLaunchObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameLaunchObjectData(GameLaunchObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      launchMethod_ = other.launchMethod_;
      gameStarterTime_ = other.gameStarterTime_;
      inputSource_ = other.inputSource_;
      steamAccount_ = other.steamAccount_;
      brand_ = other.brand_;
      activationIds_ = other.activationIds_;
      shopVisible_ = other.shopVisible_;
      productActivated_ = other.productActivated_;
      machineGuid_ = other.machineGuid_;
      launchPartner_ = other.launchPartner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameLaunchObjectData Clone() {
      return new GameLaunchObjectData(this);
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "launchMethod" field.</summary>
    public const int LaunchMethodFieldNumber = 2;
    private readonly static string LaunchMethodDefaultValue = "";

    private string launchMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LaunchMethod {
      get { return launchMethod_ ?? LaunchMethodDefaultValue; }
      set {
        launchMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "launchMethod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLaunchMethod {
      get { return launchMethod_ != null; }
    }
    /// <summary>Clears the value of the "launchMethod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLaunchMethod() {
      launchMethod_ = null;
    }

    /// <summary>Field number for the "gameStarterTime" field.</summary>
    public const int GameStarterTimeFieldNumber = 3;
    private readonly static uint GameStarterTimeDefaultValue = 0;

    private uint gameStarterTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameStarterTime {
      get { if ((_hasBits0 & 2) != 0) { return gameStarterTime_; } else { return GameStarterTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameStarterTime_ = value;
      }
    }
    /// <summary>Gets whether the "gameStarterTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameStarterTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gameStarterTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameStarterTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 4;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    /// <summary>Field number for the "steamAccount" field.</summary>
    public const int SteamAccountFieldNumber = 5;
    private readonly static string SteamAccountDefaultValue = "";

    private string steamAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SteamAccount {
      get { return steamAccount_ ?? SteamAccountDefaultValue; }
      set {
        steamAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "steamAccount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamAccount {
      get { return steamAccount_ != null; }
    }
    /// <summary>Clears the value of the "steamAccount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamAccount() {
      steamAccount_ = null;
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 7;
    private readonly static uint BrandDefaultValue = 0;

    private uint brand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Brand {
      get { if ((_hasBits0 & 4) != 0) { return brand_; } else { return BrandDefaultValue; } }
      set {
        _hasBits0 |= 4;
        brand_ = value;
      }
    }
    /// <summary>Gets whether the "brand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrand {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "brand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrand() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "activationIds" field.</summary>
    public const int ActivationIdsFieldNumber = 8;
    private readonly static string ActivationIdsDefaultValue = "";

    private string activationIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivationIds {
      get { return activationIds_ ?? ActivationIdsDefaultValue; }
      set {
        activationIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "activationIds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationIds {
      get { return activationIds_ != null; }
    }
    /// <summary>Clears the value of the "activationIds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationIds() {
      activationIds_ = null;
    }

    /// <summary>Field number for the "shopVisible" field.</summary>
    public const int ShopVisibleFieldNumber = 9;
    private readonly static bool ShopVisibleDefaultValue = false;

    private bool shopVisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShopVisible {
      get { if ((_hasBits0 & 8) != 0) { return shopVisible_; } else { return ShopVisibleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        shopVisible_ = value;
      }
    }
    /// <summary>Gets whether the "shopVisible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopVisible {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "shopVisible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopVisible() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "productActivated" field.</summary>
    public const int ProductActivatedFieldNumber = 10;
    private readonly static bool ProductActivatedDefaultValue = false;

    private bool productActivated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ProductActivated {
      get { if ((_hasBits0 & 16) != 0) { return productActivated_; } else { return ProductActivatedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        productActivated_ = value;
      }
    }
    /// <summary>Gets whether the "productActivated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductActivated {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "productActivated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductActivated() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "machineGuid" field.</summary>
    public const int MachineGuidFieldNumber = 11;
    private readonly static string MachineGuidDefaultValue = "";

    private string machineGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineGuid {
      get { return machineGuid_ ?? MachineGuidDefaultValue; }
      set {
        machineGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "machineGuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMachineGuid {
      get { return machineGuid_ != null; }
    }
    /// <summary>Clears the value of the "machineGuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMachineGuid() {
      machineGuid_ = null;
    }

    /// <summary>Field number for the "launchPartner" field.</summary>
    public const int LaunchPartnerFieldNumber = 12;
    private readonly static string LaunchPartnerDefaultValue = "";

    private string launchPartner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LaunchPartner {
      get { return launchPartner_ ?? LaunchPartnerDefaultValue; }
      set {
        launchPartner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "launchPartner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLaunchPartner {
      get { return launchPartner_ != null; }
    }
    /// <summary>Clears the value of the "launchPartner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLaunchPartner() {
      launchPartner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameLaunchObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameLaunchObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (LaunchMethod != other.LaunchMethod) return false;
      if (GameStarterTime != other.GameStarterTime) return false;
      if (InputSource != other.InputSource) return false;
      if (SteamAccount != other.SteamAccount) return false;
      if (Brand != other.Brand) return false;
      if (ActivationIds != other.ActivationIds) return false;
      if (ShopVisible != other.ShopVisible) return false;
      if (ProductActivated != other.ProductActivated) return false;
      if (MachineGuid != other.MachineGuid) return false;
      if (LaunchPartner != other.LaunchPartner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasLaunchMethod) hash ^= LaunchMethod.GetHashCode();
      if (HasGameStarterTime) hash ^= GameStarterTime.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (HasSteamAccount) hash ^= SteamAccount.GetHashCode();
      if (HasBrand) hash ^= Brand.GetHashCode();
      if (HasActivationIds) hash ^= ActivationIds.GetHashCode();
      if (HasShopVisible) hash ^= ShopVisible.GetHashCode();
      if (HasProductActivated) hash ^= ProductActivated.GetHashCode();
      if (HasMachineGuid) hash ^= MachineGuid.GetHashCode();
      if (HasLaunchPartner) hash ^= LaunchPartner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasLaunchMethod) {
        output.WriteRawTag(18);
        output.WriteString(LaunchMethod);
      }
      if (HasGameStarterTime) {
        output.WriteRawTag(24);
        output.WriteUInt32(GameStarterTime);
      }
      if (HasInputSource) {
        output.WriteRawTag(34);
        output.WriteString(InputSource);
      }
      if (HasSteamAccount) {
        output.WriteRawTag(42);
        output.WriteString(SteamAccount);
      }
      if (HasBrand) {
        output.WriteRawTag(56);
        output.WriteUInt32(Brand);
      }
      if (HasActivationIds) {
        output.WriteRawTag(66);
        output.WriteString(ActivationIds);
      }
      if (HasShopVisible) {
        output.WriteRawTag(72);
        output.WriteBool(ShopVisible);
      }
      if (HasProductActivated) {
        output.WriteRawTag(80);
        output.WriteBool(ProductActivated);
      }
      if (HasMachineGuid) {
        output.WriteRawTag(90);
        output.WriteString(MachineGuid);
      }
      if (HasLaunchPartner) {
        output.WriteRawTag(98);
        output.WriteString(LaunchPartner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasLaunchMethod) {
        output.WriteRawTag(18);
        output.WriteString(LaunchMethod);
      }
      if (HasGameStarterTime) {
        output.WriteRawTag(24);
        output.WriteUInt32(GameStarterTime);
      }
      if (HasInputSource) {
        output.WriteRawTag(34);
        output.WriteString(InputSource);
      }
      if (HasSteamAccount) {
        output.WriteRawTag(42);
        output.WriteString(SteamAccount);
      }
      if (HasBrand) {
        output.WriteRawTag(56);
        output.WriteUInt32(Brand);
      }
      if (HasActivationIds) {
        output.WriteRawTag(66);
        output.WriteString(ActivationIds);
      }
      if (HasShopVisible) {
        output.WriteRawTag(72);
        output.WriteBool(ShopVisible);
      }
      if (HasProductActivated) {
        output.WriteRawTag(80);
        output.WriteBool(ProductActivated);
      }
      if (HasMachineGuid) {
        output.WriteRawTag(90);
        output.WriteString(MachineGuid);
      }
      if (HasLaunchPartner) {
        output.WriteRawTag(98);
        output.WriteString(LaunchPartner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasLaunchMethod) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LaunchMethod);
      }
      if (HasGameStarterTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameStarterTime);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (HasSteamAccount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SteamAccount);
      }
      if (HasBrand) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Brand);
      }
      if (HasActivationIds) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivationIds);
      }
      if (HasShopVisible) {
        size += 1 + 1;
      }
      if (HasProductActivated) {
        size += 1 + 1;
      }
      if (HasMachineGuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineGuid);
      }
      if (HasLaunchPartner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LaunchPartner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameLaunchObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasLaunchMethod) {
        LaunchMethod = other.LaunchMethod;
      }
      if (other.HasGameStarterTime) {
        GameStarterTime = other.GameStarterTime;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      if (other.HasSteamAccount) {
        SteamAccount = other.SteamAccount;
      }
      if (other.HasBrand) {
        Brand = other.Brand;
      }
      if (other.HasActivationIds) {
        ActivationIds = other.ActivationIds;
      }
      if (other.HasShopVisible) {
        ShopVisible = other.ShopVisible;
      }
      if (other.HasProductActivated) {
        ProductActivated = other.ProductActivated;
      }
      if (other.HasMachineGuid) {
        MachineGuid = other.MachineGuid;
      }
      if (other.HasLaunchPartner) {
        LaunchPartner = other.LaunchPartner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            LaunchMethod = input.ReadString();
            break;
          }
          case 24: {
            GameStarterTime = input.ReadUInt32();
            break;
          }
          case 34: {
            InputSource = input.ReadString();
            break;
          }
          case 42: {
            SteamAccount = input.ReadString();
            break;
          }
          case 56: {
            Brand = input.ReadUInt32();
            break;
          }
          case 66: {
            ActivationIds = input.ReadString();
            break;
          }
          case 72: {
            ShopVisible = input.ReadBool();
            break;
          }
          case 80: {
            ProductActivated = input.ReadBool();
            break;
          }
          case 90: {
            MachineGuid = input.ReadString();
            break;
          }
          case 98: {
            LaunchPartner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            LaunchMethod = input.ReadString();
            break;
          }
          case 24: {
            GameStarterTime = input.ReadUInt32();
            break;
          }
          case 34: {
            InputSource = input.ReadString();
            break;
          }
          case 42: {
            SteamAccount = input.ReadString();
            break;
          }
          case 56: {
            Brand = input.ReadUInt32();
            break;
          }
          case 66: {
            ActivationIds = input.ReadString();
            break;
          }
          case 72: {
            ShopVisible = input.ReadBool();
            break;
          }
          case 80: {
            ProductActivated = input.ReadBool();
            break;
          }
          case 90: {
            MachineGuid = input.ReadString();
            break;
          }
          case 98: {
            LaunchPartner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppQuitObjectData : pb::IMessage<AppQuitObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppQuitObjectData> _parser = new pb::MessageParser<AppQuitObjectData>(() => new AppQuitObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AppQuitObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppQuitObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppQuitObjectData(AppQuitObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      quitReason_ = other.quitReason_;
      secondsSinceStart_ = other.secondsSinceStart_;
      demuxConnectionFailureCount_ = other.demuxConnectionFailureCount_;
      discardedEventsCount_ = other.discardedEventsCount_;
      generatedFromCache_ = other.generatedFromCache_;
      shopVisible_ = other.shopVisible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppQuitObjectData Clone() {
      return new AppQuitObjectData(this);
    }

    /// <summary>Field number for the "quitReason" field.</summary>
    public const int QuitReasonFieldNumber = 1;
    private readonly static global::Uplay.Statistics.AppQuitObjectData.Types.QuitReason QuitReasonDefaultValue = global::Uplay.Statistics.AppQuitObjectData.Types.QuitReason.User;

    private global::Uplay.Statistics.AppQuitObjectData.Types.QuitReason quitReason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.AppQuitObjectData.Types.QuitReason QuitReason {
      get { if ((_hasBits0 & 1) != 0) { return quitReason_; } else { return QuitReasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        quitReason_ = value;
      }
    }
    /// <summary>Gets whether the "quitReason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuitReason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "quitReason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuitReason() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "secondsSinceStart" field.</summary>
    public const int SecondsSinceStartFieldNumber = 2;
    private readonly static uint SecondsSinceStartDefaultValue = 0;

    private uint secondsSinceStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SecondsSinceStart {
      get { if ((_hasBits0 & 2) != 0) { return secondsSinceStart_; } else { return SecondsSinceStartDefaultValue; } }
      set {
        _hasBits0 |= 2;
        secondsSinceStart_ = value;
      }
    }
    /// <summary>Gets whether the "secondsSinceStart" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondsSinceStart {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "secondsSinceStart" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondsSinceStart() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "demuxConnectionFailureCount" field.</summary>
    public const int DemuxConnectionFailureCountFieldNumber = 3;
    private readonly static uint DemuxConnectionFailureCountDefaultValue = 0;

    private uint demuxConnectionFailureCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DemuxConnectionFailureCount {
      get { if ((_hasBits0 & 4) != 0) { return demuxConnectionFailureCount_; } else { return DemuxConnectionFailureCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        demuxConnectionFailureCount_ = value;
      }
    }
    /// <summary>Gets whether the "demuxConnectionFailureCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDemuxConnectionFailureCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "demuxConnectionFailureCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDemuxConnectionFailureCount() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "discardedEventsCount" field.</summary>
    public const int DiscardedEventsCountFieldNumber = 5;
    private readonly static uint DiscardedEventsCountDefaultValue = 0;

    private uint discardedEventsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DiscardedEventsCount {
      get { if ((_hasBits0 & 8) != 0) { return discardedEventsCount_; } else { return DiscardedEventsCountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        discardedEventsCount_ = value;
      }
    }
    /// <summary>Gets whether the "discardedEventsCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDiscardedEventsCount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "discardedEventsCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDiscardedEventsCount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "generatedFromCache" field.</summary>
    public const int GeneratedFromCacheFieldNumber = 6;
    private readonly static bool GeneratedFromCacheDefaultValue = false;

    private bool generatedFromCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GeneratedFromCache {
      get { if ((_hasBits0 & 16) != 0) { return generatedFromCache_; } else { return GeneratedFromCacheDefaultValue; } }
      set {
        _hasBits0 |= 16;
        generatedFromCache_ = value;
      }
    }
    /// <summary>Gets whether the "generatedFromCache" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGeneratedFromCache {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "generatedFromCache" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGeneratedFromCache() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "shopVisible" field.</summary>
    public const int ShopVisibleFieldNumber = 7;
    private readonly static bool ShopVisibleDefaultValue = false;

    private bool shopVisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShopVisible {
      get { if ((_hasBits0 & 32) != 0) { return shopVisible_; } else { return ShopVisibleDefaultValue; } }
      set {
        _hasBits0 |= 32;
        shopVisible_ = value;
      }
    }
    /// <summary>Gets whether the "shopVisible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopVisible {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "shopVisible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopVisible() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AppQuitObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AppQuitObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuitReason != other.QuitReason) return false;
      if (SecondsSinceStart != other.SecondsSinceStart) return false;
      if (DemuxConnectionFailureCount != other.DemuxConnectionFailureCount) return false;
      if (DiscardedEventsCount != other.DiscardedEventsCount) return false;
      if (GeneratedFromCache != other.GeneratedFromCache) return false;
      if (ShopVisible != other.ShopVisible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasQuitReason) hash ^= QuitReason.GetHashCode();
      if (HasSecondsSinceStart) hash ^= SecondsSinceStart.GetHashCode();
      if (HasDemuxConnectionFailureCount) hash ^= DemuxConnectionFailureCount.GetHashCode();
      if (HasDiscardedEventsCount) hash ^= DiscardedEventsCount.GetHashCode();
      if (HasGeneratedFromCache) hash ^= GeneratedFromCache.GetHashCode();
      if (HasShopVisible) hash ^= ShopVisible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasQuitReason) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuitReason);
      }
      if (HasSecondsSinceStart) {
        output.WriteRawTag(16);
        output.WriteUInt32(SecondsSinceStart);
      }
      if (HasDemuxConnectionFailureCount) {
        output.WriteRawTag(24);
        output.WriteUInt32(DemuxConnectionFailureCount);
      }
      if (HasDiscardedEventsCount) {
        output.WriteRawTag(40);
        output.WriteUInt32(DiscardedEventsCount);
      }
      if (HasGeneratedFromCache) {
        output.WriteRawTag(48);
        output.WriteBool(GeneratedFromCache);
      }
      if (HasShopVisible) {
        output.WriteRawTag(56);
        output.WriteBool(ShopVisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasQuitReason) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuitReason);
      }
      if (HasSecondsSinceStart) {
        output.WriteRawTag(16);
        output.WriteUInt32(SecondsSinceStart);
      }
      if (HasDemuxConnectionFailureCount) {
        output.WriteRawTag(24);
        output.WriteUInt32(DemuxConnectionFailureCount);
      }
      if (HasDiscardedEventsCount) {
        output.WriteRawTag(40);
        output.WriteUInt32(DiscardedEventsCount);
      }
      if (HasGeneratedFromCache) {
        output.WriteRawTag(48);
        output.WriteBool(GeneratedFromCache);
      }
      if (HasShopVisible) {
        output.WriteRawTag(56);
        output.WriteBool(ShopVisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasQuitReason) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuitReason);
      }
      if (HasSecondsSinceStart) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SecondsSinceStart);
      }
      if (HasDemuxConnectionFailureCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DemuxConnectionFailureCount);
      }
      if (HasDiscardedEventsCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DiscardedEventsCount);
      }
      if (HasGeneratedFromCache) {
        size += 1 + 1;
      }
      if (HasShopVisible) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AppQuitObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasQuitReason) {
        QuitReason = other.QuitReason;
      }
      if (other.HasSecondsSinceStart) {
        SecondsSinceStart = other.SecondsSinceStart;
      }
      if (other.HasDemuxConnectionFailureCount) {
        DemuxConnectionFailureCount = other.DemuxConnectionFailureCount;
      }
      if (other.HasDiscardedEventsCount) {
        DiscardedEventsCount = other.DiscardedEventsCount;
      }
      if (other.HasGeneratedFromCache) {
        GeneratedFromCache = other.GeneratedFromCache;
      }
      if (other.HasShopVisible) {
        ShopVisible = other.ShopVisible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuitReason = (global::Uplay.Statistics.AppQuitObjectData.Types.QuitReason) input.ReadEnum();
            break;
          }
          case 16: {
            SecondsSinceStart = input.ReadUInt32();
            break;
          }
          case 24: {
            DemuxConnectionFailureCount = input.ReadUInt32();
            break;
          }
          case 40: {
            DiscardedEventsCount = input.ReadUInt32();
            break;
          }
          case 48: {
            GeneratedFromCache = input.ReadBool();
            break;
          }
          case 56: {
            ShopVisible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuitReason = (global::Uplay.Statistics.AppQuitObjectData.Types.QuitReason) input.ReadEnum();
            break;
          }
          case 16: {
            SecondsSinceStart = input.ReadUInt32();
            break;
          }
          case 24: {
            DemuxConnectionFailureCount = input.ReadUInt32();
            break;
          }
          case 40: {
            DiscardedEventsCount = input.ReadUInt32();
            break;
          }
          case 48: {
            GeneratedFromCache = input.ReadBool();
            break;
          }
          case 56: {
            ShopVisible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AppQuitObjectData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum QuitReason {
        [pbr::OriginalName("USER")] User = 1,
        [pbr::OriginalName("LOGOUT")] Logout = 2,
        [pbr::OriginalName("FAILEDRELOGIN")] Failedrelogin = 3,
        [pbr::OriginalName("LOGOUTPUSH")] Logoutpush = 4,
        [pbr::OriginalName("PATCH")] Patch = 5,
        [pbr::OriginalName("GOOFFLINE")] Gooffline = 6,
        [pbr::OriginalName("GOONLINE")] Goonline = 7,
        [pbr::OriginalName("USERBANNED")] Userbanned = 8,
        [pbr::OriginalName("RESTART")] Restart = 9,
        [pbr::OriginalName("CLIENTOUTDATED")] Clientoutdated = 10,
        [pbr::OriginalName("UNKNOWN")] Unknown = 11,
      }

    }
    #endregion

  }

  public sealed partial class GameCloudSaveSyncObjectData : pb::IMessage<GameCloudSaveSyncObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameCloudSaveSyncObjectData> _parser = new pb::MessageParser<GameCloudSaveSyncObjectData>(() => new GameCloudSaveSyncObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameCloudSaveSyncObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameCloudSaveSyncObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameCloudSaveSyncObjectData(GameCloudSaveSyncObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      machineId_ = other.machineId_;
      when_ = other.when_;
      direction_ = other.direction_;
      conflict_ = other.conflict_;
      error_ = other.error_;
      resolution_ = other.resolution_;
      bytesSent_ = other.bytesSent_;
      brand_ = other.brand_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameCloudSaveSyncObjectData Clone() {
      return new GameCloudSaveSyncObjectData(this);
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "machineId" field.</summary>
    public const int MachineIdFieldNumber = 2;
    private readonly static string MachineIdDefaultValue = "";

    private string machineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineId {
      get { return machineId_ ?? MachineIdDefaultValue; }
      set {
        machineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "machineId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMachineId {
      get { return machineId_ != null; }
    }
    /// <summary>Clears the value of the "machineId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMachineId() {
      machineId_ = null;
    }

    /// <summary>Field number for the "when" field.</summary>
    public const int WhenFieldNumber = 3;
    private readonly static global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.When WhenDefaultValue = global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.When.Start;

    private global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.When when_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.When When {
      get { if ((_hasBits0 & 2) != 0) { return when_; } else { return WhenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        when_ = value;
      }
    }
    /// <summary>Gets whether the "when" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWhen {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "when" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWhen() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private readonly static global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Direction DirectionDefaultValue = global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Direction.Upload;

    private global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Direction direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Direction Direction {
      get { if ((_hasBits0 & 4) != 0) { return direction_; } else { return DirectionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        direction_ = value;
      }
    }
    /// <summary>Gets whether the "direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDirection {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDirection() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "conflict" field.</summary>
    public const int ConflictFieldNumber = 5;
    private readonly static global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Conflict ConflictDefaultValue = global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Conflict.Mismatch;

    private global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Conflict conflict_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Conflict Conflict {
      get { if ((_hasBits0 & 8) != 0) { return conflict_; } else { return ConflictDefaultValue; } }
      set {
        _hasBits0 |= 8;
        conflict_ = value;
      }
    }
    /// <summary>Gets whether the "conflict" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConflict {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "conflict" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConflict() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 6;
    private readonly static global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Error ErrorDefaultValue = global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Error.Getconsistentserverfailed;

    private global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Error Error {
      get { if ((_hasBits0 & 16) != 0) { return error_; } else { return ErrorDefaultValue; } }
      set {
        _hasBits0 |= 16;
        error_ = value;
      }
    }
    /// <summary>Gets whether the "error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasError {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearError() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 7;
    private readonly static global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Resolution ResolutionDefaultValue = global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Resolution.Cloud;

    private global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Resolution resolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Resolution Resolution {
      get { if ((_hasBits0 & 32) != 0) { return resolution_; } else { return ResolutionDefaultValue; } }
      set {
        _hasBits0 |= 32;
        resolution_ = value;
      }
    }
    /// <summary>Gets whether the "resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResolution {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResolution() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "bytesSent" field.</summary>
    public const int BytesSentFieldNumber = 8;
    private readonly static uint BytesSentDefaultValue = 0;

    private uint bytesSent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BytesSent {
      get { if ((_hasBits0 & 64) != 0) { return bytesSent_; } else { return BytesSentDefaultValue; } }
      set {
        _hasBits0 |= 64;
        bytesSent_ = value;
      }
    }
    /// <summary>Gets whether the "bytesSent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBytesSent {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "bytesSent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBytesSent() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 9;
    private readonly static uint BrandDefaultValue = 0;

    private uint brand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Brand {
      get { if ((_hasBits0 & 128) != 0) { return brand_; } else { return BrandDefaultValue; } }
      set {
        _hasBits0 |= 128;
        brand_ = value;
      }
    }
    /// <summary>Gets whether the "brand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrand {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "brand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrand() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameCloudSaveSyncObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameCloudSaveSyncObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (MachineId != other.MachineId) return false;
      if (When != other.When) return false;
      if (Direction != other.Direction) return false;
      if (Conflict != other.Conflict) return false;
      if (Error != other.Error) return false;
      if (Resolution != other.Resolution) return false;
      if (BytesSent != other.BytesSent) return false;
      if (Brand != other.Brand) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasMachineId) hash ^= MachineId.GetHashCode();
      if (HasWhen) hash ^= When.GetHashCode();
      if (HasDirection) hash ^= Direction.GetHashCode();
      if (HasConflict) hash ^= Conflict.GetHashCode();
      if (HasError) hash ^= Error.GetHashCode();
      if (HasResolution) hash ^= Resolution.GetHashCode();
      if (HasBytesSent) hash ^= BytesSent.GetHashCode();
      if (HasBrand) hash ^= Brand.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasMachineId) {
        output.WriteRawTag(18);
        output.WriteString(MachineId);
      }
      if (HasWhen) {
        output.WriteRawTag(24);
        output.WriteEnum((int) When);
      }
      if (HasDirection) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Direction);
      }
      if (HasConflict) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Conflict);
      }
      if (HasError) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Error);
      }
      if (HasResolution) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Resolution);
      }
      if (HasBytesSent) {
        output.WriteRawTag(64);
        output.WriteUInt32(BytesSent);
      }
      if (HasBrand) {
        output.WriteRawTag(72);
        output.WriteUInt32(Brand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasMachineId) {
        output.WriteRawTag(18);
        output.WriteString(MachineId);
      }
      if (HasWhen) {
        output.WriteRawTag(24);
        output.WriteEnum((int) When);
      }
      if (HasDirection) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Direction);
      }
      if (HasConflict) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Conflict);
      }
      if (HasError) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Error);
      }
      if (HasResolution) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Resolution);
      }
      if (HasBytesSent) {
        output.WriteRawTag(64);
        output.WriteUInt32(BytesSent);
      }
      if (HasBrand) {
        output.WriteRawTag(72);
        output.WriteUInt32(Brand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasMachineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineId);
      }
      if (HasWhen) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) When);
      }
      if (HasDirection) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (HasConflict) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Conflict);
      }
      if (HasError) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (HasResolution) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resolution);
      }
      if (HasBytesSent) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BytesSent);
      }
      if (HasBrand) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Brand);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameCloudSaveSyncObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasMachineId) {
        MachineId = other.MachineId;
      }
      if (other.HasWhen) {
        When = other.When;
      }
      if (other.HasDirection) {
        Direction = other.Direction;
      }
      if (other.HasConflict) {
        Conflict = other.Conflict;
      }
      if (other.HasError) {
        Error = other.Error;
      }
      if (other.HasResolution) {
        Resolution = other.Resolution;
      }
      if (other.HasBytesSent) {
        BytesSent = other.BytesSent;
      }
      if (other.HasBrand) {
        Brand = other.Brand;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            MachineId = input.ReadString();
            break;
          }
          case 24: {
            When = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.When) input.ReadEnum();
            break;
          }
          case 32: {
            Direction = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Direction) input.ReadEnum();
            break;
          }
          case 40: {
            Conflict = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Conflict) input.ReadEnum();
            break;
          }
          case 48: {
            Error = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Error) input.ReadEnum();
            break;
          }
          case 56: {
            Resolution = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Resolution) input.ReadEnum();
            break;
          }
          case 64: {
            BytesSent = input.ReadUInt32();
            break;
          }
          case 72: {
            Brand = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            MachineId = input.ReadString();
            break;
          }
          case 24: {
            When = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.When) input.ReadEnum();
            break;
          }
          case 32: {
            Direction = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Direction) input.ReadEnum();
            break;
          }
          case 40: {
            Conflict = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Conflict) input.ReadEnum();
            break;
          }
          case 48: {
            Error = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Error) input.ReadEnum();
            break;
          }
          case 56: {
            Resolution = (global::Uplay.Statistics.GameCloudSaveSyncObjectData.Types.Resolution) input.ReadEnum();
            break;
          }
          case 64: {
            BytesSent = input.ReadUInt32();
            break;
          }
          case 72: {
            Brand = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GameCloudSaveSyncObjectData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum When {
        [pbr::OriginalName("START")] Start = 1,
        [pbr::OriginalName("END")] End = 2,
      }

      public enum Direction {
        [pbr::OriginalName("UPLOAD")] Upload = 1,
        [pbr::OriginalName("DOWNLOAD")] Download = 2,
      }

      public enum Conflict {
        [pbr::OriginalName("MISMATCH")] Mismatch = 1,
        [pbr::OriginalName("MIGRATIONCONFLICT")] Migrationconflict = 2,
        [pbr::OriginalName("CLOUDSTORAGECONFLICT")] Cloudstorageconflict = 3,
      }

      public enum Error {
        [pbr::OriginalName("GETCONSISTENTSERVERFAILED")] Getconsistentserverfailed = 1,
        [pbr::OriginalName("SETCONSISTENTSERVERFAILED")] Setconsistentserverfailed = 2,
        [pbr::OriginalName("PACKFILESFAILED")] Packfilesfailed = 3,
        [pbr::OriginalName("GETUPLOADURLFAILED")] Getuploadurlfailed = 4,
        [pbr::OriginalName("UPLOADFAILED")] Uploadfailed = 5,
        [pbr::OriginalName("MIGRATIONFAILED")] Migrationfailed = 6,
        [pbr::OriginalName("DOWNLOADFAILED")] Downloadfailed = 7,
      }

      public enum Resolution {
        [pbr::OriginalName("CLOUD")] Cloud = 1,
        [pbr::OriginalName("LOCAL")] Local = 2,
      }

    }
    #endregion

  }

  public sealed partial class SettingChangedObjectData : pb::IMessage<SettingChangedObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SettingChangedObjectData> _parser = new pb::MessageParser<SettingChangedObjectData>(() => new SettingChangedObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SettingChangedObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SettingChangedObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SettingChangedObjectData(SettingChangedObjectData other) : this() {
      settingName_ = other.settingName_;
      oldValue_ = other.oldValue_;
      newValue_ = other.newValue_;
      sender_ = other.sender_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SettingChangedObjectData Clone() {
      return new SettingChangedObjectData(this);
    }

    /// <summary>Field number for the "settingName" field.</summary>
    public const int SettingNameFieldNumber = 1;
    private readonly static string SettingNameDefaultValue = "";

    private string settingName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SettingName {
      get { return settingName_ ?? SettingNameDefaultValue; }
      set {
        settingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "settingName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSettingName {
      get { return settingName_ != null; }
    }
    /// <summary>Clears the value of the "settingName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSettingName() {
      settingName_ = null;
    }

    /// <summary>Field number for the "oldValue" field.</summary>
    public const int OldValueFieldNumber = 2;
    private readonly static string OldValueDefaultValue = "";

    private string oldValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OldValue {
      get { return oldValue_ ?? OldValueDefaultValue; }
      set {
        oldValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "oldValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOldValue {
      get { return oldValue_ != null; }
    }
    /// <summary>Clears the value of the "oldValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOldValue() {
      oldValue_ = null;
    }

    /// <summary>Field number for the "newValue" field.</summary>
    public const int NewValueFieldNumber = 3;
    private readonly static string NewValueDefaultValue = "";

    private string newValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewValue {
      get { return newValue_ ?? NewValueDefaultValue; }
      set {
        newValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "newValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewValue {
      get { return newValue_ != null; }
    }
    /// <summary>Clears the value of the "newValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewValue() {
      newValue_ = null;
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 4;
    private readonly static string SenderDefaultValue = "";

    private string sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sender {
      get { return sender_ ?? SenderDefaultValue; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sender" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSender {
      get { return sender_ != null; }
    }
    /// <summary>Clears the value of the "sender" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSender() {
      sender_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SettingChangedObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SettingChangedObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SettingName != other.SettingName) return false;
      if (OldValue != other.OldValue) return false;
      if (NewValue != other.NewValue) return false;
      if (Sender != other.Sender) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSettingName) hash ^= SettingName.GetHashCode();
      if (HasOldValue) hash ^= OldValue.GetHashCode();
      if (HasNewValue) hash ^= NewValue.GetHashCode();
      if (HasSender) hash ^= Sender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSettingName) {
        output.WriteRawTag(10);
        output.WriteString(SettingName);
      }
      if (HasOldValue) {
        output.WriteRawTag(18);
        output.WriteString(OldValue);
      }
      if (HasNewValue) {
        output.WriteRawTag(26);
        output.WriteString(NewValue);
      }
      if (HasSender) {
        output.WriteRawTag(34);
        output.WriteString(Sender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSettingName) {
        output.WriteRawTag(10);
        output.WriteString(SettingName);
      }
      if (HasOldValue) {
        output.WriteRawTag(18);
        output.WriteString(OldValue);
      }
      if (HasNewValue) {
        output.WriteRawTag(26);
        output.WriteString(NewValue);
      }
      if (HasSender) {
        output.WriteRawTag(34);
        output.WriteString(Sender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSettingName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SettingName);
      }
      if (HasOldValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldValue);
      }
      if (HasNewValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewValue);
      }
      if (HasSender) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SettingChangedObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasSettingName) {
        SettingName = other.SettingName;
      }
      if (other.HasOldValue) {
        OldValue = other.OldValue;
      }
      if (other.HasNewValue) {
        NewValue = other.NewValue;
      }
      if (other.HasSender) {
        Sender = other.Sender;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SettingName = input.ReadString();
            break;
          }
          case 18: {
            OldValue = input.ReadString();
            break;
          }
          case 26: {
            NewValue = input.ReadString();
            break;
          }
          case 34: {
            Sender = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SettingName = input.ReadString();
            break;
          }
          case 18: {
            OldValue = input.ReadString();
            break;
          }
          case 26: {
            NewValue = input.ReadString();
            break;
          }
          case 34: {
            Sender = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShopAddToCartObjectData : pb::IMessage<ShopAddToCartObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShopAddToCartObjectData> _parser = new pb::MessageParser<ShopAddToCartObjectData>(() => new ShopAddToCartObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShopAddToCartObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShopAddToCartObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShopAddToCartObjectData(ShopAddToCartObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      gameId_ = other.gameId_;
      titleId_ = other.titleId_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShopAddToCartObjectData Clone() {
      return new ShopAddToCartObjectData(this);
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static uint GameIdDefaultValue = 0;

    private uint gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameId {
      get { if ((_hasBits0 & 2) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "gameId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gameId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "titleId" field.</summary>
    public const int TitleIdFieldNumber = 3;
    private readonly static uint TitleIdDefaultValue = 0;

    private uint titleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TitleId {
      get { if ((_hasBits0 & 4) != 0) { return titleId_; } else { return TitleIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        titleId_ = value;
      }
    }
    /// <summary>Gets whether the "titleId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitleId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "titleId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitleId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 4;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShopAddToCartObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShopAddToCartObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (GameId != other.GameId) return false;
      if (TitleId != other.TitleId) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasTitleId) hash ^= TitleId.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameId);
      }
      if (HasTitleId) {
        output.WriteRawTag(24);
        output.WriteUInt32(TitleId);
      }
      if (HasAction) {
        output.WriteRawTag(34);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameId);
      }
      if (HasTitleId) {
        output.WriteRawTag(24);
        output.WriteUInt32(TitleId);
      }
      if (HasAction) {
        output.WriteRawTag(34);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameId);
      }
      if (HasTitleId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TitleId);
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShopAddToCartObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasTitleId) {
        TitleId = other.TitleId;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 16: {
            GameId = input.ReadUInt32();
            break;
          }
          case 24: {
            TitleId = input.ReadUInt32();
            break;
          }
          case 34: {
            Action = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 16: {
            GameId = input.ReadUInt32();
            break;
          }
          case 24: {
            TitleId = input.ReadUInt32();
            break;
          }
          case 34: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UINavObjectData : pb::IMessage<UINavObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UINavObjectData> _parser = new pb::MessageParser<UINavObjectData>(() => new UINavObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UINavObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UINavObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UINavObjectData(UINavObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      index_ = other.index_;
      timeOnFocus_ = other.timeOnFocus_;
      timeOnBlur_ = other.timeOnBlur_;
      generatedFromCache_ = other.generatedFromCache_;
      shopVisible_ = other.shopVisible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UINavObjectData Clone() {
      return new UINavObjectData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private readonly static string IndexDefaultValue = "";

    private string index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Index {
      get { return index_ ?? IndexDefaultValue; }
      set {
        index_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return index_ != null; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      index_ = null;
    }

    /// <summary>Field number for the "timeOnFocus" field.</summary>
    public const int TimeOnFocusFieldNumber = 3;
    private readonly static uint TimeOnFocusDefaultValue = 0;

    private uint timeOnFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeOnFocus {
      get { if ((_hasBits0 & 1) != 0) { return timeOnFocus_; } else { return TimeOnFocusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timeOnFocus_ = value;
      }
    }
    /// <summary>Gets whether the "timeOnFocus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeOnFocus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timeOnFocus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeOnFocus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timeOnBlur" field.</summary>
    public const int TimeOnBlurFieldNumber = 4;
    private readonly static uint TimeOnBlurDefaultValue = 0;

    private uint timeOnBlur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeOnBlur {
      get { if ((_hasBits0 & 2) != 0) { return timeOnBlur_; } else { return TimeOnBlurDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timeOnBlur_ = value;
      }
    }
    /// <summary>Gets whether the "timeOnBlur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeOnBlur {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timeOnBlur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeOnBlur() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "generatedFromCache" field.</summary>
    public const int GeneratedFromCacheFieldNumber = 6;
    private readonly static bool GeneratedFromCacheDefaultValue = false;

    private bool generatedFromCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GeneratedFromCache {
      get { if ((_hasBits0 & 4) != 0) { return generatedFromCache_; } else { return GeneratedFromCacheDefaultValue; } }
      set {
        _hasBits0 |= 4;
        generatedFromCache_ = value;
      }
    }
    /// <summary>Gets whether the "generatedFromCache" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGeneratedFromCache {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "generatedFromCache" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGeneratedFromCache() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "shopVisible" field.</summary>
    public const int ShopVisibleFieldNumber = 7;
    private readonly static bool ShopVisibleDefaultValue = false;

    private bool shopVisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShopVisible {
      get { if ((_hasBits0 & 8) != 0) { return shopVisible_; } else { return ShopVisibleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        shopVisible_ = value;
      }
    }
    /// <summary>Gets whether the "shopVisible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopVisible {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "shopVisible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopVisible() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UINavObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UINavObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Index != other.Index) return false;
      if (TimeOnFocus != other.TimeOnFocus) return false;
      if (TimeOnBlur != other.TimeOnBlur) return false;
      if (GeneratedFromCache != other.GeneratedFromCache) return false;
      if (ShopVisible != other.ShopVisible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasIndex) hash ^= Index.GetHashCode();
      if (HasTimeOnFocus) hash ^= TimeOnFocus.GetHashCode();
      if (HasTimeOnBlur) hash ^= TimeOnBlur.GetHashCode();
      if (HasGeneratedFromCache) hash ^= GeneratedFromCache.GetHashCode();
      if (HasShopVisible) hash ^= ShopVisible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasIndex) {
        output.WriteRawTag(18);
        output.WriteString(Index);
      }
      if (HasTimeOnFocus) {
        output.WriteRawTag(24);
        output.WriteUInt32(TimeOnFocus);
      }
      if (HasTimeOnBlur) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimeOnBlur);
      }
      if (HasGeneratedFromCache) {
        output.WriteRawTag(48);
        output.WriteBool(GeneratedFromCache);
      }
      if (HasShopVisible) {
        output.WriteRawTag(56);
        output.WriteBool(ShopVisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasIndex) {
        output.WriteRawTag(18);
        output.WriteString(Index);
      }
      if (HasTimeOnFocus) {
        output.WriteRawTag(24);
        output.WriteUInt32(TimeOnFocus);
      }
      if (HasTimeOnBlur) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimeOnBlur);
      }
      if (HasGeneratedFromCache) {
        output.WriteRawTag(48);
        output.WriteBool(GeneratedFromCache);
      }
      if (HasShopVisible) {
        output.WriteRawTag(56);
        output.WriteBool(ShopVisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Index);
      }
      if (HasTimeOnFocus) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeOnFocus);
      }
      if (HasTimeOnBlur) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeOnBlur);
      }
      if (HasGeneratedFromCache) {
        size += 1 + 1;
      }
      if (HasShopVisible) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UINavObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasTimeOnFocus) {
        TimeOnFocus = other.TimeOnFocus;
      }
      if (other.HasTimeOnBlur) {
        TimeOnBlur = other.TimeOnBlur;
      }
      if (other.HasGeneratedFromCache) {
        GeneratedFromCache = other.GeneratedFromCache;
      }
      if (other.HasShopVisible) {
        ShopVisible = other.ShopVisible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Index = input.ReadString();
            break;
          }
          case 24: {
            TimeOnFocus = input.ReadUInt32();
            break;
          }
          case 32: {
            TimeOnBlur = input.ReadUInt32();
            break;
          }
          case 48: {
            GeneratedFromCache = input.ReadBool();
            break;
          }
          case 56: {
            ShopVisible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Index = input.ReadString();
            break;
          }
          case 24: {
            TimeOnFocus = input.ReadUInt32();
            break;
          }
          case 32: {
            TimeOnBlur = input.ReadUInt32();
            break;
          }
          case 48: {
            GeneratedFromCache = input.ReadBool();
            break;
          }
          case 56: {
            ShopVisible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BattlePassActionObjectData : pb::IMessage<BattlePassActionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattlePassActionObjectData> _parser = new pb::MessageParser<BattlePassActionObjectData>(() => new BattlePassActionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattlePassActionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassActionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassActionObjectData(BattlePassActionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      details_ = other.details_;
      endstatus_ = other.endstatus_;
      gameId_ = other.gameId_;
      brandId_ = other.brandId_;
      viewSource_ = other.viewSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassActionObjectData Clone() {
      return new BattlePassActionObjectData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 2;
    private readonly static string DetailsDefaultValue = "";

    private string details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Details {
      get { return details_ ?? DetailsDefaultValue; }
      set {
        details_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "details" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDetails {
      get { return details_ != null; }
    }
    /// <summary>Clears the value of the "details" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDetails() {
      details_ = null;
    }

    /// <summary>Field number for the "endstatus" field.</summary>
    public const int EndstatusFieldNumber = 3;
    private readonly static string EndstatusDefaultValue = "";

    private string endstatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Endstatus {
      get { return endstatus_ ?? EndstatusDefaultValue; }
      set {
        endstatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "endstatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndstatus {
      get { return endstatus_ != null; }
    }
    /// <summary>Clears the value of the "endstatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndstatus() {
      endstatus_ = null;
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 4;
    private readonly static uint GameIdDefaultValue = 0;

    private uint gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "gameId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gameId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 5;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 2) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "viewSource" field.</summary>
    public const int ViewSourceFieldNumber = 6;
    private readonly static string ViewSourceDefaultValue = "";

    private string viewSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewSource {
      get { return viewSource_ ?? ViewSourceDefaultValue; }
      set {
        viewSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "viewSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewSource {
      get { return viewSource_ != null; }
    }
    /// <summary>Clears the value of the "viewSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewSource() {
      viewSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattlePassActionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattlePassActionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (Details != other.Details) return false;
      if (Endstatus != other.Endstatus) return false;
      if (GameId != other.GameId) return false;
      if (BrandId != other.BrandId) return false;
      if (ViewSource != other.ViewSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasDetails) hash ^= Details.GetHashCode();
      if (HasEndstatus) hash ^= Endstatus.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasViewSource) hash ^= ViewSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasDetails) {
        output.WriteRawTag(18);
        output.WriteString(Details);
      }
      if (HasEndstatus) {
        output.WriteRawTag(26);
        output.WriteString(Endstatus);
      }
      if (HasGameId) {
        output.WriteRawTag(32);
        output.WriteUInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(40);
        output.WriteUInt32(BrandId);
      }
      if (HasViewSource) {
        output.WriteRawTag(50);
        output.WriteString(ViewSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasDetails) {
        output.WriteRawTag(18);
        output.WriteString(Details);
      }
      if (HasEndstatus) {
        output.WriteRawTag(26);
        output.WriteString(Endstatus);
      }
      if (HasGameId) {
        output.WriteRawTag(32);
        output.WriteUInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(40);
        output.WriteUInt32(BrandId);
      }
      if (HasViewSource) {
        output.WriteRawTag(50);
        output.WriteString(ViewSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasDetails) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Details);
      }
      if (HasEndstatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endstatus);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameId);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasViewSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattlePassActionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasDetails) {
        Details = other.Details;
      }
      if (other.HasEndstatus) {
        Endstatus = other.Endstatus;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasViewSource) {
        ViewSource = other.ViewSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            Details = input.ReadString();
            break;
          }
          case 26: {
            Endstatus = input.ReadString();
            break;
          }
          case 32: {
            GameId = input.ReadUInt32();
            break;
          }
          case 40: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 50: {
            ViewSource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            Details = input.ReadString();
            break;
          }
          case 26: {
            Endstatus = input.ReadString();
            break;
          }
          case 32: {
            GameId = input.ReadUInt32();
            break;
          }
          case 40: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 50: {
            ViewSource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppStartObjectData : pb::IMessage<AppStartObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppStartObjectData> _parser = new pb::MessageParser<AppStartObjectData>(() => new AppStartObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AppStartObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppStartObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppStartObjectData(AppStartObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      launchMethod_ = other.launchMethod_;
      machineId_ = other.machineId_;
      fileVersion_ = other.fileVersion_;
      patchTime_ = other.patchTime_;
      loginTime_ = other.loginTime_;
      configTime_ = other.configTime_;
      optInPatch_ = other.optInPatch_;
      offlineStart_ = other.offlineStart_;
      authType_ = other.authType_;
      shopVisible_ = other.shopVisible_;
      verifiedEmail_ = other.verifiedEmail_;
      twoFAtype_ = other.twoFAtype_;
      trustedDevice_ = other.trustedDevice_;
      verifiedPhone_ = other.verifiedPhone_;
      clientLanguage_ = other.clientLanguage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppStartObjectData Clone() {
      return new AppStartObjectData(this);
    }

    /// <summary>Field number for the "launchMethod" field.</summary>
    public const int LaunchMethodFieldNumber = 1;
    private readonly static string LaunchMethodDefaultValue = "";

    private string launchMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LaunchMethod {
      get { return launchMethod_ ?? LaunchMethodDefaultValue; }
      set {
        launchMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "launchMethod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLaunchMethod {
      get { return launchMethod_ != null; }
    }
    /// <summary>Clears the value of the "launchMethod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLaunchMethod() {
      launchMethod_ = null;
    }

    /// <summary>Field number for the "machineId" field.</summary>
    public const int MachineIdFieldNumber = 2;
    private readonly static string MachineIdDefaultValue = "";

    private string machineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineId {
      get { return machineId_ ?? MachineIdDefaultValue; }
      set {
        machineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "machineId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMachineId {
      get { return machineId_ != null; }
    }
    /// <summary>Clears the value of the "machineId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMachineId() {
      machineId_ = null;
    }

    /// <summary>Field number for the "fileVersion" field.</summary>
    public const int FileVersionFieldNumber = 3;
    private readonly static string FileVersionDefaultValue = "";

    private string fileVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileVersion {
      get { return fileVersion_ ?? FileVersionDefaultValue; }
      set {
        fileVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileVersion {
      get { return fileVersion_ != null; }
    }
    /// <summary>Clears the value of the "fileVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileVersion() {
      fileVersion_ = null;
    }

    /// <summary>Field number for the "patchTime" field.</summary>
    public const int PatchTimeFieldNumber = 4;
    private readonly static uint PatchTimeDefaultValue = 0;

    private uint patchTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchTime {
      get { if ((_hasBits0 & 1) != 0) { return patchTime_; } else { return PatchTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        patchTime_ = value;
      }
    }
    /// <summary>Gets whether the "patchTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPatchTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "patchTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPatchTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "loginTime" field.</summary>
    public const int LoginTimeFieldNumber = 5;
    private readonly static uint LoginTimeDefaultValue = 0;

    private uint loginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LoginTime {
      get { if ((_hasBits0 & 2) != 0) { return loginTime_; } else { return LoginTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        loginTime_ = value;
      }
    }
    /// <summary>Gets whether the "loginTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoginTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "loginTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoginTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "configTime" field.</summary>
    public const int ConfigTimeFieldNumber = 6;
    private readonly static uint ConfigTimeDefaultValue = 0;

    private uint configTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConfigTime {
      get { if ((_hasBits0 & 4) != 0) { return configTime_; } else { return ConfigTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        configTime_ = value;
      }
    }
    /// <summary>Gets whether the "configTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfigTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "configTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfigTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "optInPatch" field.</summary>
    public const int OptInPatchFieldNumber = 7;
    private readonly static string OptInPatchDefaultValue = "";

    private string optInPatch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptInPatch {
      get { return optInPatch_ ?? OptInPatchDefaultValue; }
      set {
        optInPatch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "optInPatch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOptInPatch {
      get { return optInPatch_ != null; }
    }
    /// <summary>Clears the value of the "optInPatch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptInPatch() {
      optInPatch_ = null;
    }

    /// <summary>Field number for the "offlineStart" field.</summary>
    public const int OfflineStartFieldNumber = 8;
    private readonly static bool OfflineStartDefaultValue = false;

    private bool offlineStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OfflineStart {
      get { if ((_hasBits0 & 8) != 0) { return offlineStart_; } else { return OfflineStartDefaultValue; } }
      set {
        _hasBits0 |= 8;
        offlineStart_ = value;
      }
    }
    /// <summary>Gets whether the "offlineStart" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOfflineStart {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "offlineStart" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOfflineStart() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "authType" field.</summary>
    public const int AuthTypeFieldNumber = 9;
    private readonly static uint AuthTypeDefaultValue = 0;

    private uint authType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AuthType {
      get { if ((_hasBits0 & 16) != 0) { return authType_; } else { return AuthTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        authType_ = value;
      }
    }
    /// <summary>Gets whether the "authType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "authType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "shopVisible" field.</summary>
    public const int ShopVisibleFieldNumber = 10;
    private readonly static bool ShopVisibleDefaultValue = false;

    private bool shopVisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShopVisible {
      get { if ((_hasBits0 & 32) != 0) { return shopVisible_; } else { return ShopVisibleDefaultValue; } }
      set {
        _hasBits0 |= 32;
        shopVisible_ = value;
      }
    }
    /// <summary>Gets whether the "shopVisible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopVisible {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "shopVisible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopVisible() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "verifiedEmail" field.</summary>
    public const int VerifiedEmailFieldNumber = 12;
    private readonly static bool VerifiedEmailDefaultValue = false;

    private bool verifiedEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VerifiedEmail {
      get { if ((_hasBits0 & 64) != 0) { return verifiedEmail_; } else { return VerifiedEmailDefaultValue; } }
      set {
        _hasBits0 |= 64;
        verifiedEmail_ = value;
      }
    }
    /// <summary>Gets whether the "verifiedEmail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVerifiedEmail {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "verifiedEmail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVerifiedEmail() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "twoFAtype" field.</summary>
    public const int TwoFAtypeFieldNumber = 13;
    private readonly static string TwoFAtypeDefaultValue = "";

    private string twoFAtype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TwoFAtype {
      get { return twoFAtype_ ?? TwoFAtypeDefaultValue; }
      set {
        twoFAtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "twoFAtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTwoFAtype {
      get { return twoFAtype_ != null; }
    }
    /// <summary>Clears the value of the "twoFAtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTwoFAtype() {
      twoFAtype_ = null;
    }

    /// <summary>Field number for the "trustedDevice" field.</summary>
    public const int TrustedDeviceFieldNumber = 14;
    private readonly static bool TrustedDeviceDefaultValue = false;

    private bool trustedDevice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TrustedDevice {
      get { if ((_hasBits0 & 128) != 0) { return trustedDevice_; } else { return TrustedDeviceDefaultValue; } }
      set {
        _hasBits0 |= 128;
        trustedDevice_ = value;
      }
    }
    /// <summary>Gets whether the "trustedDevice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrustedDevice {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "trustedDevice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrustedDevice() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "verifiedPhone" field.</summary>
    public const int VerifiedPhoneFieldNumber = 15;
    private readonly static bool VerifiedPhoneDefaultValue = false;

    private bool verifiedPhone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VerifiedPhone {
      get { if ((_hasBits0 & 256) != 0) { return verifiedPhone_; } else { return VerifiedPhoneDefaultValue; } }
      set {
        _hasBits0 |= 256;
        verifiedPhone_ = value;
      }
    }
    /// <summary>Gets whether the "verifiedPhone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVerifiedPhone {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "verifiedPhone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVerifiedPhone() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "clientLanguage" field.</summary>
    public const int ClientLanguageFieldNumber = 16;
    private readonly static string ClientLanguageDefaultValue = "";

    private string clientLanguage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientLanguage {
      get { return clientLanguage_ ?? ClientLanguageDefaultValue; }
      set {
        clientLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clientLanguage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientLanguage {
      get { return clientLanguage_ != null; }
    }
    /// <summary>Clears the value of the "clientLanguage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientLanguage() {
      clientLanguage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AppStartObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AppStartObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LaunchMethod != other.LaunchMethod) return false;
      if (MachineId != other.MachineId) return false;
      if (FileVersion != other.FileVersion) return false;
      if (PatchTime != other.PatchTime) return false;
      if (LoginTime != other.LoginTime) return false;
      if (ConfigTime != other.ConfigTime) return false;
      if (OptInPatch != other.OptInPatch) return false;
      if (OfflineStart != other.OfflineStart) return false;
      if (AuthType != other.AuthType) return false;
      if (ShopVisible != other.ShopVisible) return false;
      if (VerifiedEmail != other.VerifiedEmail) return false;
      if (TwoFAtype != other.TwoFAtype) return false;
      if (TrustedDevice != other.TrustedDevice) return false;
      if (VerifiedPhone != other.VerifiedPhone) return false;
      if (ClientLanguage != other.ClientLanguage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLaunchMethod) hash ^= LaunchMethod.GetHashCode();
      if (HasMachineId) hash ^= MachineId.GetHashCode();
      if (HasFileVersion) hash ^= FileVersion.GetHashCode();
      if (HasPatchTime) hash ^= PatchTime.GetHashCode();
      if (HasLoginTime) hash ^= LoginTime.GetHashCode();
      if (HasConfigTime) hash ^= ConfigTime.GetHashCode();
      if (HasOptInPatch) hash ^= OptInPatch.GetHashCode();
      if (HasOfflineStart) hash ^= OfflineStart.GetHashCode();
      if (HasAuthType) hash ^= AuthType.GetHashCode();
      if (HasShopVisible) hash ^= ShopVisible.GetHashCode();
      if (HasVerifiedEmail) hash ^= VerifiedEmail.GetHashCode();
      if (HasTwoFAtype) hash ^= TwoFAtype.GetHashCode();
      if (HasTrustedDevice) hash ^= TrustedDevice.GetHashCode();
      if (HasVerifiedPhone) hash ^= VerifiedPhone.GetHashCode();
      if (HasClientLanguage) hash ^= ClientLanguage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLaunchMethod) {
        output.WriteRawTag(10);
        output.WriteString(LaunchMethod);
      }
      if (HasMachineId) {
        output.WriteRawTag(18);
        output.WriteString(MachineId);
      }
      if (HasFileVersion) {
        output.WriteRawTag(26);
        output.WriteString(FileVersion);
      }
      if (HasPatchTime) {
        output.WriteRawTag(32);
        output.WriteUInt32(PatchTime);
      }
      if (HasLoginTime) {
        output.WriteRawTag(40);
        output.WriteUInt32(LoginTime);
      }
      if (HasConfigTime) {
        output.WriteRawTag(48);
        output.WriteUInt32(ConfigTime);
      }
      if (HasOptInPatch) {
        output.WriteRawTag(58);
        output.WriteString(OptInPatch);
      }
      if (HasOfflineStart) {
        output.WriteRawTag(64);
        output.WriteBool(OfflineStart);
      }
      if (HasAuthType) {
        output.WriteRawTag(72);
        output.WriteUInt32(AuthType);
      }
      if (HasShopVisible) {
        output.WriteRawTag(80);
        output.WriteBool(ShopVisible);
      }
      if (HasVerifiedEmail) {
        output.WriteRawTag(96);
        output.WriteBool(VerifiedEmail);
      }
      if (HasTwoFAtype) {
        output.WriteRawTag(106);
        output.WriteString(TwoFAtype);
      }
      if (HasTrustedDevice) {
        output.WriteRawTag(112);
        output.WriteBool(TrustedDevice);
      }
      if (HasVerifiedPhone) {
        output.WriteRawTag(120);
        output.WriteBool(VerifiedPhone);
      }
      if (HasClientLanguage) {
        output.WriteRawTag(130, 1);
        output.WriteString(ClientLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLaunchMethod) {
        output.WriteRawTag(10);
        output.WriteString(LaunchMethod);
      }
      if (HasMachineId) {
        output.WriteRawTag(18);
        output.WriteString(MachineId);
      }
      if (HasFileVersion) {
        output.WriteRawTag(26);
        output.WriteString(FileVersion);
      }
      if (HasPatchTime) {
        output.WriteRawTag(32);
        output.WriteUInt32(PatchTime);
      }
      if (HasLoginTime) {
        output.WriteRawTag(40);
        output.WriteUInt32(LoginTime);
      }
      if (HasConfigTime) {
        output.WriteRawTag(48);
        output.WriteUInt32(ConfigTime);
      }
      if (HasOptInPatch) {
        output.WriteRawTag(58);
        output.WriteString(OptInPatch);
      }
      if (HasOfflineStart) {
        output.WriteRawTag(64);
        output.WriteBool(OfflineStart);
      }
      if (HasAuthType) {
        output.WriteRawTag(72);
        output.WriteUInt32(AuthType);
      }
      if (HasShopVisible) {
        output.WriteRawTag(80);
        output.WriteBool(ShopVisible);
      }
      if (HasVerifiedEmail) {
        output.WriteRawTag(96);
        output.WriteBool(VerifiedEmail);
      }
      if (HasTwoFAtype) {
        output.WriteRawTag(106);
        output.WriteString(TwoFAtype);
      }
      if (HasTrustedDevice) {
        output.WriteRawTag(112);
        output.WriteBool(TrustedDevice);
      }
      if (HasVerifiedPhone) {
        output.WriteRawTag(120);
        output.WriteBool(VerifiedPhone);
      }
      if (HasClientLanguage) {
        output.WriteRawTag(130, 1);
        output.WriteString(ClientLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLaunchMethod) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LaunchMethod);
      }
      if (HasMachineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineId);
      }
      if (HasFileVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileVersion);
      }
      if (HasPatchTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchTime);
      }
      if (HasLoginTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoginTime);
      }
      if (HasConfigTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConfigTime);
      }
      if (HasOptInPatch) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptInPatch);
      }
      if (HasOfflineStart) {
        size += 1 + 1;
      }
      if (HasAuthType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuthType);
      }
      if (HasShopVisible) {
        size += 1 + 1;
      }
      if (HasVerifiedEmail) {
        size += 1 + 1;
      }
      if (HasTwoFAtype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TwoFAtype);
      }
      if (HasTrustedDevice) {
        size += 1 + 1;
      }
      if (HasVerifiedPhone) {
        size += 1 + 1;
      }
      if (HasClientLanguage) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientLanguage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AppStartObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasLaunchMethod) {
        LaunchMethod = other.LaunchMethod;
      }
      if (other.HasMachineId) {
        MachineId = other.MachineId;
      }
      if (other.HasFileVersion) {
        FileVersion = other.FileVersion;
      }
      if (other.HasPatchTime) {
        PatchTime = other.PatchTime;
      }
      if (other.HasLoginTime) {
        LoginTime = other.LoginTime;
      }
      if (other.HasConfigTime) {
        ConfigTime = other.ConfigTime;
      }
      if (other.HasOptInPatch) {
        OptInPatch = other.OptInPatch;
      }
      if (other.HasOfflineStart) {
        OfflineStart = other.OfflineStart;
      }
      if (other.HasAuthType) {
        AuthType = other.AuthType;
      }
      if (other.HasShopVisible) {
        ShopVisible = other.ShopVisible;
      }
      if (other.HasVerifiedEmail) {
        VerifiedEmail = other.VerifiedEmail;
      }
      if (other.HasTwoFAtype) {
        TwoFAtype = other.TwoFAtype;
      }
      if (other.HasTrustedDevice) {
        TrustedDevice = other.TrustedDevice;
      }
      if (other.HasVerifiedPhone) {
        VerifiedPhone = other.VerifiedPhone;
      }
      if (other.HasClientLanguage) {
        ClientLanguage = other.ClientLanguage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LaunchMethod = input.ReadString();
            break;
          }
          case 18: {
            MachineId = input.ReadString();
            break;
          }
          case 26: {
            FileVersion = input.ReadString();
            break;
          }
          case 32: {
            PatchTime = input.ReadUInt32();
            break;
          }
          case 40: {
            LoginTime = input.ReadUInt32();
            break;
          }
          case 48: {
            ConfigTime = input.ReadUInt32();
            break;
          }
          case 58: {
            OptInPatch = input.ReadString();
            break;
          }
          case 64: {
            OfflineStart = input.ReadBool();
            break;
          }
          case 72: {
            AuthType = input.ReadUInt32();
            break;
          }
          case 80: {
            ShopVisible = input.ReadBool();
            break;
          }
          case 96: {
            VerifiedEmail = input.ReadBool();
            break;
          }
          case 106: {
            TwoFAtype = input.ReadString();
            break;
          }
          case 112: {
            TrustedDevice = input.ReadBool();
            break;
          }
          case 120: {
            VerifiedPhone = input.ReadBool();
            break;
          }
          case 130: {
            ClientLanguage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LaunchMethod = input.ReadString();
            break;
          }
          case 18: {
            MachineId = input.ReadString();
            break;
          }
          case 26: {
            FileVersion = input.ReadString();
            break;
          }
          case 32: {
            PatchTime = input.ReadUInt32();
            break;
          }
          case 40: {
            LoginTime = input.ReadUInt32();
            break;
          }
          case 48: {
            ConfigTime = input.ReadUInt32();
            break;
          }
          case 58: {
            OptInPatch = input.ReadString();
            break;
          }
          case 64: {
            OfflineStart = input.ReadBool();
            break;
          }
          case 72: {
            AuthType = input.ReadUInt32();
            break;
          }
          case 80: {
            ShopVisible = input.ReadBool();
            break;
          }
          case 96: {
            VerifiedEmail = input.ReadBool();
            break;
          }
          case 106: {
            TwoFAtype = input.ReadString();
            break;
          }
          case 112: {
            TrustedDevice = input.ReadBool();
            break;
          }
          case 120: {
            VerifiedPhone = input.ReadBool();
            break;
          }
          case 130: {
            ClientLanguage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AppStartObjectData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AuthType {
        [pbr::OriginalName("NORMAL")] Normal = 0,
        [pbr::OriginalName("STEAM")] Steam = 1,
        [pbr::OriginalName("GOOGLE_AUTHENTICATOR")] GoogleAuthenticator = 2,
        [pbr::OriginalName("OCULUS")] Oculus = 3,
        [pbr::OriginalName("NVIDIA")] Nvidia = 4,
        [pbr::OriginalName("UBITUS")] Ubitus = 5,
        [pbr::OriginalName("UBISOFT_AUTHENTICATOR")] UbisoftAuthenticator = 6,
      }

    }
    #endregion

  }

  public sealed partial class DownloadObjectData : pb::IMessage<DownloadObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownloadObjectData> _parser = new pb::MessageParser<DownloadObjectData>(() => new DownloadObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownloadObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownloadObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownloadObjectData(DownloadObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      dlSessionId_ = other.dlSessionId_;
      contract_ = other.contract_;
      contentType_ = other.contentType_;
      isResuming_ = other.isResuming_;
      productId_ = other.productId_;
      patchDL_ = other.patchDL_;
      dlSize_ = other.dlSize_;
      overheadWaste_ = other.overheadWaste_;
      overheadMetadata_ = other.overheadMetadata_;
      overheadTotal_ = other.overheadTotal_;
      totalExpectedSize_ = other.totalExpectedSize_;
      totalDLSize_ = other.totalDLSize_;
      milestoneDLTime_ = other.milestoneDLTime_;
      totalDLTime_ = other.totalDLTime_;
      avgDLSpeed_ = other.avgDLSpeed_;
      maxDLSpeed_ = other.maxDLSpeed_;
      nbTimesPaused_ = other.nbTimesPaused_;
      endStatus_ = other.endStatus_;
      failReason_ = other.failReason_;
      userSpeedLimit_ = other.userSpeedLimit_;
      activationIds_ = other.activationIds_;
      brand_ = other.brand_;
      initiatedFrom_ = other.initiatedFrom_;
      installerId_ = other.installerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownloadObjectData Clone() {
      return new DownloadObjectData(this);
    }

    /// <summary>Field number for the "dlSessionId" field.</summary>
    public const int DlSessionIdFieldNumber = 1;
    private readonly static string DlSessionIdDefaultValue = "";

    private string dlSessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DlSessionId {
      get { return dlSessionId_ ?? DlSessionIdDefaultValue; }
      set {
        dlSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dlSessionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDlSessionId {
      get { return dlSessionId_ != null; }
    }
    /// <summary>Clears the value of the "dlSessionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDlSessionId() {
      dlSessionId_ = null;
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 2;
    private readonly static string ContractDefaultValue = "";

    private string contract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Contract {
      get { return contract_ ?? ContractDefaultValue; }
      set {
        contract_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contract" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContract {
      get { return contract_ != null; }
    }
    /// <summary>Clears the value of the "contract" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContract() {
      contract_ = null;
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 3;
    private readonly static string ContentTypeDefaultValue = "";

    private string contentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentType {
      get { return contentType_ ?? ContentTypeDefaultValue; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contentType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContentType {
      get { return contentType_ != null; }
    }
    /// <summary>Clears the value of the "contentType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContentType() {
      contentType_ = null;
    }

    /// <summary>Field number for the "isResuming" field.</summary>
    public const int IsResumingFieldNumber = 4;
    private readonly static bool IsResumingDefaultValue = false;

    private bool isResuming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsResuming {
      get { if ((_hasBits0 & 1) != 0) { return isResuming_; } else { return IsResumingDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isResuming_ = value;
      }
    }
    /// <summary>Gets whether the "isResuming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsResuming {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "isResuming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsResuming() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 5;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 2) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "patchDL" field.</summary>
    public const int PatchDLFieldNumber = 6;
    private readonly static uint PatchDLDefaultValue = 0;

    private uint patchDL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchDL {
      get { if ((_hasBits0 & 4) != 0) { return patchDL_; } else { return PatchDLDefaultValue; } }
      set {
        _hasBits0 |= 4;
        patchDL_ = value;
      }
    }
    /// <summary>Gets whether the "patchDL" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPatchDL {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "patchDL" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPatchDL() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "dlSize" field.</summary>
    public const int DlSizeFieldNumber = 7;
    private readonly static ulong DlSizeDefaultValue = 0UL;

    private ulong dlSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DlSize {
      get { if ((_hasBits0 & 8) != 0) { return dlSize_; } else { return DlSizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        dlSize_ = value;
      }
    }
    /// <summary>Gets whether the "dlSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDlSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "dlSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDlSize() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "overheadWaste" field.</summary>
    public const int OverheadWasteFieldNumber = 8;
    private readonly static ulong OverheadWasteDefaultValue = 0UL;

    private ulong overheadWaste_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong OverheadWaste {
      get { if ((_hasBits0 & 16) != 0) { return overheadWaste_; } else { return OverheadWasteDefaultValue; } }
      set {
        _hasBits0 |= 16;
        overheadWaste_ = value;
      }
    }
    /// <summary>Gets whether the "overheadWaste" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOverheadWaste {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "overheadWaste" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOverheadWaste() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "overheadMetadata" field.</summary>
    public const int OverheadMetadataFieldNumber = 9;
    private readonly static ulong OverheadMetadataDefaultValue = 0UL;

    private ulong overheadMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong OverheadMetadata {
      get { if ((_hasBits0 & 32) != 0) { return overheadMetadata_; } else { return OverheadMetadataDefaultValue; } }
      set {
        _hasBits0 |= 32;
        overheadMetadata_ = value;
      }
    }
    /// <summary>Gets whether the "overheadMetadata" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOverheadMetadata {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "overheadMetadata" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOverheadMetadata() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "overheadTotal" field.</summary>
    public const int OverheadTotalFieldNumber = 10;
    private readonly static ulong OverheadTotalDefaultValue = 0UL;

    private ulong overheadTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong OverheadTotal {
      get { if ((_hasBits0 & 64) != 0) { return overheadTotal_; } else { return OverheadTotalDefaultValue; } }
      set {
        _hasBits0 |= 64;
        overheadTotal_ = value;
      }
    }
    /// <summary>Gets whether the "overheadTotal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOverheadTotal {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "overheadTotal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOverheadTotal() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "totalExpectedSize" field.</summary>
    public const int TotalExpectedSizeFieldNumber = 11;
    private readonly static ulong TotalExpectedSizeDefaultValue = 0UL;

    private ulong totalExpectedSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TotalExpectedSize {
      get { if ((_hasBits0 & 128) != 0) { return totalExpectedSize_; } else { return TotalExpectedSizeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        totalExpectedSize_ = value;
      }
    }
    /// <summary>Gets whether the "totalExpectedSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalExpectedSize {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "totalExpectedSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalExpectedSize() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "totalDLSize" field.</summary>
    public const int TotalDLSizeFieldNumber = 12;
    private readonly static ulong TotalDLSizeDefaultValue = 0UL;

    private ulong totalDLSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TotalDLSize {
      get { if ((_hasBits0 & 256) != 0) { return totalDLSize_; } else { return TotalDLSizeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        totalDLSize_ = value;
      }
    }
    /// <summary>Gets whether the "totalDLSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalDLSize {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "totalDLSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalDLSize() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "milestoneDLTime" field.</summary>
    public const int MilestoneDLTimeFieldNumber = 13;
    private readonly static uint MilestoneDLTimeDefaultValue = 0;

    private uint milestoneDLTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MilestoneDLTime {
      get { if ((_hasBits0 & 512) != 0) { return milestoneDLTime_; } else { return MilestoneDLTimeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        milestoneDLTime_ = value;
      }
    }
    /// <summary>Gets whether the "milestoneDLTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMilestoneDLTime {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "milestoneDLTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMilestoneDLTime() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "totalDLTime" field.</summary>
    public const int TotalDLTimeFieldNumber = 14;
    private readonly static uint TotalDLTimeDefaultValue = 0;

    private uint totalDLTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalDLTime {
      get { if ((_hasBits0 & 1024) != 0) { return totalDLTime_; } else { return TotalDLTimeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        totalDLTime_ = value;
      }
    }
    /// <summary>Gets whether the "totalDLTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalDLTime {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "totalDLTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalDLTime() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "avgDLSpeed" field.</summary>
    public const int AvgDLSpeedFieldNumber = 15;
    private readonly static ulong AvgDLSpeedDefaultValue = 0UL;

    private ulong avgDLSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AvgDLSpeed {
      get { if ((_hasBits0 & 2048) != 0) { return avgDLSpeed_; } else { return AvgDLSpeedDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        avgDLSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "avgDLSpeed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvgDLSpeed {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "avgDLSpeed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvgDLSpeed() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "maxDLSpeed" field.</summary>
    public const int MaxDLSpeedFieldNumber = 16;
    private readonly static ulong MaxDLSpeedDefaultValue = 0UL;

    private ulong maxDLSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MaxDLSpeed {
      get { if ((_hasBits0 & 4096) != 0) { return maxDLSpeed_; } else { return MaxDLSpeedDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        maxDLSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "maxDLSpeed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxDLSpeed {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "maxDLSpeed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxDLSpeed() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "nbTimesPaused" field.</summary>
    public const int NbTimesPausedFieldNumber = 17;
    private readonly static uint NbTimesPausedDefaultValue = 0;

    private uint nbTimesPaused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbTimesPaused {
      get { if ((_hasBits0 & 8192) != 0) { return nbTimesPaused_; } else { return NbTimesPausedDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        nbTimesPaused_ = value;
      }
    }
    /// <summary>Gets whether the "nbTimesPaused" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbTimesPaused {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "nbTimesPaused" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbTimesPaused() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "endStatus" field.</summary>
    public const int EndStatusFieldNumber = 18;
    private readonly static string EndStatusDefaultValue = "";

    private string endStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndStatus {
      get { return endStatus_ ?? EndStatusDefaultValue; }
      set {
        endStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "endStatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndStatus {
      get { return endStatus_ != null; }
    }
    /// <summary>Clears the value of the "endStatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndStatus() {
      endStatus_ = null;
    }

    /// <summary>Field number for the "failReason" field.</summary>
    public const int FailReasonFieldNumber = 19;
    private readonly static string FailReasonDefaultValue = "";

    private string failReason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FailReason {
      get { return failReason_ ?? FailReasonDefaultValue; }
      set {
        failReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "failReason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFailReason {
      get { return failReason_ != null; }
    }
    /// <summary>Clears the value of the "failReason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFailReason() {
      failReason_ = null;
    }

    /// <summary>Field number for the "userSpeedLimit" field.</summary>
    public const int UserSpeedLimitFieldNumber = 20;
    private readonly static uint UserSpeedLimitDefaultValue = 0;

    private uint userSpeedLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UserSpeedLimit {
      get { if ((_hasBits0 & 16384) != 0) { return userSpeedLimit_; } else { return UserSpeedLimitDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        userSpeedLimit_ = value;
      }
    }
    /// <summary>Gets whether the "userSpeedLimit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserSpeedLimit {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "userSpeedLimit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserSpeedLimit() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "activationIds" field.</summary>
    public const int ActivationIdsFieldNumber = 21;
    private readonly static string ActivationIdsDefaultValue = "";

    private string activationIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivationIds {
      get { return activationIds_ ?? ActivationIdsDefaultValue; }
      set {
        activationIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "activationIds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationIds {
      get { return activationIds_ != null; }
    }
    /// <summary>Clears the value of the "activationIds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationIds() {
      activationIds_ = null;
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 22;
    private readonly static uint BrandDefaultValue = 0;

    private uint brand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Brand {
      get { if ((_hasBits0 & 32768) != 0) { return brand_; } else { return BrandDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        brand_ = value;
      }
    }
    /// <summary>Gets whether the "brand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrand {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "brand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrand() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "initiatedFrom" field.</summary>
    public const int InitiatedFromFieldNumber = 24;
    private readonly static string InitiatedFromDefaultValue = "";

    private string initiatedFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InitiatedFrom {
      get { return initiatedFrom_ ?? InitiatedFromDefaultValue; }
      set {
        initiatedFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "initiatedFrom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitiatedFrom {
      get { return initiatedFrom_ != null; }
    }
    /// <summary>Clears the value of the "initiatedFrom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitiatedFrom() {
      initiatedFrom_ = null;
    }

    /// <summary>Field number for the "installerId" field.</summary>
    public const int InstallerIdFieldNumber = 25;
    private readonly static string InstallerIdDefaultValue = "";

    private string installerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstallerId {
      get { return installerId_ ?? InstallerIdDefaultValue; }
      set {
        installerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "installerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstallerId {
      get { return installerId_ != null; }
    }
    /// <summary>Clears the value of the "installerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstallerId() {
      installerId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownloadObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownloadObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DlSessionId != other.DlSessionId) return false;
      if (Contract != other.Contract) return false;
      if (ContentType != other.ContentType) return false;
      if (IsResuming != other.IsResuming) return false;
      if (ProductId != other.ProductId) return false;
      if (PatchDL != other.PatchDL) return false;
      if (DlSize != other.DlSize) return false;
      if (OverheadWaste != other.OverheadWaste) return false;
      if (OverheadMetadata != other.OverheadMetadata) return false;
      if (OverheadTotal != other.OverheadTotal) return false;
      if (TotalExpectedSize != other.TotalExpectedSize) return false;
      if (TotalDLSize != other.TotalDLSize) return false;
      if (MilestoneDLTime != other.MilestoneDLTime) return false;
      if (TotalDLTime != other.TotalDLTime) return false;
      if (AvgDLSpeed != other.AvgDLSpeed) return false;
      if (MaxDLSpeed != other.MaxDLSpeed) return false;
      if (NbTimesPaused != other.NbTimesPaused) return false;
      if (EndStatus != other.EndStatus) return false;
      if (FailReason != other.FailReason) return false;
      if (UserSpeedLimit != other.UserSpeedLimit) return false;
      if (ActivationIds != other.ActivationIds) return false;
      if (Brand != other.Brand) return false;
      if (InitiatedFrom != other.InitiatedFrom) return false;
      if (InstallerId != other.InstallerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDlSessionId) hash ^= DlSessionId.GetHashCode();
      if (HasContract) hash ^= Contract.GetHashCode();
      if (HasContentType) hash ^= ContentType.GetHashCode();
      if (HasIsResuming) hash ^= IsResuming.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasPatchDL) hash ^= PatchDL.GetHashCode();
      if (HasDlSize) hash ^= DlSize.GetHashCode();
      if (HasOverheadWaste) hash ^= OverheadWaste.GetHashCode();
      if (HasOverheadMetadata) hash ^= OverheadMetadata.GetHashCode();
      if (HasOverheadTotal) hash ^= OverheadTotal.GetHashCode();
      if (HasTotalExpectedSize) hash ^= TotalExpectedSize.GetHashCode();
      if (HasTotalDLSize) hash ^= TotalDLSize.GetHashCode();
      if (HasMilestoneDLTime) hash ^= MilestoneDLTime.GetHashCode();
      if (HasTotalDLTime) hash ^= TotalDLTime.GetHashCode();
      if (HasAvgDLSpeed) hash ^= AvgDLSpeed.GetHashCode();
      if (HasMaxDLSpeed) hash ^= MaxDLSpeed.GetHashCode();
      if (HasNbTimesPaused) hash ^= NbTimesPaused.GetHashCode();
      if (HasEndStatus) hash ^= EndStatus.GetHashCode();
      if (HasFailReason) hash ^= FailReason.GetHashCode();
      if (HasUserSpeedLimit) hash ^= UserSpeedLimit.GetHashCode();
      if (HasActivationIds) hash ^= ActivationIds.GetHashCode();
      if (HasBrand) hash ^= Brand.GetHashCode();
      if (HasInitiatedFrom) hash ^= InitiatedFrom.GetHashCode();
      if (HasInstallerId) hash ^= InstallerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDlSessionId) {
        output.WriteRawTag(10);
        output.WriteString(DlSessionId);
      }
      if (HasContract) {
        output.WriteRawTag(18);
        output.WriteString(Contract);
      }
      if (HasContentType) {
        output.WriteRawTag(26);
        output.WriteString(ContentType);
      }
      if (HasIsResuming) {
        output.WriteRawTag(32);
        output.WriteBool(IsResuming);
      }
      if (HasProductId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProductId);
      }
      if (HasPatchDL) {
        output.WriteRawTag(48);
        output.WriteUInt32(PatchDL);
      }
      if (HasDlSize) {
        output.WriteRawTag(56);
        output.WriteUInt64(DlSize);
      }
      if (HasOverheadWaste) {
        output.WriteRawTag(64);
        output.WriteUInt64(OverheadWaste);
      }
      if (HasOverheadMetadata) {
        output.WriteRawTag(72);
        output.WriteUInt64(OverheadMetadata);
      }
      if (HasOverheadTotal) {
        output.WriteRawTag(80);
        output.WriteUInt64(OverheadTotal);
      }
      if (HasTotalExpectedSize) {
        output.WriteRawTag(88);
        output.WriteUInt64(TotalExpectedSize);
      }
      if (HasTotalDLSize) {
        output.WriteRawTag(96);
        output.WriteUInt64(TotalDLSize);
      }
      if (HasMilestoneDLTime) {
        output.WriteRawTag(104);
        output.WriteUInt32(MilestoneDLTime);
      }
      if (HasTotalDLTime) {
        output.WriteRawTag(112);
        output.WriteUInt32(TotalDLTime);
      }
      if (HasAvgDLSpeed) {
        output.WriteRawTag(120);
        output.WriteUInt64(AvgDLSpeed);
      }
      if (HasMaxDLSpeed) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(MaxDLSpeed);
      }
      if (HasNbTimesPaused) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(NbTimesPaused);
      }
      if (HasEndStatus) {
        output.WriteRawTag(146, 1);
        output.WriteString(EndStatus);
      }
      if (HasFailReason) {
        output.WriteRawTag(154, 1);
        output.WriteString(FailReason);
      }
      if (HasUserSpeedLimit) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(UserSpeedLimit);
      }
      if (HasActivationIds) {
        output.WriteRawTag(170, 1);
        output.WriteString(ActivationIds);
      }
      if (HasBrand) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(Brand);
      }
      if (HasInitiatedFrom) {
        output.WriteRawTag(194, 1);
        output.WriteString(InitiatedFrom);
      }
      if (HasInstallerId) {
        output.WriteRawTag(202, 1);
        output.WriteString(InstallerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDlSessionId) {
        output.WriteRawTag(10);
        output.WriteString(DlSessionId);
      }
      if (HasContract) {
        output.WriteRawTag(18);
        output.WriteString(Contract);
      }
      if (HasContentType) {
        output.WriteRawTag(26);
        output.WriteString(ContentType);
      }
      if (HasIsResuming) {
        output.WriteRawTag(32);
        output.WriteBool(IsResuming);
      }
      if (HasProductId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProductId);
      }
      if (HasPatchDL) {
        output.WriteRawTag(48);
        output.WriteUInt32(PatchDL);
      }
      if (HasDlSize) {
        output.WriteRawTag(56);
        output.WriteUInt64(DlSize);
      }
      if (HasOverheadWaste) {
        output.WriteRawTag(64);
        output.WriteUInt64(OverheadWaste);
      }
      if (HasOverheadMetadata) {
        output.WriteRawTag(72);
        output.WriteUInt64(OverheadMetadata);
      }
      if (HasOverheadTotal) {
        output.WriteRawTag(80);
        output.WriteUInt64(OverheadTotal);
      }
      if (HasTotalExpectedSize) {
        output.WriteRawTag(88);
        output.WriteUInt64(TotalExpectedSize);
      }
      if (HasTotalDLSize) {
        output.WriteRawTag(96);
        output.WriteUInt64(TotalDLSize);
      }
      if (HasMilestoneDLTime) {
        output.WriteRawTag(104);
        output.WriteUInt32(MilestoneDLTime);
      }
      if (HasTotalDLTime) {
        output.WriteRawTag(112);
        output.WriteUInt32(TotalDLTime);
      }
      if (HasAvgDLSpeed) {
        output.WriteRawTag(120);
        output.WriteUInt64(AvgDLSpeed);
      }
      if (HasMaxDLSpeed) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(MaxDLSpeed);
      }
      if (HasNbTimesPaused) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(NbTimesPaused);
      }
      if (HasEndStatus) {
        output.WriteRawTag(146, 1);
        output.WriteString(EndStatus);
      }
      if (HasFailReason) {
        output.WriteRawTag(154, 1);
        output.WriteString(FailReason);
      }
      if (HasUserSpeedLimit) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(UserSpeedLimit);
      }
      if (HasActivationIds) {
        output.WriteRawTag(170, 1);
        output.WriteString(ActivationIds);
      }
      if (HasBrand) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(Brand);
      }
      if (HasInitiatedFrom) {
        output.WriteRawTag(194, 1);
        output.WriteString(InitiatedFrom);
      }
      if (HasInstallerId) {
        output.WriteRawTag(202, 1);
        output.WriteString(InstallerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDlSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DlSessionId);
      }
      if (HasContract) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Contract);
      }
      if (HasContentType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (HasIsResuming) {
        size += 1 + 1;
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasPatchDL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchDL);
      }
      if (HasDlSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DlSize);
      }
      if (HasOverheadWaste) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OverheadWaste);
      }
      if (HasOverheadMetadata) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OverheadMetadata);
      }
      if (HasOverheadTotal) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OverheadTotal);
      }
      if (HasTotalExpectedSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalExpectedSize);
      }
      if (HasTotalDLSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalDLSize);
      }
      if (HasMilestoneDLTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MilestoneDLTime);
      }
      if (HasTotalDLTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalDLTime);
      }
      if (HasAvgDLSpeed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AvgDLSpeed);
      }
      if (HasMaxDLSpeed) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(MaxDLSpeed);
      }
      if (HasNbTimesPaused) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NbTimesPaused);
      }
      if (HasEndStatus) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndStatus);
      }
      if (HasFailReason) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FailReason);
      }
      if (HasUserSpeedLimit) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UserSpeedLimit);
      }
      if (HasActivationIds) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ActivationIds);
      }
      if (HasBrand) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Brand);
      }
      if (HasInitiatedFrom) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InitiatedFrom);
      }
      if (HasInstallerId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InstallerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownloadObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasDlSessionId) {
        DlSessionId = other.DlSessionId;
      }
      if (other.HasContract) {
        Contract = other.Contract;
      }
      if (other.HasContentType) {
        ContentType = other.ContentType;
      }
      if (other.HasIsResuming) {
        IsResuming = other.IsResuming;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasPatchDL) {
        PatchDL = other.PatchDL;
      }
      if (other.HasDlSize) {
        DlSize = other.DlSize;
      }
      if (other.HasOverheadWaste) {
        OverheadWaste = other.OverheadWaste;
      }
      if (other.HasOverheadMetadata) {
        OverheadMetadata = other.OverheadMetadata;
      }
      if (other.HasOverheadTotal) {
        OverheadTotal = other.OverheadTotal;
      }
      if (other.HasTotalExpectedSize) {
        TotalExpectedSize = other.TotalExpectedSize;
      }
      if (other.HasTotalDLSize) {
        TotalDLSize = other.TotalDLSize;
      }
      if (other.HasMilestoneDLTime) {
        MilestoneDLTime = other.MilestoneDLTime;
      }
      if (other.HasTotalDLTime) {
        TotalDLTime = other.TotalDLTime;
      }
      if (other.HasAvgDLSpeed) {
        AvgDLSpeed = other.AvgDLSpeed;
      }
      if (other.HasMaxDLSpeed) {
        MaxDLSpeed = other.MaxDLSpeed;
      }
      if (other.HasNbTimesPaused) {
        NbTimesPaused = other.NbTimesPaused;
      }
      if (other.HasEndStatus) {
        EndStatus = other.EndStatus;
      }
      if (other.HasFailReason) {
        FailReason = other.FailReason;
      }
      if (other.HasUserSpeedLimit) {
        UserSpeedLimit = other.UserSpeedLimit;
      }
      if (other.HasActivationIds) {
        ActivationIds = other.ActivationIds;
      }
      if (other.HasBrand) {
        Brand = other.Brand;
      }
      if (other.HasInitiatedFrom) {
        InitiatedFrom = other.InitiatedFrom;
      }
      if (other.HasInstallerId) {
        InstallerId = other.InstallerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DlSessionId = input.ReadString();
            break;
          }
          case 18: {
            Contract = input.ReadString();
            break;
          }
          case 26: {
            ContentType = input.ReadString();
            break;
          }
          case 32: {
            IsResuming = input.ReadBool();
            break;
          }
          case 40: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 48: {
            PatchDL = input.ReadUInt32();
            break;
          }
          case 56: {
            DlSize = input.ReadUInt64();
            break;
          }
          case 64: {
            OverheadWaste = input.ReadUInt64();
            break;
          }
          case 72: {
            OverheadMetadata = input.ReadUInt64();
            break;
          }
          case 80: {
            OverheadTotal = input.ReadUInt64();
            break;
          }
          case 88: {
            TotalExpectedSize = input.ReadUInt64();
            break;
          }
          case 96: {
            TotalDLSize = input.ReadUInt64();
            break;
          }
          case 104: {
            MilestoneDLTime = input.ReadUInt32();
            break;
          }
          case 112: {
            TotalDLTime = input.ReadUInt32();
            break;
          }
          case 120: {
            AvgDLSpeed = input.ReadUInt64();
            break;
          }
          case 128: {
            MaxDLSpeed = input.ReadUInt64();
            break;
          }
          case 136: {
            NbTimesPaused = input.ReadUInt32();
            break;
          }
          case 146: {
            EndStatus = input.ReadString();
            break;
          }
          case 154: {
            FailReason = input.ReadString();
            break;
          }
          case 160: {
            UserSpeedLimit = input.ReadUInt32();
            break;
          }
          case 170: {
            ActivationIds = input.ReadString();
            break;
          }
          case 176: {
            Brand = input.ReadUInt32();
            break;
          }
          case 194: {
            InitiatedFrom = input.ReadString();
            break;
          }
          case 202: {
            InstallerId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DlSessionId = input.ReadString();
            break;
          }
          case 18: {
            Contract = input.ReadString();
            break;
          }
          case 26: {
            ContentType = input.ReadString();
            break;
          }
          case 32: {
            IsResuming = input.ReadBool();
            break;
          }
          case 40: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 48: {
            PatchDL = input.ReadUInt32();
            break;
          }
          case 56: {
            DlSize = input.ReadUInt64();
            break;
          }
          case 64: {
            OverheadWaste = input.ReadUInt64();
            break;
          }
          case 72: {
            OverheadMetadata = input.ReadUInt64();
            break;
          }
          case 80: {
            OverheadTotal = input.ReadUInt64();
            break;
          }
          case 88: {
            TotalExpectedSize = input.ReadUInt64();
            break;
          }
          case 96: {
            TotalDLSize = input.ReadUInt64();
            break;
          }
          case 104: {
            MilestoneDLTime = input.ReadUInt32();
            break;
          }
          case 112: {
            TotalDLTime = input.ReadUInt32();
            break;
          }
          case 120: {
            AvgDLSpeed = input.ReadUInt64();
            break;
          }
          case 128: {
            MaxDLSpeed = input.ReadUInt64();
            break;
          }
          case 136: {
            NbTimesPaused = input.ReadUInt32();
            break;
          }
          case 146: {
            EndStatus = input.ReadString();
            break;
          }
          case 154: {
            FailReason = input.ReadString();
            break;
          }
          case 160: {
            UserSpeedLimit = input.ReadUInt32();
            break;
          }
          case 170: {
            ActivationIds = input.ReadString();
            break;
          }
          case 176: {
            Brand = input.ReadUInt32();
            break;
          }
          case 194: {
            InitiatedFrom = input.ReadString();
            break;
          }
          case 202: {
            InstallerId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HardwareScoreData : pb::IMessage<HardwareScoreData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HardwareScoreData> _parser = new pb::MessageParser<HardwareScoreData>(() => new HardwareScoreData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HardwareScoreData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HardwareScoreData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HardwareScoreData(HardwareScoreData other) : this() {
      _hasBits0 = other._hasBits0;
      cpuScore_ = other.cpuScore_;
      gpuScore_ = other.gpuScore_;
      cpuName_ = other.cpuName_;
      gpuName_ = other.gpuName_;
      ramSize_ = other.ramSize_;
      gpuScoreConfidenceLevel_ = other.gpuScoreConfidenceLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HardwareScoreData Clone() {
      return new HardwareScoreData(this);
    }

    /// <summary>Field number for the "cpuScore" field.</summary>
    public const int CpuScoreFieldNumber = 1;
    private readonly static uint CpuScoreDefaultValue = 0;

    private uint cpuScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuScore {
      get { if ((_hasBits0 & 1) != 0) { return cpuScore_; } else { return CpuScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cpuScore_ = value;
      }
    }
    /// <summary>Gets whether the "cpuScore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cpuScore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gpuScore" field.</summary>
    public const int GpuScoreFieldNumber = 2;
    private readonly static uint GpuScoreDefaultValue = 0;

    private uint gpuScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GpuScore {
      get { if ((_hasBits0 & 2) != 0) { return gpuScore_; } else { return GpuScoreDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gpuScore_ = value;
      }
    }
    /// <summary>Gets whether the "gpuScore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuScore {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gpuScore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuScore() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cpuName" field.</summary>
    public const int CpuNameFieldNumber = 3;
    private readonly static string CpuNameDefaultValue = "";

    private string cpuName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CpuName {
      get { return cpuName_ ?? CpuNameDefaultValue; }
      set {
        cpuName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cpuName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuName {
      get { return cpuName_ != null; }
    }
    /// <summary>Clears the value of the "cpuName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuName() {
      cpuName_ = null;
    }

    /// <summary>Field number for the "gpuName" field.</summary>
    public const int GpuNameFieldNumber = 4;
    private readonly static string GpuNameDefaultValue = "";

    private string gpuName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GpuName {
      get { return gpuName_ ?? GpuNameDefaultValue; }
      set {
        gpuName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gpuName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuName {
      get { return gpuName_ != null; }
    }
    /// <summary>Clears the value of the "gpuName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuName() {
      gpuName_ = null;
    }

    /// <summary>Field number for the "ramSize" field.</summary>
    public const int RamSizeFieldNumber = 5;
    private readonly static uint RamSizeDefaultValue = 0;

    private uint ramSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RamSize {
      get { if ((_hasBits0 & 4) != 0) { return ramSize_; } else { return RamSizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ramSize_ = value;
      }
    }
    /// <summary>Gets whether the "ramSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRamSize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ramSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRamSize() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gpuScoreConfidenceLevel" field.</summary>
    public const int GpuScoreConfidenceLevelFieldNumber = 6;
    private readonly static float GpuScoreConfidenceLevelDefaultValue = 0F;

    private float gpuScoreConfidenceLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GpuScoreConfidenceLevel {
      get { if ((_hasBits0 & 8) != 0) { return gpuScoreConfidenceLevel_; } else { return GpuScoreConfidenceLevelDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gpuScoreConfidenceLevel_ = value;
      }
    }
    /// <summary>Gets whether the "gpuScoreConfidenceLevel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuScoreConfidenceLevel {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gpuScoreConfidenceLevel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuScoreConfidenceLevel() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HardwareScoreData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HardwareScoreData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CpuScore != other.CpuScore) return false;
      if (GpuScore != other.GpuScore) return false;
      if (CpuName != other.CpuName) return false;
      if (GpuName != other.GpuName) return false;
      if (RamSize != other.RamSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GpuScoreConfidenceLevel, other.GpuScoreConfidenceLevel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCpuScore) hash ^= CpuScore.GetHashCode();
      if (HasGpuScore) hash ^= GpuScore.GetHashCode();
      if (HasCpuName) hash ^= CpuName.GetHashCode();
      if (HasGpuName) hash ^= GpuName.GetHashCode();
      if (HasRamSize) hash ^= RamSize.GetHashCode();
      if (HasGpuScoreConfidenceLevel) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GpuScoreConfidenceLevel);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCpuScore) {
        output.WriteRawTag(8);
        output.WriteUInt32(CpuScore);
      }
      if (HasGpuScore) {
        output.WriteRawTag(16);
        output.WriteUInt32(GpuScore);
      }
      if (HasCpuName) {
        output.WriteRawTag(26);
        output.WriteString(CpuName);
      }
      if (HasGpuName) {
        output.WriteRawTag(34);
        output.WriteString(GpuName);
      }
      if (HasRamSize) {
        output.WriteRawTag(40);
        output.WriteUInt32(RamSize);
      }
      if (HasGpuScoreConfidenceLevel) {
        output.WriteRawTag(53);
        output.WriteFloat(GpuScoreConfidenceLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCpuScore) {
        output.WriteRawTag(8);
        output.WriteUInt32(CpuScore);
      }
      if (HasGpuScore) {
        output.WriteRawTag(16);
        output.WriteUInt32(GpuScore);
      }
      if (HasCpuName) {
        output.WriteRawTag(26);
        output.WriteString(CpuName);
      }
      if (HasGpuName) {
        output.WriteRawTag(34);
        output.WriteString(GpuName);
      }
      if (HasRamSize) {
        output.WriteRawTag(40);
        output.WriteUInt32(RamSize);
      }
      if (HasGpuScoreConfidenceLevel) {
        output.WriteRawTag(53);
        output.WriteFloat(GpuScoreConfidenceLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCpuScore) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CpuScore);
      }
      if (HasGpuScore) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GpuScore);
      }
      if (HasCpuName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CpuName);
      }
      if (HasGpuName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GpuName);
      }
      if (HasRamSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RamSize);
      }
      if (HasGpuScoreConfidenceLevel) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HardwareScoreData other) {
      if (other == null) {
        return;
      }
      if (other.HasCpuScore) {
        CpuScore = other.CpuScore;
      }
      if (other.HasGpuScore) {
        GpuScore = other.GpuScore;
      }
      if (other.HasCpuName) {
        CpuName = other.CpuName;
      }
      if (other.HasGpuName) {
        GpuName = other.GpuName;
      }
      if (other.HasRamSize) {
        RamSize = other.RamSize;
      }
      if (other.HasGpuScoreConfidenceLevel) {
        GpuScoreConfidenceLevel = other.GpuScoreConfidenceLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CpuScore = input.ReadUInt32();
            break;
          }
          case 16: {
            GpuScore = input.ReadUInt32();
            break;
          }
          case 26: {
            CpuName = input.ReadString();
            break;
          }
          case 34: {
            GpuName = input.ReadString();
            break;
          }
          case 40: {
            RamSize = input.ReadUInt32();
            break;
          }
          case 53: {
            GpuScoreConfidenceLevel = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CpuScore = input.ReadUInt32();
            break;
          }
          case 16: {
            GpuScore = input.ReadUInt32();
            break;
          }
          case 26: {
            CpuName = input.ReadString();
            break;
          }
          case 34: {
            GpuName = input.ReadString();
            break;
          }
          case 40: {
            RamSize = input.ReadUInt32();
            break;
          }
          case 53: {
            GpuScoreConfidenceLevel = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GPUInfo : pb::IMessage<GPUInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GPUInfo> _parser = new pb::MessageParser<GPUInfo>(() => new GPUInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GPUInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GPUInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GPUInfo(GPUInfo other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      vendorId_ = other.vendorId_;
      deviceId_ = other.deviceId_;
      vram_ = other.vram_;
      dxVersion_ = other.dxVersion_;
      driverVersion_ = other.driverVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GPUInfo Clone() {
      return new GPUInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "vendorId" field.</summary>
    public const int VendorIdFieldNumber = 2;
    private readonly static uint VendorIdDefaultValue = 0;

    private uint vendorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VendorId {
      get { if ((_hasBits0 & 1) != 0) { return vendorId_; } else { return VendorIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        vendorId_ = value;
      }
    }
    /// <summary>Gets whether the "vendorId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVendorId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "vendorId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVendorId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private readonly static uint DeviceIdDefaultValue = 0;

    private uint deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeviceId {
      get { if ((_hasBits0 & 2) != 0) { return deviceId_; } else { return DeviceIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deviceId_ = value;
      }
    }
    /// <summary>Gets whether the "deviceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deviceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "vram" field.</summary>
    public const int VramFieldNumber = 4;
    private readonly static uint VramDefaultValue = 0;

    private uint vram_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Vram {
      get { if ((_hasBits0 & 4) != 0) { return vram_; } else { return VramDefaultValue; } }
      set {
        _hasBits0 |= 4;
        vram_ = value;
      }
    }
    /// <summary>Gets whether the "vram" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVram {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "vram" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVram() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "dxVersion" field.</summary>
    public const int DxVersionFieldNumber = 5;
    private readonly static string DxVersionDefaultValue = "";

    private string dxVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DxVersion {
      get { return dxVersion_ ?? DxVersionDefaultValue; }
      set {
        dxVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dxVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDxVersion {
      get { return dxVersion_ != null; }
    }
    /// <summary>Clears the value of the "dxVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDxVersion() {
      dxVersion_ = null;
    }

    /// <summary>Field number for the "driverVersion" field.</summary>
    public const int DriverVersionFieldNumber = 6;
    private readonly static string DriverVersionDefaultValue = "";

    private string driverVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DriverVersion {
      get { return driverVersion_ ?? DriverVersionDefaultValue; }
      set {
        driverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "driverVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDriverVersion {
      get { return driverVersion_ != null; }
    }
    /// <summary>Clears the value of the "driverVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDriverVersion() {
      driverVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GPUInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GPUInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (VendorId != other.VendorId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (Vram != other.Vram) return false;
      if (DxVersion != other.DxVersion) return false;
      if (DriverVersion != other.DriverVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVendorId) hash ^= VendorId.GetHashCode();
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (HasVram) hash ^= Vram.GetHashCode();
      if (HasDxVersion) hash ^= DxVersion.GetHashCode();
      if (HasDriverVersion) hash ^= DriverVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVendorId) {
        output.WriteRawTag(16);
        output.WriteUInt32(VendorId);
      }
      if (HasDeviceId) {
        output.WriteRawTag(24);
        output.WriteUInt32(DeviceId);
      }
      if (HasVram) {
        output.WriteRawTag(32);
        output.WriteUInt32(Vram);
      }
      if (HasDxVersion) {
        output.WriteRawTag(42);
        output.WriteString(DxVersion);
      }
      if (HasDriverVersion) {
        output.WriteRawTag(50);
        output.WriteString(DriverVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVendorId) {
        output.WriteRawTag(16);
        output.WriteUInt32(VendorId);
      }
      if (HasDeviceId) {
        output.WriteRawTag(24);
        output.WriteUInt32(DeviceId);
      }
      if (HasVram) {
        output.WriteRawTag(32);
        output.WriteUInt32(Vram);
      }
      if (HasDxVersion) {
        output.WriteRawTag(42);
        output.WriteString(DxVersion);
      }
      if (HasDriverVersion) {
        output.WriteRawTag(50);
        output.WriteString(DriverVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVendorId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VendorId);
      }
      if (HasDeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
      }
      if (HasVram) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Vram);
      }
      if (HasDxVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DxVersion);
      }
      if (HasDriverVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DriverVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GPUInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVendorId) {
        VendorId = other.VendorId;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      if (other.HasVram) {
        Vram = other.Vram;
      }
      if (other.HasDxVersion) {
        DxVersion = other.DxVersion;
      }
      if (other.HasDriverVersion) {
        DriverVersion = other.DriverVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            VendorId = input.ReadUInt32();
            break;
          }
          case 24: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 32: {
            Vram = input.ReadUInt32();
            break;
          }
          case 42: {
            DxVersion = input.ReadString();
            break;
          }
          case 50: {
            DriverVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            VendorId = input.ReadUInt32();
            break;
          }
          case 24: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 32: {
            Vram = input.ReadUInt32();
            break;
          }
          case 42: {
            DxVersion = input.ReadString();
            break;
          }
          case 50: {
            DriverVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SoundDeviceInfo : pb::IMessage<SoundDeviceInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SoundDeviceInfo> _parser = new pb::MessageParser<SoundDeviceInfo>(() => new SoundDeviceInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SoundDeviceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundDeviceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundDeviceInfo(SoundDeviceInfo other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      vendorId_ = other.vendorId_;
      deviceId_ = other.deviceId_;
      driverVersion_ = other.driverVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundDeviceInfo Clone() {
      return new SoundDeviceInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "vendorId" field.</summary>
    public const int VendorIdFieldNumber = 2;
    private readonly static uint VendorIdDefaultValue = 0;

    private uint vendorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VendorId {
      get { if ((_hasBits0 & 1) != 0) { return vendorId_; } else { return VendorIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        vendorId_ = value;
      }
    }
    /// <summary>Gets whether the "vendorId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVendorId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "vendorId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVendorId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private readonly static uint DeviceIdDefaultValue = 0;

    private uint deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeviceId {
      get { if ((_hasBits0 & 2) != 0) { return deviceId_; } else { return DeviceIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deviceId_ = value;
      }
    }
    /// <summary>Gets whether the "deviceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deviceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "driverVersion" field.</summary>
    public const int DriverVersionFieldNumber = 4;
    private readonly static string DriverVersionDefaultValue = "";

    private string driverVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DriverVersion {
      get { return driverVersion_ ?? DriverVersionDefaultValue; }
      set {
        driverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "driverVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDriverVersion {
      get { return driverVersion_ != null; }
    }
    /// <summary>Clears the value of the "driverVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDriverVersion() {
      driverVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SoundDeviceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SoundDeviceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (VendorId != other.VendorId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (DriverVersion != other.DriverVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVendorId) hash ^= VendorId.GetHashCode();
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (HasDriverVersion) hash ^= DriverVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVendorId) {
        output.WriteRawTag(16);
        output.WriteUInt32(VendorId);
      }
      if (HasDeviceId) {
        output.WriteRawTag(24);
        output.WriteUInt32(DeviceId);
      }
      if (HasDriverVersion) {
        output.WriteRawTag(34);
        output.WriteString(DriverVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVendorId) {
        output.WriteRawTag(16);
        output.WriteUInt32(VendorId);
      }
      if (HasDeviceId) {
        output.WriteRawTag(24);
        output.WriteUInt32(DeviceId);
      }
      if (HasDriverVersion) {
        output.WriteRawTag(34);
        output.WriteString(DriverVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVendorId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VendorId);
      }
      if (HasDeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
      }
      if (HasDriverVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DriverVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SoundDeviceInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVendorId) {
        VendorId = other.VendorId;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      if (other.HasDriverVersion) {
        DriverVersion = other.DriverVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            VendorId = input.ReadUInt32();
            break;
          }
          case 24: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 34: {
            DriverVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            VendorId = input.ReadUInt32();
            break;
          }
          case 24: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 34: {
            DriverVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PhysicalDrive : pb::IMessage<PhysicalDrive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PhysicalDrive> _parser = new pb::MessageParser<PhysicalDrive>(() => new PhysicalDrive());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PhysicalDrive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhysicalDrive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhysicalDrive(PhysicalDrive other) : this() {
      _hasBits0 = other._hasBits0;
      model_ = other.model_;
      deviceId_ = other.deviceId_;
      size_ = other.size_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhysicalDrive Clone() {
      return new PhysicalDrive(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private readonly static string ModelDefaultValue = "";

    private string model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Model {
      get { return model_ ?? ModelDefaultValue; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "model" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModel {
      get { return model_ != null; }
    }
    /// <summary>Clears the value of the "model" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModel() {
      model_ = null;
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private readonly static string DeviceIdDefaultValue = "";

    private string deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_ ?? DeviceIdDefaultValue; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "deviceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceId {
      get { return deviceId_ != null; }
    }
    /// <summary>Clears the value of the "deviceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceId() {
      deviceId_ = null;
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 3;
    private readonly static uint SizeDefaultValue = 0;

    private uint size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Size {
      get { if ((_hasBits0 & 1) != 0) { return size_; } else { return SizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        size_ = value;
      }
    }
    /// <summary>Gets whether the "size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSize() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PhysicalDrive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PhysicalDrive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Model != other.Model) return false;
      if (DeviceId != other.DeviceId) return false;
      if (Size != other.Size) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasModel) hash ^= Model.GetHashCode();
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (HasSize) hash ^= Size.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasModel) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
      if (HasDeviceId) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (HasSize) {
        output.WriteRawTag(24);
        output.WriteUInt32(Size);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasModel) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
      if (HasDeviceId) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (HasSize) {
        output.WriteRawTag(24);
        output.WriteUInt32(Size);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasModel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (HasDeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (HasSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PhysicalDrive other) {
      if (other == null) {
        return;
      }
      if (other.HasModel) {
        Model = other.Model;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
          case 24: {
            Size = input.ReadUInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
          case 24: {
            Size = input.ReadUInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class USBDevice : pb::IMessage<USBDevice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<USBDevice> _parser = new pb::MessageParser<USBDevice>(() => new USBDevice());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<USBDevice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public USBDevice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public USBDevice(USBDevice other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      vendorId_ = other.vendorId_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public USBDevice Clone() {
      return new USBDevice(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "vendorId" field.</summary>
    public const int VendorIdFieldNumber = 2;
    private readonly static uint VendorIdDefaultValue = 0;

    private uint vendorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VendorId {
      get { if ((_hasBits0 & 1) != 0) { return vendorId_; } else { return VendorIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        vendorId_ = value;
      }
    }
    /// <summary>Gets whether the "vendorId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVendorId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "vendorId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVendorId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private readonly static uint DeviceIdDefaultValue = 0;

    private uint deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeviceId {
      get { if ((_hasBits0 & 2) != 0) { return deviceId_; } else { return DeviceIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deviceId_ = value;
      }
    }
    /// <summary>Gets whether the "deviceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deviceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as USBDevice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(USBDevice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (VendorId != other.VendorId) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVendorId) hash ^= VendorId.GetHashCode();
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVendorId) {
        output.WriteRawTag(16);
        output.WriteUInt32(VendorId);
      }
      if (HasDeviceId) {
        output.WriteRawTag(24);
        output.WriteUInt32(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVendorId) {
        output.WriteRawTag(16);
        output.WriteUInt32(VendorId);
      }
      if (HasDeviceId) {
        output.WriteRawTag(24);
        output.WriteUInt32(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVendorId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VendorId);
      }
      if (HasDeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(USBDevice other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVendorId) {
        VendorId = other.VendorId;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            VendorId = input.ReadUInt32();
            break;
          }
          case 24: {
            DeviceId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            VendorId = input.ReadUInt32();
            break;
          }
          case 24: {
            DeviceId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MachineConfObjectData : pb::IMessage<MachineConfObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MachineConfObjectData> _parser = new pb::MessageParser<MachineConfObjectData>(() => new MachineConfObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MachineConfObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MachineConfObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MachineConfObjectData(MachineConfObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      machineGuid_ = other.machineGuid_;
      ramSize_ = other.ramSize_;
      ramType_ = other.ramType_;
      cpuCount_ = other.cpuCount_;
      cpuCores_ = other.cpuCores_;
      cpuThreads_ = other.cpuThreads_;
      cpuName_ = other.cpuName_;
      cpuHSI_ = other.cpuHSI_;
      cpuDetectedSpeed_ = other.cpuDetectedSpeed_;
      gpuCount_ = other.gpuCount_;
      gpuName_ = other.gpuName_;
      gpuVendor_ = other.gpuVendor_;
      gpuDXVersion_ = other.gpuDXVersion_;
      gpuVram_ = other.gpuVram_;
      monitor1_ = other.monitor1_;
      monitor2_ = other.monitor2_;
      hddCount_ = other.hddCount_;
      hddTotSpace_ = other.hddTotSpace_;
      hddFreeSpace_ = other.hddFreeSpace_;
      osName_ = other.osName_;
      osBits_ = other.osBits_;
      osRegion_ = other.osRegion_;
      soundCard_ = other.soundCard_;
      netBandwidth_ = other.netBandwidth_;
      cpuScore_ = other.cpuScore_;
      gpuScore_ = other.gpuScore_;
      microphone_ = other.microphone_;
      gamepad_ = other.gamepad_;
      detectionTime_ = other.detectionTime_;
      osVersion_ = other.osVersion_;
      uuid_ = other.uuid_;
      countryCode_ = other.countryCode_;
      cpuCacheL1_ = other.cpuCacheL1_;
      cpuCacheL2_ = other.cpuCacheL2_;
      cpuCacheL3_ = other.cpuCacheL3_;
      cpuDescription_ = other.cpuDescription_;
      netAdapterType_ = other.netAdapterType_;
      netVendorId_ = other.netVendorId_;
      netDeviceId_ = other.netDeviceId_;
      motherboardChipset_ = other.motherboardChipset_;
      firewall_ = other.firewall_;
      gpu_ = other.gpu_.Clone();
      soundDevice_ = other.soundDevice_.Clone();
      physicalDrive_ = other.physicalDrive_.Clone();
      usbDevice_ = other.usbDevice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MachineConfObjectData Clone() {
      return new MachineConfObjectData(this);
    }

    /// <summary>Field number for the "machineGuid" field.</summary>
    public const int MachineGuidFieldNumber = 1;
    private readonly static string MachineGuidDefaultValue = "";

    private string machineGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineGuid {
      get { return machineGuid_ ?? MachineGuidDefaultValue; }
      set {
        machineGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "machineGuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMachineGuid {
      get { return machineGuid_ != null; }
    }
    /// <summary>Clears the value of the "machineGuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMachineGuid() {
      machineGuid_ = null;
    }

    /// <summary>Field number for the "ramSize" field.</summary>
    public const int RamSizeFieldNumber = 2;
    private readonly static uint RamSizeDefaultValue = 0;

    private uint ramSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RamSize {
      get { if ((_hasBits0 & 1) != 0) { return ramSize_; } else { return RamSizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ramSize_ = value;
      }
    }
    /// <summary>Gets whether the "ramSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRamSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ramSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRamSize() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ramType" field.</summary>
    public const int RamTypeFieldNumber = 3;
    private readonly static string RamTypeDefaultValue = "";

    private string ramType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RamType {
      get { return ramType_ ?? RamTypeDefaultValue; }
      set {
        ramType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ramType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRamType {
      get { return ramType_ != null; }
    }
    /// <summary>Clears the value of the "ramType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRamType() {
      ramType_ = null;
    }

    /// <summary>Field number for the "cpuCount" field.</summary>
    public const int CpuCountFieldNumber = 4;
    private readonly static uint CpuCountDefaultValue = 0;

    private uint cpuCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuCount {
      get { if ((_hasBits0 & 2) != 0) { return cpuCount_; } else { return CpuCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cpuCount_ = value;
      }
    }
    /// <summary>Gets whether the "cpuCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cpuCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cpuCores" field.</summary>
    public const int CpuCoresFieldNumber = 5;
    private readonly static uint CpuCoresDefaultValue = 0;

    private uint cpuCores_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuCores {
      get { if ((_hasBits0 & 4) != 0) { return cpuCores_; } else { return CpuCoresDefaultValue; } }
      set {
        _hasBits0 |= 4;
        cpuCores_ = value;
      }
    }
    /// <summary>Gets whether the "cpuCores" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuCores {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "cpuCores" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuCores() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "cpuThreads" field.</summary>
    public const int CpuThreadsFieldNumber = 6;
    private readonly static uint CpuThreadsDefaultValue = 0;

    private uint cpuThreads_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuThreads {
      get { if ((_hasBits0 & 8) != 0) { return cpuThreads_; } else { return CpuThreadsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        cpuThreads_ = value;
      }
    }
    /// <summary>Gets whether the "cpuThreads" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuThreads {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "cpuThreads" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuThreads() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "cpuName" field.</summary>
    public const int CpuNameFieldNumber = 7;
    private readonly static string CpuNameDefaultValue = "";

    private string cpuName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CpuName {
      get { return cpuName_ ?? CpuNameDefaultValue; }
      set {
        cpuName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cpuName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuName {
      get { return cpuName_ != null; }
    }
    /// <summary>Clears the value of the "cpuName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuName() {
      cpuName_ = null;
    }

    /// <summary>Field number for the "cpuHSI" field.</summary>
    public const int CpuHSIFieldNumber = 8;
    private readonly static string CpuHSIDefaultValue = "";

    private string cpuHSI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CpuHSI {
      get { return cpuHSI_ ?? CpuHSIDefaultValue; }
      set {
        cpuHSI_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cpuHSI" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuHSI {
      get { return cpuHSI_ != null; }
    }
    /// <summary>Clears the value of the "cpuHSI" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuHSI() {
      cpuHSI_ = null;
    }

    /// <summary>Field number for the "cpuDetectedSpeed" field.</summary>
    public const int CpuDetectedSpeedFieldNumber = 9;
    private readonly static uint CpuDetectedSpeedDefaultValue = 0;

    private uint cpuDetectedSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuDetectedSpeed {
      get { if ((_hasBits0 & 16) != 0) { return cpuDetectedSpeed_; } else { return CpuDetectedSpeedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        cpuDetectedSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "cpuDetectedSpeed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuDetectedSpeed {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "cpuDetectedSpeed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuDetectedSpeed() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "gpuCount" field.</summary>
    public const int GpuCountFieldNumber = 10;
    private readonly static uint GpuCountDefaultValue = 0;

    private uint gpuCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GpuCount {
      get { if ((_hasBits0 & 32) != 0) { return gpuCount_; } else { return GpuCountDefaultValue; } }
      set {
        _hasBits0 |= 32;
        gpuCount_ = value;
      }
    }
    /// <summary>Gets whether the "gpuCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuCount {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "gpuCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuCount() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "gpuName" field.</summary>
    public const int GpuNameFieldNumber = 11;
    private readonly static string GpuNameDefaultValue = "";

    private string gpuName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GpuName {
      get { return gpuName_ ?? GpuNameDefaultValue; }
      set {
        gpuName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gpuName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuName {
      get { return gpuName_ != null; }
    }
    /// <summary>Clears the value of the "gpuName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuName() {
      gpuName_ = null;
    }

    /// <summary>Field number for the "gpuVendor" field.</summary>
    public const int GpuVendorFieldNumber = 12;
    private readonly static string GpuVendorDefaultValue = "";

    private string gpuVendor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GpuVendor {
      get { return gpuVendor_ ?? GpuVendorDefaultValue; }
      set {
        gpuVendor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gpuVendor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuVendor {
      get { return gpuVendor_ != null; }
    }
    /// <summary>Clears the value of the "gpuVendor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuVendor() {
      gpuVendor_ = null;
    }

    /// <summary>Field number for the "gpuDXVersion" field.</summary>
    public const int GpuDXVersionFieldNumber = 13;
    private readonly static string GpuDXVersionDefaultValue = "";

    private string gpuDXVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GpuDXVersion {
      get { return gpuDXVersion_ ?? GpuDXVersionDefaultValue; }
      set {
        gpuDXVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gpuDXVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuDXVersion {
      get { return gpuDXVersion_ != null; }
    }
    /// <summary>Clears the value of the "gpuDXVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuDXVersion() {
      gpuDXVersion_ = null;
    }

    /// <summary>Field number for the "gpuVram" field.</summary>
    public const int GpuVramFieldNumber = 14;
    private readonly static uint GpuVramDefaultValue = 0;

    private uint gpuVram_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GpuVram {
      get { if ((_hasBits0 & 64) != 0) { return gpuVram_; } else { return GpuVramDefaultValue; } }
      set {
        _hasBits0 |= 64;
        gpuVram_ = value;
      }
    }
    /// <summary>Gets whether the "gpuVram" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuVram {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "gpuVram" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuVram() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "monitor1" field.</summary>
    public const int Monitor1FieldNumber = 15;
    private readonly static string Monitor1DefaultValue = "";

    private string monitor1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Monitor1 {
      get { return monitor1_ ?? Monitor1DefaultValue; }
      set {
        monitor1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "monitor1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonitor1 {
      get { return monitor1_ != null; }
    }
    /// <summary>Clears the value of the "monitor1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonitor1() {
      monitor1_ = null;
    }

    /// <summary>Field number for the "monitor2" field.</summary>
    public const int Monitor2FieldNumber = 16;
    private readonly static string Monitor2DefaultValue = "";

    private string monitor2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Monitor2 {
      get { return monitor2_ ?? Monitor2DefaultValue; }
      set {
        monitor2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "monitor2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonitor2 {
      get { return monitor2_ != null; }
    }
    /// <summary>Clears the value of the "monitor2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonitor2() {
      monitor2_ = null;
    }

    /// <summary>Field number for the "hddCount" field.</summary>
    public const int HddCountFieldNumber = 17;
    private readonly static uint HddCountDefaultValue = 0;

    private uint hddCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HddCount {
      get { if ((_hasBits0 & 128) != 0) { return hddCount_; } else { return HddCountDefaultValue; } }
      set {
        _hasBits0 |= 128;
        hddCount_ = value;
      }
    }
    /// <summary>Gets whether the "hddCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHddCount {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "hddCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHddCount() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "hddTotSpace" field.</summary>
    public const int HddTotSpaceFieldNumber = 18;
    private readonly static uint HddTotSpaceDefaultValue = 0;

    private uint hddTotSpace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HddTotSpace {
      get { if ((_hasBits0 & 256) != 0) { return hddTotSpace_; } else { return HddTotSpaceDefaultValue; } }
      set {
        _hasBits0 |= 256;
        hddTotSpace_ = value;
      }
    }
    /// <summary>Gets whether the "hddTotSpace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHddTotSpace {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "hddTotSpace" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHddTotSpace() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "hddFreeSpace" field.</summary>
    public const int HddFreeSpaceFieldNumber = 19;
    private readonly static uint HddFreeSpaceDefaultValue = 0;

    private uint hddFreeSpace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HddFreeSpace {
      get { if ((_hasBits0 & 512) != 0) { return hddFreeSpace_; } else { return HddFreeSpaceDefaultValue; } }
      set {
        _hasBits0 |= 512;
        hddFreeSpace_ = value;
      }
    }
    /// <summary>Gets whether the "hddFreeSpace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHddFreeSpace {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "hddFreeSpace" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHddFreeSpace() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "osName" field.</summary>
    public const int OsNameFieldNumber = 20;
    private readonly static string OsNameDefaultValue = "";

    private string osName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OsName {
      get { return osName_ ?? OsNameDefaultValue; }
      set {
        osName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "osName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOsName {
      get { return osName_ != null; }
    }
    /// <summary>Clears the value of the "osName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOsName() {
      osName_ = null;
    }

    /// <summary>Field number for the "osBits" field.</summary>
    public const int OsBitsFieldNumber = 21;
    private readonly static uint OsBitsDefaultValue = 0;

    private uint osBits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OsBits {
      get { if ((_hasBits0 & 1024) != 0) { return osBits_; } else { return OsBitsDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        osBits_ = value;
      }
    }
    /// <summary>Gets whether the "osBits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOsBits {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "osBits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOsBits() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "osRegion" field.</summary>
    public const int OsRegionFieldNumber = 22;
    private readonly static string OsRegionDefaultValue = "";

    private string osRegion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OsRegion {
      get { return osRegion_ ?? OsRegionDefaultValue; }
      set {
        osRegion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "osRegion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOsRegion {
      get { return osRegion_ != null; }
    }
    /// <summary>Clears the value of the "osRegion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOsRegion() {
      osRegion_ = null;
    }

    /// <summary>Field number for the "soundCard" field.</summary>
    public const int SoundCardFieldNumber = 23;
    private readonly static string SoundCardDefaultValue = "";

    private string soundCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SoundCard {
      get { return soundCard_ ?? SoundCardDefaultValue; }
      set {
        soundCard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "soundCard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundCard {
      get { return soundCard_ != null; }
    }
    /// <summary>Clears the value of the "soundCard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundCard() {
      soundCard_ = null;
    }

    /// <summary>Field number for the "netBandwidth" field.</summary>
    public const int NetBandwidthFieldNumber = 24;
    private readonly static uint NetBandwidthDefaultValue = 0;

    private uint netBandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NetBandwidth {
      get { if ((_hasBits0 & 2048) != 0) { return netBandwidth_; } else { return NetBandwidthDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        netBandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "netBandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNetBandwidth {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "netBandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNetBandwidth() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "cpuScore" field.</summary>
    public const int CpuScoreFieldNumber = 25;
    private readonly static uint CpuScoreDefaultValue = 0;

    private uint cpuScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuScore {
      get { if ((_hasBits0 & 4096) != 0) { return cpuScore_; } else { return CpuScoreDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        cpuScore_ = value;
      }
    }
    /// <summary>Gets whether the "cpuScore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuScore {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "cpuScore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuScore() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "gpuScore" field.</summary>
    public const int GpuScoreFieldNumber = 26;
    private readonly static uint GpuScoreDefaultValue = 0;

    private uint gpuScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GpuScore {
      get { if ((_hasBits0 & 8192) != 0) { return gpuScore_; } else { return GpuScoreDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        gpuScore_ = value;
      }
    }
    /// <summary>Gets whether the "gpuScore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuScore {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "gpuScore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuScore() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "microphone" field.</summary>
    public const int MicrophoneFieldNumber = 27;
    private readonly static string MicrophoneDefaultValue = "";

    private string microphone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Microphone {
      get { return microphone_ ?? MicrophoneDefaultValue; }
      set {
        microphone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "microphone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrophone {
      get { return microphone_ != null; }
    }
    /// <summary>Clears the value of the "microphone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrophone() {
      microphone_ = null;
    }

    /// <summary>Field number for the "gamepad" field.</summary>
    public const int GamepadFieldNumber = 28;
    private readonly static string GamepadDefaultValue = "";

    private string gamepad_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Gamepad {
      get { return gamepad_ ?? GamepadDefaultValue; }
      set {
        gamepad_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gamepad" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamepad {
      get { return gamepad_ != null; }
    }
    /// <summary>Clears the value of the "gamepad" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamepad() {
      gamepad_ = null;
    }

    /// <summary>Field number for the "detectionTime" field.</summary>
    public const int DetectionTimeFieldNumber = 29;
    private readonly static uint DetectionTimeDefaultValue = 0;

    private uint detectionTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetectionTime {
      get { if ((_hasBits0 & 16384) != 0) { return detectionTime_; } else { return DetectionTimeDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        detectionTime_ = value;
      }
    }
    /// <summary>Gets whether the "detectionTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDetectionTime {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "detectionTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDetectionTime() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "osVersion" field.</summary>
    public const int OsVersionFieldNumber = 30;
    private readonly static string OsVersionDefaultValue = "";

    private string osVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OsVersion {
      get { return osVersion_ ?? OsVersionDefaultValue; }
      set {
        osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "osVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOsVersion {
      get { return osVersion_ != null; }
    }
    /// <summary>Clears the value of the "osVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOsVersion() {
      osVersion_ = null;
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 31;
    private readonly static string UuidDefaultValue = "";

    private string uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uuid {
      get { return uuid_ ?? UuidDefaultValue; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUuid {
      get { return uuid_ != null; }
    }
    /// <summary>Clears the value of the "uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUuid() {
      uuid_ = null;
    }

    /// <summary>Field number for the "countryCode" field.</summary>
    public const int CountryCodeFieldNumber = 32;
    private readonly static string CountryCodeDefaultValue = "";

    private string countryCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CountryCode {
      get { return countryCode_ ?? CountryCodeDefaultValue; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "countryCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCountryCode {
      get { return countryCode_ != null; }
    }
    /// <summary>Clears the value of the "countryCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCountryCode() {
      countryCode_ = null;
    }

    /// <summary>Field number for the "cpuCacheL1" field.</summary>
    public const int CpuCacheL1FieldNumber = 33;
    private readonly static uint CpuCacheL1DefaultValue = 0;

    private uint cpuCacheL1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuCacheL1 {
      get { if ((_hasBits0 & 32768) != 0) { return cpuCacheL1_; } else { return CpuCacheL1DefaultValue; } }
      set {
        _hasBits0 |= 32768;
        cpuCacheL1_ = value;
      }
    }
    /// <summary>Gets whether the "cpuCacheL1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuCacheL1 {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "cpuCacheL1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuCacheL1() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "cpuCacheL2" field.</summary>
    public const int CpuCacheL2FieldNumber = 34;
    private readonly static uint CpuCacheL2DefaultValue = 0;

    private uint cpuCacheL2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuCacheL2 {
      get { if ((_hasBits0 & 65536) != 0) { return cpuCacheL2_; } else { return CpuCacheL2DefaultValue; } }
      set {
        _hasBits0 |= 65536;
        cpuCacheL2_ = value;
      }
    }
    /// <summary>Gets whether the "cpuCacheL2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuCacheL2 {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "cpuCacheL2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuCacheL2() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "cpuCacheL3" field.</summary>
    public const int CpuCacheL3FieldNumber = 35;
    private readonly static uint CpuCacheL3DefaultValue = 0;

    private uint cpuCacheL3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CpuCacheL3 {
      get { if ((_hasBits0 & 131072) != 0) { return cpuCacheL3_; } else { return CpuCacheL3DefaultValue; } }
      set {
        _hasBits0 |= 131072;
        cpuCacheL3_ = value;
      }
    }
    /// <summary>Gets whether the "cpuCacheL3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuCacheL3 {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "cpuCacheL3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuCacheL3() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "cpuDescription" field.</summary>
    public const int CpuDescriptionFieldNumber = 36;
    private readonly static string CpuDescriptionDefaultValue = "";

    private string cpuDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CpuDescription {
      get { return cpuDescription_ ?? CpuDescriptionDefaultValue; }
      set {
        cpuDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cpuDescription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCpuDescription {
      get { return cpuDescription_ != null; }
    }
    /// <summary>Clears the value of the "cpuDescription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCpuDescription() {
      cpuDescription_ = null;
    }

    /// <summary>Field number for the "netAdapterType" field.</summary>
    public const int NetAdapterTypeFieldNumber = 37;
    private readonly static string NetAdapterTypeDefaultValue = "";

    private string netAdapterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NetAdapterType {
      get { return netAdapterType_ ?? NetAdapterTypeDefaultValue; }
      set {
        netAdapterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "netAdapterType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNetAdapterType {
      get { return netAdapterType_ != null; }
    }
    /// <summary>Clears the value of the "netAdapterType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNetAdapterType() {
      netAdapterType_ = null;
    }

    /// <summary>Field number for the "netVendorId" field.</summary>
    public const int NetVendorIdFieldNumber = 38;
    private readonly static uint NetVendorIdDefaultValue = 0;

    private uint netVendorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NetVendorId {
      get { if ((_hasBits0 & 262144) != 0) { return netVendorId_; } else { return NetVendorIdDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        netVendorId_ = value;
      }
    }
    /// <summary>Gets whether the "netVendorId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNetVendorId {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "netVendorId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNetVendorId() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "netDeviceId" field.</summary>
    public const int NetDeviceIdFieldNumber = 39;
    private readonly static uint NetDeviceIdDefaultValue = 0;

    private uint netDeviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NetDeviceId {
      get { if ((_hasBits0 & 524288) != 0) { return netDeviceId_; } else { return NetDeviceIdDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        netDeviceId_ = value;
      }
    }
    /// <summary>Gets whether the "netDeviceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNetDeviceId {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "netDeviceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNetDeviceId() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "motherboardChipset" field.</summary>
    public const int MotherboardChipsetFieldNumber = 41;
    private readonly static string MotherboardChipsetDefaultValue = "";

    private string motherboardChipset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MotherboardChipset {
      get { return motherboardChipset_ ?? MotherboardChipsetDefaultValue; }
      set {
        motherboardChipset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "motherboardChipset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMotherboardChipset {
      get { return motherboardChipset_ != null; }
    }
    /// <summary>Clears the value of the "motherboardChipset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMotherboardChipset() {
      motherboardChipset_ = null;
    }

    /// <summary>Field number for the "firewall" field.</summary>
    public const int FirewallFieldNumber = 42;
    private readonly static string FirewallDefaultValue = "";

    private string firewall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Firewall {
      get { return firewall_ ?? FirewallDefaultValue; }
      set {
        firewall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "firewall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFirewall {
      get { return firewall_ != null; }
    }
    /// <summary>Clears the value of the "firewall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFirewall() {
      firewall_ = null;
    }

    /// <summary>Field number for the "gpu" field.</summary>
    public const int GpuFieldNumber = 43;
    private static readonly pb::FieldCodec<global::Uplay.Statistics.GPUInfo> _repeated_gpu_codec
        = pb::FieldCodec.ForMessage(346, global::Uplay.Statistics.GPUInfo.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Statistics.GPUInfo> gpu_ = new pbc::RepeatedField<global::Uplay.Statistics.GPUInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Statistics.GPUInfo> Gpu {
      get { return gpu_; }
    }

    /// <summary>Field number for the "soundDevice" field.</summary>
    public const int SoundDeviceFieldNumber = 44;
    private static readonly pb::FieldCodec<global::Uplay.Statistics.SoundDeviceInfo> _repeated_soundDevice_codec
        = pb::FieldCodec.ForMessage(354, global::Uplay.Statistics.SoundDeviceInfo.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Statistics.SoundDeviceInfo> soundDevice_ = new pbc::RepeatedField<global::Uplay.Statistics.SoundDeviceInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Statistics.SoundDeviceInfo> SoundDevice {
      get { return soundDevice_; }
    }

    /// <summary>Field number for the "physicalDrive" field.</summary>
    public const int PhysicalDriveFieldNumber = 45;
    private static readonly pb::FieldCodec<global::Uplay.Statistics.PhysicalDrive> _repeated_physicalDrive_codec
        = pb::FieldCodec.ForMessage(362, global::Uplay.Statistics.PhysicalDrive.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Statistics.PhysicalDrive> physicalDrive_ = new pbc::RepeatedField<global::Uplay.Statistics.PhysicalDrive>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Statistics.PhysicalDrive> PhysicalDrive {
      get { return physicalDrive_; }
    }

    /// <summary>Field number for the "usbDevice" field.</summary>
    public const int UsbDeviceFieldNumber = 46;
    private static readonly pb::FieldCodec<global::Uplay.Statistics.USBDevice> _repeated_usbDevice_codec
        = pb::FieldCodec.ForMessage(370, global::Uplay.Statistics.USBDevice.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Statistics.USBDevice> usbDevice_ = new pbc::RepeatedField<global::Uplay.Statistics.USBDevice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Statistics.USBDevice> UsbDevice {
      get { return usbDevice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MachineConfObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MachineConfObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MachineGuid != other.MachineGuid) return false;
      if (RamSize != other.RamSize) return false;
      if (RamType != other.RamType) return false;
      if (CpuCount != other.CpuCount) return false;
      if (CpuCores != other.CpuCores) return false;
      if (CpuThreads != other.CpuThreads) return false;
      if (CpuName != other.CpuName) return false;
      if (CpuHSI != other.CpuHSI) return false;
      if (CpuDetectedSpeed != other.CpuDetectedSpeed) return false;
      if (GpuCount != other.GpuCount) return false;
      if (GpuName != other.GpuName) return false;
      if (GpuVendor != other.GpuVendor) return false;
      if (GpuDXVersion != other.GpuDXVersion) return false;
      if (GpuVram != other.GpuVram) return false;
      if (Monitor1 != other.Monitor1) return false;
      if (Monitor2 != other.Monitor2) return false;
      if (HddCount != other.HddCount) return false;
      if (HddTotSpace != other.HddTotSpace) return false;
      if (HddFreeSpace != other.HddFreeSpace) return false;
      if (OsName != other.OsName) return false;
      if (OsBits != other.OsBits) return false;
      if (OsRegion != other.OsRegion) return false;
      if (SoundCard != other.SoundCard) return false;
      if (NetBandwidth != other.NetBandwidth) return false;
      if (CpuScore != other.CpuScore) return false;
      if (GpuScore != other.GpuScore) return false;
      if (Microphone != other.Microphone) return false;
      if (Gamepad != other.Gamepad) return false;
      if (DetectionTime != other.DetectionTime) return false;
      if (OsVersion != other.OsVersion) return false;
      if (Uuid != other.Uuid) return false;
      if (CountryCode != other.CountryCode) return false;
      if (CpuCacheL1 != other.CpuCacheL1) return false;
      if (CpuCacheL2 != other.CpuCacheL2) return false;
      if (CpuCacheL3 != other.CpuCacheL3) return false;
      if (CpuDescription != other.CpuDescription) return false;
      if (NetAdapterType != other.NetAdapterType) return false;
      if (NetVendorId != other.NetVendorId) return false;
      if (NetDeviceId != other.NetDeviceId) return false;
      if (MotherboardChipset != other.MotherboardChipset) return false;
      if (Firewall != other.Firewall) return false;
      if(!gpu_.Equals(other.gpu_)) return false;
      if(!soundDevice_.Equals(other.soundDevice_)) return false;
      if(!physicalDrive_.Equals(other.physicalDrive_)) return false;
      if(!usbDevice_.Equals(other.usbDevice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMachineGuid) hash ^= MachineGuid.GetHashCode();
      if (HasRamSize) hash ^= RamSize.GetHashCode();
      if (HasRamType) hash ^= RamType.GetHashCode();
      if (HasCpuCount) hash ^= CpuCount.GetHashCode();
      if (HasCpuCores) hash ^= CpuCores.GetHashCode();
      if (HasCpuThreads) hash ^= CpuThreads.GetHashCode();
      if (HasCpuName) hash ^= CpuName.GetHashCode();
      if (HasCpuHSI) hash ^= CpuHSI.GetHashCode();
      if (HasCpuDetectedSpeed) hash ^= CpuDetectedSpeed.GetHashCode();
      if (HasGpuCount) hash ^= GpuCount.GetHashCode();
      if (HasGpuName) hash ^= GpuName.GetHashCode();
      if (HasGpuVendor) hash ^= GpuVendor.GetHashCode();
      if (HasGpuDXVersion) hash ^= GpuDXVersion.GetHashCode();
      if (HasGpuVram) hash ^= GpuVram.GetHashCode();
      if (HasMonitor1) hash ^= Monitor1.GetHashCode();
      if (HasMonitor2) hash ^= Monitor2.GetHashCode();
      if (HasHddCount) hash ^= HddCount.GetHashCode();
      if (HasHddTotSpace) hash ^= HddTotSpace.GetHashCode();
      if (HasHddFreeSpace) hash ^= HddFreeSpace.GetHashCode();
      if (HasOsName) hash ^= OsName.GetHashCode();
      if (HasOsBits) hash ^= OsBits.GetHashCode();
      if (HasOsRegion) hash ^= OsRegion.GetHashCode();
      if (HasSoundCard) hash ^= SoundCard.GetHashCode();
      if (HasNetBandwidth) hash ^= NetBandwidth.GetHashCode();
      if (HasCpuScore) hash ^= CpuScore.GetHashCode();
      if (HasGpuScore) hash ^= GpuScore.GetHashCode();
      if (HasMicrophone) hash ^= Microphone.GetHashCode();
      if (HasGamepad) hash ^= Gamepad.GetHashCode();
      if (HasDetectionTime) hash ^= DetectionTime.GetHashCode();
      if (HasOsVersion) hash ^= OsVersion.GetHashCode();
      if (HasUuid) hash ^= Uuid.GetHashCode();
      if (HasCountryCode) hash ^= CountryCode.GetHashCode();
      if (HasCpuCacheL1) hash ^= CpuCacheL1.GetHashCode();
      if (HasCpuCacheL2) hash ^= CpuCacheL2.GetHashCode();
      if (HasCpuCacheL3) hash ^= CpuCacheL3.GetHashCode();
      if (HasCpuDescription) hash ^= CpuDescription.GetHashCode();
      if (HasNetAdapterType) hash ^= NetAdapterType.GetHashCode();
      if (HasNetVendorId) hash ^= NetVendorId.GetHashCode();
      if (HasNetDeviceId) hash ^= NetDeviceId.GetHashCode();
      if (HasMotherboardChipset) hash ^= MotherboardChipset.GetHashCode();
      if (HasFirewall) hash ^= Firewall.GetHashCode();
      hash ^= gpu_.GetHashCode();
      hash ^= soundDevice_.GetHashCode();
      hash ^= physicalDrive_.GetHashCode();
      hash ^= usbDevice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMachineGuid) {
        output.WriteRawTag(10);
        output.WriteString(MachineGuid);
      }
      if (HasRamSize) {
        output.WriteRawTag(16);
        output.WriteUInt32(RamSize);
      }
      if (HasRamType) {
        output.WriteRawTag(26);
        output.WriteString(RamType);
      }
      if (HasCpuCount) {
        output.WriteRawTag(32);
        output.WriteUInt32(CpuCount);
      }
      if (HasCpuCores) {
        output.WriteRawTag(40);
        output.WriteUInt32(CpuCores);
      }
      if (HasCpuThreads) {
        output.WriteRawTag(48);
        output.WriteUInt32(CpuThreads);
      }
      if (HasCpuName) {
        output.WriteRawTag(58);
        output.WriteString(CpuName);
      }
      if (HasCpuHSI) {
        output.WriteRawTag(66);
        output.WriteString(CpuHSI);
      }
      if (HasCpuDetectedSpeed) {
        output.WriteRawTag(72);
        output.WriteUInt32(CpuDetectedSpeed);
      }
      if (HasGpuCount) {
        output.WriteRawTag(80);
        output.WriteUInt32(GpuCount);
      }
      if (HasGpuName) {
        output.WriteRawTag(90);
        output.WriteString(GpuName);
      }
      if (HasGpuVendor) {
        output.WriteRawTag(98);
        output.WriteString(GpuVendor);
      }
      if (HasGpuDXVersion) {
        output.WriteRawTag(106);
        output.WriteString(GpuDXVersion);
      }
      if (HasGpuVram) {
        output.WriteRawTag(112);
        output.WriteUInt32(GpuVram);
      }
      if (HasMonitor1) {
        output.WriteRawTag(122);
        output.WriteString(Monitor1);
      }
      if (HasMonitor2) {
        output.WriteRawTag(130, 1);
        output.WriteString(Monitor2);
      }
      if (HasHddCount) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(HddCount);
      }
      if (HasHddTotSpace) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(HddTotSpace);
      }
      if (HasHddFreeSpace) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(HddFreeSpace);
      }
      if (HasOsName) {
        output.WriteRawTag(162, 1);
        output.WriteString(OsName);
      }
      if (HasOsBits) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(OsBits);
      }
      if (HasOsRegion) {
        output.WriteRawTag(178, 1);
        output.WriteString(OsRegion);
      }
      if (HasSoundCard) {
        output.WriteRawTag(186, 1);
        output.WriteString(SoundCard);
      }
      if (HasNetBandwidth) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(NetBandwidth);
      }
      if (HasCpuScore) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(CpuScore);
      }
      if (HasGpuScore) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(GpuScore);
      }
      if (HasMicrophone) {
        output.WriteRawTag(218, 1);
        output.WriteString(Microphone);
      }
      if (HasGamepad) {
        output.WriteRawTag(226, 1);
        output.WriteString(Gamepad);
      }
      if (HasDetectionTime) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(DetectionTime);
      }
      if (HasOsVersion) {
        output.WriteRawTag(242, 1);
        output.WriteString(OsVersion);
      }
      if (HasUuid) {
        output.WriteRawTag(250, 1);
        output.WriteString(Uuid);
      }
      if (HasCountryCode) {
        output.WriteRawTag(130, 2);
        output.WriteString(CountryCode);
      }
      if (HasCpuCacheL1) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(CpuCacheL1);
      }
      if (HasCpuCacheL2) {
        output.WriteRawTag(144, 2);
        output.WriteUInt32(CpuCacheL2);
      }
      if (HasCpuCacheL3) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(CpuCacheL3);
      }
      if (HasCpuDescription) {
        output.WriteRawTag(162, 2);
        output.WriteString(CpuDescription);
      }
      if (HasNetAdapterType) {
        output.WriteRawTag(170, 2);
        output.WriteString(NetAdapterType);
      }
      if (HasNetVendorId) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(NetVendorId);
      }
      if (HasNetDeviceId) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(NetDeviceId);
      }
      if (HasMotherboardChipset) {
        output.WriteRawTag(202, 2);
        output.WriteString(MotherboardChipset);
      }
      if (HasFirewall) {
        output.WriteRawTag(210, 2);
        output.WriteString(Firewall);
      }
      gpu_.WriteTo(output, _repeated_gpu_codec);
      soundDevice_.WriteTo(output, _repeated_soundDevice_codec);
      physicalDrive_.WriteTo(output, _repeated_physicalDrive_codec);
      usbDevice_.WriteTo(output, _repeated_usbDevice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMachineGuid) {
        output.WriteRawTag(10);
        output.WriteString(MachineGuid);
      }
      if (HasRamSize) {
        output.WriteRawTag(16);
        output.WriteUInt32(RamSize);
      }
      if (HasRamType) {
        output.WriteRawTag(26);
        output.WriteString(RamType);
      }
      if (HasCpuCount) {
        output.WriteRawTag(32);
        output.WriteUInt32(CpuCount);
      }
      if (HasCpuCores) {
        output.WriteRawTag(40);
        output.WriteUInt32(CpuCores);
      }
      if (HasCpuThreads) {
        output.WriteRawTag(48);
        output.WriteUInt32(CpuThreads);
      }
      if (HasCpuName) {
        output.WriteRawTag(58);
        output.WriteString(CpuName);
      }
      if (HasCpuHSI) {
        output.WriteRawTag(66);
        output.WriteString(CpuHSI);
      }
      if (HasCpuDetectedSpeed) {
        output.WriteRawTag(72);
        output.WriteUInt32(CpuDetectedSpeed);
      }
      if (HasGpuCount) {
        output.WriteRawTag(80);
        output.WriteUInt32(GpuCount);
      }
      if (HasGpuName) {
        output.WriteRawTag(90);
        output.WriteString(GpuName);
      }
      if (HasGpuVendor) {
        output.WriteRawTag(98);
        output.WriteString(GpuVendor);
      }
      if (HasGpuDXVersion) {
        output.WriteRawTag(106);
        output.WriteString(GpuDXVersion);
      }
      if (HasGpuVram) {
        output.WriteRawTag(112);
        output.WriteUInt32(GpuVram);
      }
      if (HasMonitor1) {
        output.WriteRawTag(122);
        output.WriteString(Monitor1);
      }
      if (HasMonitor2) {
        output.WriteRawTag(130, 1);
        output.WriteString(Monitor2);
      }
      if (HasHddCount) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(HddCount);
      }
      if (HasHddTotSpace) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(HddTotSpace);
      }
      if (HasHddFreeSpace) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(HddFreeSpace);
      }
      if (HasOsName) {
        output.WriteRawTag(162, 1);
        output.WriteString(OsName);
      }
      if (HasOsBits) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(OsBits);
      }
      if (HasOsRegion) {
        output.WriteRawTag(178, 1);
        output.WriteString(OsRegion);
      }
      if (HasSoundCard) {
        output.WriteRawTag(186, 1);
        output.WriteString(SoundCard);
      }
      if (HasNetBandwidth) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(NetBandwidth);
      }
      if (HasCpuScore) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(CpuScore);
      }
      if (HasGpuScore) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(GpuScore);
      }
      if (HasMicrophone) {
        output.WriteRawTag(218, 1);
        output.WriteString(Microphone);
      }
      if (HasGamepad) {
        output.WriteRawTag(226, 1);
        output.WriteString(Gamepad);
      }
      if (HasDetectionTime) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(DetectionTime);
      }
      if (HasOsVersion) {
        output.WriteRawTag(242, 1);
        output.WriteString(OsVersion);
      }
      if (HasUuid) {
        output.WriteRawTag(250, 1);
        output.WriteString(Uuid);
      }
      if (HasCountryCode) {
        output.WriteRawTag(130, 2);
        output.WriteString(CountryCode);
      }
      if (HasCpuCacheL1) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(CpuCacheL1);
      }
      if (HasCpuCacheL2) {
        output.WriteRawTag(144, 2);
        output.WriteUInt32(CpuCacheL2);
      }
      if (HasCpuCacheL3) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(CpuCacheL3);
      }
      if (HasCpuDescription) {
        output.WriteRawTag(162, 2);
        output.WriteString(CpuDescription);
      }
      if (HasNetAdapterType) {
        output.WriteRawTag(170, 2);
        output.WriteString(NetAdapterType);
      }
      if (HasNetVendorId) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(NetVendorId);
      }
      if (HasNetDeviceId) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(NetDeviceId);
      }
      if (HasMotherboardChipset) {
        output.WriteRawTag(202, 2);
        output.WriteString(MotherboardChipset);
      }
      if (HasFirewall) {
        output.WriteRawTag(210, 2);
        output.WriteString(Firewall);
      }
      gpu_.WriteTo(ref output, _repeated_gpu_codec);
      soundDevice_.WriteTo(ref output, _repeated_soundDevice_codec);
      physicalDrive_.WriteTo(ref output, _repeated_physicalDrive_codec);
      usbDevice_.WriteTo(ref output, _repeated_usbDevice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMachineGuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineGuid);
      }
      if (HasRamSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RamSize);
      }
      if (HasRamType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RamType);
      }
      if (HasCpuCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CpuCount);
      }
      if (HasCpuCores) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CpuCores);
      }
      if (HasCpuThreads) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CpuThreads);
      }
      if (HasCpuName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CpuName);
      }
      if (HasCpuHSI) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CpuHSI);
      }
      if (HasCpuDetectedSpeed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CpuDetectedSpeed);
      }
      if (HasGpuCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GpuCount);
      }
      if (HasGpuName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GpuName);
      }
      if (HasGpuVendor) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GpuVendor);
      }
      if (HasGpuDXVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GpuDXVersion);
      }
      if (HasGpuVram) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GpuVram);
      }
      if (HasMonitor1) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Monitor1);
      }
      if (HasMonitor2) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Monitor2);
      }
      if (HasHddCount) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HddCount);
      }
      if (HasHddTotSpace) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HddTotSpace);
      }
      if (HasHddFreeSpace) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HddFreeSpace);
      }
      if (HasOsName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OsName);
      }
      if (HasOsBits) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OsBits);
      }
      if (HasOsRegion) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OsRegion);
      }
      if (HasSoundCard) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SoundCard);
      }
      if (HasNetBandwidth) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NetBandwidth);
      }
      if (HasCpuScore) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CpuScore);
      }
      if (HasGpuScore) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GpuScore);
      }
      if (HasMicrophone) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Microphone);
      }
      if (HasGamepad) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Gamepad);
      }
      if (HasDetectionTime) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetectionTime);
      }
      if (HasOsVersion) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
      }
      if (HasUuid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (HasCountryCode) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (HasCpuCacheL1) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CpuCacheL1);
      }
      if (HasCpuCacheL2) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CpuCacheL2);
      }
      if (HasCpuCacheL3) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CpuCacheL3);
      }
      if (HasCpuDescription) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CpuDescription);
      }
      if (HasNetAdapterType) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NetAdapterType);
      }
      if (HasNetVendorId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NetVendorId);
      }
      if (HasNetDeviceId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NetDeviceId);
      }
      if (HasMotherboardChipset) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MotherboardChipset);
      }
      if (HasFirewall) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Firewall);
      }
      size += gpu_.CalculateSize(_repeated_gpu_codec);
      size += soundDevice_.CalculateSize(_repeated_soundDevice_codec);
      size += physicalDrive_.CalculateSize(_repeated_physicalDrive_codec);
      size += usbDevice_.CalculateSize(_repeated_usbDevice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MachineConfObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasMachineGuid) {
        MachineGuid = other.MachineGuid;
      }
      if (other.HasRamSize) {
        RamSize = other.RamSize;
      }
      if (other.HasRamType) {
        RamType = other.RamType;
      }
      if (other.HasCpuCount) {
        CpuCount = other.CpuCount;
      }
      if (other.HasCpuCores) {
        CpuCores = other.CpuCores;
      }
      if (other.HasCpuThreads) {
        CpuThreads = other.CpuThreads;
      }
      if (other.HasCpuName) {
        CpuName = other.CpuName;
      }
      if (other.HasCpuHSI) {
        CpuHSI = other.CpuHSI;
      }
      if (other.HasCpuDetectedSpeed) {
        CpuDetectedSpeed = other.CpuDetectedSpeed;
      }
      if (other.HasGpuCount) {
        GpuCount = other.GpuCount;
      }
      if (other.HasGpuName) {
        GpuName = other.GpuName;
      }
      if (other.HasGpuVendor) {
        GpuVendor = other.GpuVendor;
      }
      if (other.HasGpuDXVersion) {
        GpuDXVersion = other.GpuDXVersion;
      }
      if (other.HasGpuVram) {
        GpuVram = other.GpuVram;
      }
      if (other.HasMonitor1) {
        Monitor1 = other.Monitor1;
      }
      if (other.HasMonitor2) {
        Monitor2 = other.Monitor2;
      }
      if (other.HasHddCount) {
        HddCount = other.HddCount;
      }
      if (other.HasHddTotSpace) {
        HddTotSpace = other.HddTotSpace;
      }
      if (other.HasHddFreeSpace) {
        HddFreeSpace = other.HddFreeSpace;
      }
      if (other.HasOsName) {
        OsName = other.OsName;
      }
      if (other.HasOsBits) {
        OsBits = other.OsBits;
      }
      if (other.HasOsRegion) {
        OsRegion = other.OsRegion;
      }
      if (other.HasSoundCard) {
        SoundCard = other.SoundCard;
      }
      if (other.HasNetBandwidth) {
        NetBandwidth = other.NetBandwidth;
      }
      if (other.HasCpuScore) {
        CpuScore = other.CpuScore;
      }
      if (other.HasGpuScore) {
        GpuScore = other.GpuScore;
      }
      if (other.HasMicrophone) {
        Microphone = other.Microphone;
      }
      if (other.HasGamepad) {
        Gamepad = other.Gamepad;
      }
      if (other.HasDetectionTime) {
        DetectionTime = other.DetectionTime;
      }
      if (other.HasOsVersion) {
        OsVersion = other.OsVersion;
      }
      if (other.HasUuid) {
        Uuid = other.Uuid;
      }
      if (other.HasCountryCode) {
        CountryCode = other.CountryCode;
      }
      if (other.HasCpuCacheL1) {
        CpuCacheL1 = other.CpuCacheL1;
      }
      if (other.HasCpuCacheL2) {
        CpuCacheL2 = other.CpuCacheL2;
      }
      if (other.HasCpuCacheL3) {
        CpuCacheL3 = other.CpuCacheL3;
      }
      if (other.HasCpuDescription) {
        CpuDescription = other.CpuDescription;
      }
      if (other.HasNetAdapterType) {
        NetAdapterType = other.NetAdapterType;
      }
      if (other.HasNetVendorId) {
        NetVendorId = other.NetVendorId;
      }
      if (other.HasNetDeviceId) {
        NetDeviceId = other.NetDeviceId;
      }
      if (other.HasMotherboardChipset) {
        MotherboardChipset = other.MotherboardChipset;
      }
      if (other.HasFirewall) {
        Firewall = other.Firewall;
      }
      gpu_.Add(other.gpu_);
      soundDevice_.Add(other.soundDevice_);
      physicalDrive_.Add(other.physicalDrive_);
      usbDevice_.Add(other.usbDevice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MachineGuid = input.ReadString();
            break;
          }
          case 16: {
            RamSize = input.ReadUInt32();
            break;
          }
          case 26: {
            RamType = input.ReadString();
            break;
          }
          case 32: {
            CpuCount = input.ReadUInt32();
            break;
          }
          case 40: {
            CpuCores = input.ReadUInt32();
            break;
          }
          case 48: {
            CpuThreads = input.ReadUInt32();
            break;
          }
          case 58: {
            CpuName = input.ReadString();
            break;
          }
          case 66: {
            CpuHSI = input.ReadString();
            break;
          }
          case 72: {
            CpuDetectedSpeed = input.ReadUInt32();
            break;
          }
          case 80: {
            GpuCount = input.ReadUInt32();
            break;
          }
          case 90: {
            GpuName = input.ReadString();
            break;
          }
          case 98: {
            GpuVendor = input.ReadString();
            break;
          }
          case 106: {
            GpuDXVersion = input.ReadString();
            break;
          }
          case 112: {
            GpuVram = input.ReadUInt32();
            break;
          }
          case 122: {
            Monitor1 = input.ReadString();
            break;
          }
          case 130: {
            Monitor2 = input.ReadString();
            break;
          }
          case 136: {
            HddCount = input.ReadUInt32();
            break;
          }
          case 144: {
            HddTotSpace = input.ReadUInt32();
            break;
          }
          case 152: {
            HddFreeSpace = input.ReadUInt32();
            break;
          }
          case 162: {
            OsName = input.ReadString();
            break;
          }
          case 168: {
            OsBits = input.ReadUInt32();
            break;
          }
          case 178: {
            OsRegion = input.ReadString();
            break;
          }
          case 186: {
            SoundCard = input.ReadString();
            break;
          }
          case 192: {
            NetBandwidth = input.ReadUInt32();
            break;
          }
          case 200: {
            CpuScore = input.ReadUInt32();
            break;
          }
          case 208: {
            GpuScore = input.ReadUInt32();
            break;
          }
          case 218: {
            Microphone = input.ReadString();
            break;
          }
          case 226: {
            Gamepad = input.ReadString();
            break;
          }
          case 232: {
            DetectionTime = input.ReadUInt32();
            break;
          }
          case 242: {
            OsVersion = input.ReadString();
            break;
          }
          case 250: {
            Uuid = input.ReadString();
            break;
          }
          case 258: {
            CountryCode = input.ReadString();
            break;
          }
          case 264: {
            CpuCacheL1 = input.ReadUInt32();
            break;
          }
          case 272: {
            CpuCacheL2 = input.ReadUInt32();
            break;
          }
          case 280: {
            CpuCacheL3 = input.ReadUInt32();
            break;
          }
          case 290: {
            CpuDescription = input.ReadString();
            break;
          }
          case 298: {
            NetAdapterType = input.ReadString();
            break;
          }
          case 304: {
            NetVendorId = input.ReadUInt32();
            break;
          }
          case 312: {
            NetDeviceId = input.ReadUInt32();
            break;
          }
          case 330: {
            MotherboardChipset = input.ReadString();
            break;
          }
          case 338: {
            Firewall = input.ReadString();
            break;
          }
          case 346: {
            gpu_.AddEntriesFrom(input, _repeated_gpu_codec);
            break;
          }
          case 354: {
            soundDevice_.AddEntriesFrom(input, _repeated_soundDevice_codec);
            break;
          }
          case 362: {
            physicalDrive_.AddEntriesFrom(input, _repeated_physicalDrive_codec);
            break;
          }
          case 370: {
            usbDevice_.AddEntriesFrom(input, _repeated_usbDevice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MachineGuid = input.ReadString();
            break;
          }
          case 16: {
            RamSize = input.ReadUInt32();
            break;
          }
          case 26: {
            RamType = input.ReadString();
            break;
          }
          case 32: {
            CpuCount = input.ReadUInt32();
            break;
          }
          case 40: {
            CpuCores = input.ReadUInt32();
            break;
          }
          case 48: {
            CpuThreads = input.ReadUInt32();
            break;
          }
          case 58: {
            CpuName = input.ReadString();
            break;
          }
          case 66: {
            CpuHSI = input.ReadString();
            break;
          }
          case 72: {
            CpuDetectedSpeed = input.ReadUInt32();
            break;
          }
          case 80: {
            GpuCount = input.ReadUInt32();
            break;
          }
          case 90: {
            GpuName = input.ReadString();
            break;
          }
          case 98: {
            GpuVendor = input.ReadString();
            break;
          }
          case 106: {
            GpuDXVersion = input.ReadString();
            break;
          }
          case 112: {
            GpuVram = input.ReadUInt32();
            break;
          }
          case 122: {
            Monitor1 = input.ReadString();
            break;
          }
          case 130: {
            Monitor2 = input.ReadString();
            break;
          }
          case 136: {
            HddCount = input.ReadUInt32();
            break;
          }
          case 144: {
            HddTotSpace = input.ReadUInt32();
            break;
          }
          case 152: {
            HddFreeSpace = input.ReadUInt32();
            break;
          }
          case 162: {
            OsName = input.ReadString();
            break;
          }
          case 168: {
            OsBits = input.ReadUInt32();
            break;
          }
          case 178: {
            OsRegion = input.ReadString();
            break;
          }
          case 186: {
            SoundCard = input.ReadString();
            break;
          }
          case 192: {
            NetBandwidth = input.ReadUInt32();
            break;
          }
          case 200: {
            CpuScore = input.ReadUInt32();
            break;
          }
          case 208: {
            GpuScore = input.ReadUInt32();
            break;
          }
          case 218: {
            Microphone = input.ReadString();
            break;
          }
          case 226: {
            Gamepad = input.ReadString();
            break;
          }
          case 232: {
            DetectionTime = input.ReadUInt32();
            break;
          }
          case 242: {
            OsVersion = input.ReadString();
            break;
          }
          case 250: {
            Uuid = input.ReadString();
            break;
          }
          case 258: {
            CountryCode = input.ReadString();
            break;
          }
          case 264: {
            CpuCacheL1 = input.ReadUInt32();
            break;
          }
          case 272: {
            CpuCacheL2 = input.ReadUInt32();
            break;
          }
          case 280: {
            CpuCacheL3 = input.ReadUInt32();
            break;
          }
          case 290: {
            CpuDescription = input.ReadString();
            break;
          }
          case 298: {
            NetAdapterType = input.ReadString();
            break;
          }
          case 304: {
            NetVendorId = input.ReadUInt32();
            break;
          }
          case 312: {
            NetDeviceId = input.ReadUInt32();
            break;
          }
          case 330: {
            MotherboardChipset = input.ReadString();
            break;
          }
          case 338: {
            Firewall = input.ReadString();
            break;
          }
          case 346: {
            gpu_.AddEntriesFrom(ref input, _repeated_gpu_codec);
            break;
          }
          case 354: {
            soundDevice_.AddEntriesFrom(ref input, _repeated_soundDevice_codec);
            break;
          }
          case 362: {
            physicalDrive_.AddEntriesFrom(ref input, _repeated_physicalDrive_codec);
            break;
          }
          case 370: {
            usbDevice_.AddEntriesFrom(ref input, _repeated_usbDevice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HttpServiceRequestObjectData : pb::IMessage<HttpServiceRequestObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HttpServiceRequestObjectData> _parser = new pb::MessageParser<HttpServiceRequestObjectData>(() => new HttpServiceRequestObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HttpServiceRequestObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HttpServiceRequestObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HttpServiceRequestObjectData(HttpServiceRequestObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      name_ = other.name_;
      responseCode_ = other.responseCode_;
      connectTime_ = other.connectTime_;
      requestTime_ = other.requestTime_;
      totTime_ = other.totTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HttpServiceRequestObjectData Clone() {
      return new HttpServiceRequestObjectData(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "responseCode" field.</summary>
    public const int ResponseCodeFieldNumber = 3;
    private readonly static uint ResponseCodeDefaultValue = 0;

    private uint responseCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResponseCode {
      get { if ((_hasBits0 & 1) != 0) { return responseCode_; } else { return ResponseCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        responseCode_ = value;
      }
    }
    /// <summary>Gets whether the "responseCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResponseCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "responseCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResponseCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "connectTime" field.</summary>
    public const int ConnectTimeFieldNumber = 4;
    private readonly static uint ConnectTimeDefaultValue = 0;

    private uint connectTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConnectTime {
      get { if ((_hasBits0 & 2) != 0) { return connectTime_; } else { return ConnectTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        connectTime_ = value;
      }
    }
    /// <summary>Gets whether the "connectTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "connectTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "requestTime" field.</summary>
    public const int RequestTimeFieldNumber = 5;
    private readonly static uint RequestTimeDefaultValue = 0;

    private uint requestTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestTime {
      get { if ((_hasBits0 & 4) != 0) { return requestTime_; } else { return RequestTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        requestTime_ = value;
      }
    }
    /// <summary>Gets whether the "requestTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "requestTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "totTime" field.</summary>
    public const int TotTimeFieldNumber = 6;
    private readonly static uint TotTimeDefaultValue = 0;

    private uint totTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotTime {
      get { if ((_hasBits0 & 8) != 0) { return totTime_; } else { return TotTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totTime_ = value;
      }
    }
    /// <summary>Gets whether the "totTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "totTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotTime() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HttpServiceRequestObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HttpServiceRequestObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Name != other.Name) return false;
      if (ResponseCode != other.ResponseCode) return false;
      if (ConnectTime != other.ConnectTime) return false;
      if (RequestTime != other.RequestTime) return false;
      if (TotTime != other.TotTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasResponseCode) hash ^= ResponseCode.GetHashCode();
      if (HasConnectTime) hash ^= ConnectTime.GetHashCode();
      if (HasRequestTime) hash ^= RequestTime.GetHashCode();
      if (HasTotTime) hash ^= TotTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasResponseCode) {
        output.WriteRawTag(24);
        output.WriteUInt32(ResponseCode);
      }
      if (HasConnectTime) {
        output.WriteRawTag(32);
        output.WriteUInt32(ConnectTime);
      }
      if (HasRequestTime) {
        output.WriteRawTag(40);
        output.WriteUInt32(RequestTime);
      }
      if (HasTotTime) {
        output.WriteRawTag(48);
        output.WriteUInt32(TotTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasResponseCode) {
        output.WriteRawTag(24);
        output.WriteUInt32(ResponseCode);
      }
      if (HasConnectTime) {
        output.WriteRawTag(32);
        output.WriteUInt32(ConnectTime);
      }
      if (HasRequestTime) {
        output.WriteRawTag(40);
        output.WriteUInt32(RequestTime);
      }
      if (HasTotTime) {
        output.WriteRawTag(48);
        output.WriteUInt32(TotTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasResponseCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResponseCode);
      }
      if (HasConnectTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectTime);
      }
      if (HasRequestTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestTime);
      }
      if (HasTotTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HttpServiceRequestObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasResponseCode) {
        ResponseCode = other.ResponseCode;
      }
      if (other.HasConnectTime) {
        ConnectTime = other.ConnectTime;
      }
      if (other.HasRequestTime) {
        RequestTime = other.RequestTime;
      }
      if (other.HasTotTime) {
        TotTime = other.TotTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ResponseCode = input.ReadUInt32();
            break;
          }
          case 32: {
            ConnectTime = input.ReadUInt32();
            break;
          }
          case 40: {
            RequestTime = input.ReadUInt32();
            break;
          }
          case 48: {
            TotTime = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ResponseCode = input.ReadUInt32();
            break;
          }
          case 32: {
            ConnectTime = input.ReadUInt32();
            break;
          }
          case 40: {
            RequestTime = input.ReadUInt32();
            break;
          }
          case 48: {
            TotTime = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ImportSteamFriendsObjectData : pb::IMessage<ImportSteamFriendsObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImportSteamFriendsObjectData> _parser = new pb::MessageParser<ImportSteamFriendsObjectData>(() => new ImportSteamFriendsObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ImportSteamFriendsObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImportSteamFriendsObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImportSteamFriendsObjectData(ImportSteamFriendsObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      totSteamFriends_ = other.totSteamFriends_;
      friendsImported_ = other.friendsImported_;
      steamId_ = other.steamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImportSteamFriendsObjectData Clone() {
      return new ImportSteamFriendsObjectData(this);
    }

    /// <summary>Field number for the "totSteamFriends" field.</summary>
    public const int TotSteamFriendsFieldNumber = 1;
    private readonly static uint TotSteamFriendsDefaultValue = 0;

    private uint totSteamFriends_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotSteamFriends {
      get { if ((_hasBits0 & 1) != 0) { return totSteamFriends_; } else { return TotSteamFriendsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        totSteamFriends_ = value;
      }
    }
    /// <summary>Gets whether the "totSteamFriends" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotSteamFriends {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "totSteamFriends" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotSteamFriends() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "friendsImported" field.</summary>
    public const int FriendsImportedFieldNumber = 2;
    private readonly static uint FriendsImportedDefaultValue = 0;

    private uint friendsImported_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendsImported {
      get { if ((_hasBits0 & 2) != 0) { return friendsImported_; } else { return FriendsImportedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        friendsImported_ = value;
      }
    }
    /// <summary>Gets whether the "friendsImported" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsImported {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "friendsImported" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsImported() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "steamId" field.</summary>
    public const int SteamIdFieldNumber = 3;
    private readonly static string SteamIdDefaultValue = "";

    private string steamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SteamId {
      get { return steamId_ ?? SteamIdDefaultValue; }
      set {
        steamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "steamId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamId {
      get { return steamId_ != null; }
    }
    /// <summary>Clears the value of the "steamId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamId() {
      steamId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ImportSteamFriendsObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ImportSteamFriendsObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotSteamFriends != other.TotSteamFriends) return false;
      if (FriendsImported != other.FriendsImported) return false;
      if (SteamId != other.SteamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTotSteamFriends) hash ^= TotSteamFriends.GetHashCode();
      if (HasFriendsImported) hash ^= FriendsImported.GetHashCode();
      if (HasSteamId) hash ^= SteamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTotSteamFriends) {
        output.WriteRawTag(8);
        output.WriteUInt32(TotSteamFriends);
      }
      if (HasFriendsImported) {
        output.WriteRawTag(16);
        output.WriteUInt32(FriendsImported);
      }
      if (HasSteamId) {
        output.WriteRawTag(26);
        output.WriteString(SteamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTotSteamFriends) {
        output.WriteRawTag(8);
        output.WriteUInt32(TotSteamFriends);
      }
      if (HasFriendsImported) {
        output.WriteRawTag(16);
        output.WriteUInt32(FriendsImported);
      }
      if (HasSteamId) {
        output.WriteRawTag(26);
        output.WriteString(SteamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTotSteamFriends) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotSteamFriends);
      }
      if (HasFriendsImported) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendsImported);
      }
      if (HasSteamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SteamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ImportSteamFriendsObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasTotSteamFriends) {
        TotSteamFriends = other.TotSteamFriends;
      }
      if (other.HasFriendsImported) {
        FriendsImported = other.FriendsImported;
      }
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotSteamFriends = input.ReadUInt32();
            break;
          }
          case 16: {
            FriendsImported = input.ReadUInt32();
            break;
          }
          case 26: {
            SteamId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotSteamFriends = input.ReadUInt32();
            break;
          }
          case 16: {
            FriendsImported = input.ReadUInt32();
            break;
          }
          case 26: {
            SteamId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivateProductObjectData : pb::IMessage<ActivateProductObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivateProductObjectData> _parser = new pb::MessageParser<ActivateProductObjectData>(() => new ActivateProductObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivateProductObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateProductObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateProductObjectData(ActivateProductObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      packageId_ = other.packageId_;
      gameId_ = other.gameId_;
      brandId_ = other.brandId_;
      failReason_ = other.failReason_;
      nbKeyAttempts_ = other.nbKeyAttempts_;
      banned_ = other.banned_;
      activationTime_ = other.activationTime_;
      initiatedFrom_ = other.initiatedFrom_;
      currentGroup_ = other.currentGroup_;
      previousGroup_ = other.previousGroup_;
      nbNormalGames_ = other.nbNormalGames_;
      nbSteamGames_ = other.nbSteamGames_;
      productType_ = other.productType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateProductObjectData Clone() {
      return new ActivateProductObjectData(this);
    }

    /// <summary>Field number for the "packageId" field.</summary>
    public const int PackageIdFieldNumber = 1;
    private readonly static uint PackageIdDefaultValue = 0;

    private uint packageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PackageId {
      get { if ((_hasBits0 & 1) != 0) { return packageId_; } else { return PackageIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        packageId_ = value;
      }
    }
    /// <summary>Gets whether the "packageId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPackageId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "packageId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPackageId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static uint GameIdDefaultValue = 0;

    private uint gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameId {
      get { if ((_hasBits0 & 2) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "gameId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gameId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 3;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 4) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "failReason" field.</summary>
    public const int FailReasonFieldNumber = 4;
    private readonly static string FailReasonDefaultValue = "";

    private string failReason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FailReason {
      get { return failReason_ ?? FailReasonDefaultValue; }
      set {
        failReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "failReason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFailReason {
      get { return failReason_ != null; }
    }
    /// <summary>Clears the value of the "failReason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFailReason() {
      failReason_ = null;
    }

    /// <summary>Field number for the "nbKeyAttempts" field.</summary>
    public const int NbKeyAttemptsFieldNumber = 5;
    private readonly static uint NbKeyAttemptsDefaultValue = 0;

    private uint nbKeyAttempts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbKeyAttempts {
      get { if ((_hasBits0 & 8) != 0) { return nbKeyAttempts_; } else { return NbKeyAttemptsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        nbKeyAttempts_ = value;
      }
    }
    /// <summary>Gets whether the "nbKeyAttempts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbKeyAttempts {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "nbKeyAttempts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbKeyAttempts() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "banned" field.</summary>
    public const int BannedFieldNumber = 6;
    private readonly static bool BannedDefaultValue = false;

    private bool banned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Banned {
      get { if ((_hasBits0 & 16) != 0) { return banned_; } else { return BannedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        banned_ = value;
      }
    }
    /// <summary>Gets whether the "banned" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBanned {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "banned" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBanned() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "activationTime" field.</summary>
    public const int ActivationTimeFieldNumber = 7;
    private readonly static ulong ActivationTimeDefaultValue = 0UL;

    private ulong activationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ActivationTime {
      get { if ((_hasBits0 & 32) != 0) { return activationTime_; } else { return ActivationTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        activationTime_ = value;
      }
    }
    /// <summary>Gets whether the "activationTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "activationTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "initiatedFrom" field.</summary>
    public const int InitiatedFromFieldNumber = 8;
    private readonly static string InitiatedFromDefaultValue = "";

    private string initiatedFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InitiatedFrom {
      get { return initiatedFrom_ ?? InitiatedFromDefaultValue; }
      set {
        initiatedFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "initiatedFrom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitiatedFrom {
      get { return initiatedFrom_ != null; }
    }
    /// <summary>Clears the value of the "initiatedFrom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitiatedFrom() {
      initiatedFrom_ = null;
    }

    /// <summary>Field number for the "currentGroup" field.</summary>
    public const int CurrentGroupFieldNumber = 9;
    private readonly static string CurrentGroupDefaultValue = "";

    private string currentGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurrentGroup {
      get { return currentGroup_ ?? CurrentGroupDefaultValue; }
      set {
        currentGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currentGroup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentGroup {
      get { return currentGroup_ != null; }
    }
    /// <summary>Clears the value of the "currentGroup" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentGroup() {
      currentGroup_ = null;
    }

    /// <summary>Field number for the "previousGroup" field.</summary>
    public const int PreviousGroupFieldNumber = 10;
    private readonly static string PreviousGroupDefaultValue = "";

    private string previousGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PreviousGroup {
      get { return previousGroup_ ?? PreviousGroupDefaultValue; }
      set {
        previousGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "previousGroup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreviousGroup {
      get { return previousGroup_ != null; }
    }
    /// <summary>Clears the value of the "previousGroup" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreviousGroup() {
      previousGroup_ = null;
    }

    /// <summary>Field number for the "nbNormalGames" field.</summary>
    public const int NbNormalGamesFieldNumber = 11;
    private readonly static uint NbNormalGamesDefaultValue = 0;

    private uint nbNormalGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbNormalGames {
      get { if ((_hasBits0 & 64) != 0) { return nbNormalGames_; } else { return NbNormalGamesDefaultValue; } }
      set {
        _hasBits0 |= 64;
        nbNormalGames_ = value;
      }
    }
    /// <summary>Gets whether the "nbNormalGames" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbNormalGames {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "nbNormalGames" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbNormalGames() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "nbSteamGames" field.</summary>
    public const int NbSteamGamesFieldNumber = 12;
    private readonly static uint NbSteamGamesDefaultValue = 0;

    private uint nbSteamGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbSteamGames {
      get { if ((_hasBits0 & 128) != 0) { return nbSteamGames_; } else { return NbSteamGamesDefaultValue; } }
      set {
        _hasBits0 |= 128;
        nbSteamGames_ = value;
      }
    }
    /// <summary>Gets whether the "nbSteamGames" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbSteamGames {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "nbSteamGames" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbSteamGames() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "productType" field.</summary>
    public const int ProductTypeFieldNumber = 13;
    private readonly static string ProductTypeDefaultValue = "";

    private string productType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductType {
      get { return productType_ ?? ProductTypeDefaultValue; }
      set {
        productType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "productType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductType {
      get { return productType_ != null; }
    }
    /// <summary>Clears the value of the "productType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductType() {
      productType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivateProductObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivateProductObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageId != other.PackageId) return false;
      if (GameId != other.GameId) return false;
      if (BrandId != other.BrandId) return false;
      if (FailReason != other.FailReason) return false;
      if (NbKeyAttempts != other.NbKeyAttempts) return false;
      if (Banned != other.Banned) return false;
      if (ActivationTime != other.ActivationTime) return false;
      if (InitiatedFrom != other.InitiatedFrom) return false;
      if (CurrentGroup != other.CurrentGroup) return false;
      if (PreviousGroup != other.PreviousGroup) return false;
      if (NbNormalGames != other.NbNormalGames) return false;
      if (NbSteamGames != other.NbSteamGames) return false;
      if (ProductType != other.ProductType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPackageId) hash ^= PackageId.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasFailReason) hash ^= FailReason.GetHashCode();
      if (HasNbKeyAttempts) hash ^= NbKeyAttempts.GetHashCode();
      if (HasBanned) hash ^= Banned.GetHashCode();
      if (HasActivationTime) hash ^= ActivationTime.GetHashCode();
      if (HasInitiatedFrom) hash ^= InitiatedFrom.GetHashCode();
      if (HasCurrentGroup) hash ^= CurrentGroup.GetHashCode();
      if (HasPreviousGroup) hash ^= PreviousGroup.GetHashCode();
      if (HasNbNormalGames) hash ^= NbNormalGames.GetHashCode();
      if (HasNbSteamGames) hash ^= NbSteamGames.GetHashCode();
      if (HasProductType) hash ^= ProductType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPackageId) {
        output.WriteRawTag(8);
        output.WriteUInt32(PackageId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(24);
        output.WriteUInt32(BrandId);
      }
      if (HasFailReason) {
        output.WriteRawTag(34);
        output.WriteString(FailReason);
      }
      if (HasNbKeyAttempts) {
        output.WriteRawTag(40);
        output.WriteUInt32(NbKeyAttempts);
      }
      if (HasBanned) {
        output.WriteRawTag(48);
        output.WriteBool(Banned);
      }
      if (HasActivationTime) {
        output.WriteRawTag(56);
        output.WriteUInt64(ActivationTime);
      }
      if (HasInitiatedFrom) {
        output.WriteRawTag(66);
        output.WriteString(InitiatedFrom);
      }
      if (HasCurrentGroup) {
        output.WriteRawTag(74);
        output.WriteString(CurrentGroup);
      }
      if (HasPreviousGroup) {
        output.WriteRawTag(82);
        output.WriteString(PreviousGroup);
      }
      if (HasNbNormalGames) {
        output.WriteRawTag(88);
        output.WriteUInt32(NbNormalGames);
      }
      if (HasNbSteamGames) {
        output.WriteRawTag(96);
        output.WriteUInt32(NbSteamGames);
      }
      if (HasProductType) {
        output.WriteRawTag(106);
        output.WriteString(ProductType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPackageId) {
        output.WriteRawTag(8);
        output.WriteUInt32(PackageId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(24);
        output.WriteUInt32(BrandId);
      }
      if (HasFailReason) {
        output.WriteRawTag(34);
        output.WriteString(FailReason);
      }
      if (HasNbKeyAttempts) {
        output.WriteRawTag(40);
        output.WriteUInt32(NbKeyAttempts);
      }
      if (HasBanned) {
        output.WriteRawTag(48);
        output.WriteBool(Banned);
      }
      if (HasActivationTime) {
        output.WriteRawTag(56);
        output.WriteUInt64(ActivationTime);
      }
      if (HasInitiatedFrom) {
        output.WriteRawTag(66);
        output.WriteString(InitiatedFrom);
      }
      if (HasCurrentGroup) {
        output.WriteRawTag(74);
        output.WriteString(CurrentGroup);
      }
      if (HasPreviousGroup) {
        output.WriteRawTag(82);
        output.WriteString(PreviousGroup);
      }
      if (HasNbNormalGames) {
        output.WriteRawTag(88);
        output.WriteUInt32(NbNormalGames);
      }
      if (HasNbSteamGames) {
        output.WriteRawTag(96);
        output.WriteUInt32(NbSteamGames);
      }
      if (HasProductType) {
        output.WriteRawTag(106);
        output.WriteString(ProductType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPackageId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PackageId);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameId);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasFailReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FailReason);
      }
      if (HasNbKeyAttempts) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbKeyAttempts);
      }
      if (HasBanned) {
        size += 1 + 1;
      }
      if (HasActivationTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ActivationTime);
      }
      if (HasInitiatedFrom) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InitiatedFrom);
      }
      if (HasCurrentGroup) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentGroup);
      }
      if (HasPreviousGroup) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviousGroup);
      }
      if (HasNbNormalGames) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbNormalGames);
      }
      if (HasNbSteamGames) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbSteamGames);
      }
      if (HasProductType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivateProductObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasPackageId) {
        PackageId = other.PackageId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasFailReason) {
        FailReason = other.FailReason;
      }
      if (other.HasNbKeyAttempts) {
        NbKeyAttempts = other.NbKeyAttempts;
      }
      if (other.HasBanned) {
        Banned = other.Banned;
      }
      if (other.HasActivationTime) {
        ActivationTime = other.ActivationTime;
      }
      if (other.HasInitiatedFrom) {
        InitiatedFrom = other.InitiatedFrom;
      }
      if (other.HasCurrentGroup) {
        CurrentGroup = other.CurrentGroup;
      }
      if (other.HasPreviousGroup) {
        PreviousGroup = other.PreviousGroup;
      }
      if (other.HasNbNormalGames) {
        NbNormalGames = other.NbNormalGames;
      }
      if (other.HasNbSteamGames) {
        NbSteamGames = other.NbSteamGames;
      }
      if (other.HasProductType) {
        ProductType = other.ProductType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PackageId = input.ReadUInt32();
            break;
          }
          case 16: {
            GameId = input.ReadUInt32();
            break;
          }
          case 24: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 34: {
            FailReason = input.ReadString();
            break;
          }
          case 40: {
            NbKeyAttempts = input.ReadUInt32();
            break;
          }
          case 48: {
            Banned = input.ReadBool();
            break;
          }
          case 56: {
            ActivationTime = input.ReadUInt64();
            break;
          }
          case 66: {
            InitiatedFrom = input.ReadString();
            break;
          }
          case 74: {
            CurrentGroup = input.ReadString();
            break;
          }
          case 82: {
            PreviousGroup = input.ReadString();
            break;
          }
          case 88: {
            NbNormalGames = input.ReadUInt32();
            break;
          }
          case 96: {
            NbSteamGames = input.ReadUInt32();
            break;
          }
          case 106: {
            ProductType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PackageId = input.ReadUInt32();
            break;
          }
          case 16: {
            GameId = input.ReadUInt32();
            break;
          }
          case 24: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 34: {
            FailReason = input.ReadString();
            break;
          }
          case 40: {
            NbKeyAttempts = input.ReadUInt32();
            break;
          }
          case 48: {
            Banned = input.ReadBool();
            break;
          }
          case 56: {
            ActivationTime = input.ReadUInt64();
            break;
          }
          case 66: {
            InitiatedFrom = input.ReadString();
            break;
          }
          case 74: {
            CurrentGroup = input.ReadString();
            break;
          }
          case 82: {
            PreviousGroup = input.ReadString();
            break;
          }
          case 88: {
            NbNormalGames = input.ReadUInt32();
            break;
          }
          case 96: {
            NbSteamGames = input.ReadUInt32();
            break;
          }
          case 106: {
            ProductType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PartyObjectData : pb::IMessage<PartyObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartyObjectData> _parser = new pb::MessageParser<PartyObjectData>(() => new PartyObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PartyObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyObjectData(PartyObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      partyId_ = other.partyId_;
      joinedParty_ = other.joinedParty_;
      leftParty_ = other.leftParty_;
      isInitiator_ = other.isInitiator_;
      declinedParty_ = other.declinedParty_;
      productId_ = other.productId_;
      activationIds_ = other.activationIds_;
      brandId_ = other.brandId_;
      maxPartyMembers_ = other.maxPartyMembers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyObjectData Clone() {
      return new PartyObjectData(this);
    }

    /// <summary>Field number for the "partyId" field.</summary>
    public const int PartyIdFieldNumber = 1;
    private readonly static long PartyIdDefaultValue = 0L;

    private long partyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PartyId {
      get { if ((_hasBits0 & 1) != 0) { return partyId_; } else { return PartyIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        partyId_ = value;
      }
    }
    /// <summary>Gets whether the "partyId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPartyId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "partyId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPartyId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "joinedParty" field.</summary>
    public const int JoinedPartyFieldNumber = 2;
    private readonly static int JoinedPartyDefaultValue = 0;

    private int joinedParty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JoinedParty {
      get { if ((_hasBits0 & 2) != 0) { return joinedParty_; } else { return JoinedPartyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        joinedParty_ = value;
      }
    }
    /// <summary>Gets whether the "joinedParty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJoinedParty {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "joinedParty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJoinedParty() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "leftParty" field.</summary>
    public const int LeftPartyFieldNumber = 3;
    private readonly static int LeftPartyDefaultValue = 0;

    private int leftParty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftParty {
      get { if ((_hasBits0 & 4) != 0) { return leftParty_; } else { return LeftPartyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leftParty_ = value;
      }
    }
    /// <summary>Gets whether the "leftParty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftParty {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leftParty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftParty() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "isInitiator" field.</summary>
    public const int IsInitiatorFieldNumber = 4;
    private readonly static bool IsInitiatorDefaultValue = false;

    private bool isInitiator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInitiator {
      get { if ((_hasBits0 & 8) != 0) { return isInitiator_; } else { return IsInitiatorDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isInitiator_ = value;
      }
    }
    /// <summary>Gets whether the "isInitiator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsInitiator {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "isInitiator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsInitiator() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "declinedParty" field.</summary>
    public const int DeclinedPartyFieldNumber = 5;
    private readonly static bool DeclinedPartyDefaultValue = false;

    private bool declinedParty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeclinedParty {
      get { if ((_hasBits0 & 16) != 0) { return declinedParty_; } else { return DeclinedPartyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        declinedParty_ = value;
      }
    }
    /// <summary>Gets whether the "declinedParty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeclinedParty {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "declinedParty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeclinedParty() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 6;
    private readonly static int ProductIdDefaultValue = 0;

    private int productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProductId {
      get { if ((_hasBits0 & 32) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "activationIds" field.</summary>
    public const int ActivationIdsFieldNumber = 7;
    private readonly static string ActivationIdsDefaultValue = "";

    private string activationIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivationIds {
      get { return activationIds_ ?? ActivationIdsDefaultValue; }
      set {
        activationIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "activationIds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationIds {
      get { return activationIds_ != null; }
    }
    /// <summary>Clears the value of the "activationIds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationIds() {
      activationIds_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 8;
    private readonly static int BrandIdDefaultValue = 0;

    private int brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BrandId {
      get { if ((_hasBits0 & 64) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 64;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "maxPartyMembers" field.</summary>
    public const int MaxPartyMembersFieldNumber = 9;
    private readonly static int MaxPartyMembersDefaultValue = 0;

    private int maxPartyMembers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPartyMembers {
      get { if ((_hasBits0 & 128) != 0) { return maxPartyMembers_; } else { return MaxPartyMembersDefaultValue; } }
      set {
        _hasBits0 |= 128;
        maxPartyMembers_ = value;
      }
    }
    /// <summary>Gets whether the "maxPartyMembers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxPartyMembers {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "maxPartyMembers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxPartyMembers() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PartyObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PartyObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PartyId != other.PartyId) return false;
      if (JoinedParty != other.JoinedParty) return false;
      if (LeftParty != other.LeftParty) return false;
      if (IsInitiator != other.IsInitiator) return false;
      if (DeclinedParty != other.DeclinedParty) return false;
      if (ProductId != other.ProductId) return false;
      if (ActivationIds != other.ActivationIds) return false;
      if (BrandId != other.BrandId) return false;
      if (MaxPartyMembers != other.MaxPartyMembers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPartyId) hash ^= PartyId.GetHashCode();
      if (HasJoinedParty) hash ^= JoinedParty.GetHashCode();
      if (HasLeftParty) hash ^= LeftParty.GetHashCode();
      if (HasIsInitiator) hash ^= IsInitiator.GetHashCode();
      if (HasDeclinedParty) hash ^= DeclinedParty.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasActivationIds) hash ^= ActivationIds.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasMaxPartyMembers) hash ^= MaxPartyMembers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPartyId) {
        output.WriteRawTag(8);
        output.WriteInt64(PartyId);
      }
      if (HasJoinedParty) {
        output.WriteRawTag(16);
        output.WriteInt32(JoinedParty);
      }
      if (HasLeftParty) {
        output.WriteRawTag(24);
        output.WriteInt32(LeftParty);
      }
      if (HasIsInitiator) {
        output.WriteRawTag(32);
        output.WriteBool(IsInitiator);
      }
      if (HasDeclinedParty) {
        output.WriteRawTag(40);
        output.WriteBool(DeclinedParty);
      }
      if (HasProductId) {
        output.WriteRawTag(48);
        output.WriteInt32(ProductId);
      }
      if (HasActivationIds) {
        output.WriteRawTag(58);
        output.WriteString(ActivationIds);
      }
      if (HasBrandId) {
        output.WriteRawTag(64);
        output.WriteInt32(BrandId);
      }
      if (HasMaxPartyMembers) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxPartyMembers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPartyId) {
        output.WriteRawTag(8);
        output.WriteInt64(PartyId);
      }
      if (HasJoinedParty) {
        output.WriteRawTag(16);
        output.WriteInt32(JoinedParty);
      }
      if (HasLeftParty) {
        output.WriteRawTag(24);
        output.WriteInt32(LeftParty);
      }
      if (HasIsInitiator) {
        output.WriteRawTag(32);
        output.WriteBool(IsInitiator);
      }
      if (HasDeclinedParty) {
        output.WriteRawTag(40);
        output.WriteBool(DeclinedParty);
      }
      if (HasProductId) {
        output.WriteRawTag(48);
        output.WriteInt32(ProductId);
      }
      if (HasActivationIds) {
        output.WriteRawTag(58);
        output.WriteString(ActivationIds);
      }
      if (HasBrandId) {
        output.WriteRawTag(64);
        output.WriteInt32(BrandId);
      }
      if (HasMaxPartyMembers) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxPartyMembers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPartyId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartyId);
      }
      if (HasJoinedParty) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JoinedParty);
      }
      if (HasLeftParty) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftParty);
      }
      if (HasIsInitiator) {
        size += 1 + 1;
      }
      if (HasDeclinedParty) {
        size += 1 + 1;
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProductId);
      }
      if (HasActivationIds) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivationIds);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrandId);
      }
      if (HasMaxPartyMembers) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPartyMembers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PartyObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasPartyId) {
        PartyId = other.PartyId;
      }
      if (other.HasJoinedParty) {
        JoinedParty = other.JoinedParty;
      }
      if (other.HasLeftParty) {
        LeftParty = other.LeftParty;
      }
      if (other.HasIsInitiator) {
        IsInitiator = other.IsInitiator;
      }
      if (other.HasDeclinedParty) {
        DeclinedParty = other.DeclinedParty;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasActivationIds) {
        ActivationIds = other.ActivationIds;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasMaxPartyMembers) {
        MaxPartyMembers = other.MaxPartyMembers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PartyId = input.ReadInt64();
            break;
          }
          case 16: {
            JoinedParty = input.ReadInt32();
            break;
          }
          case 24: {
            LeftParty = input.ReadInt32();
            break;
          }
          case 32: {
            IsInitiator = input.ReadBool();
            break;
          }
          case 40: {
            DeclinedParty = input.ReadBool();
            break;
          }
          case 48: {
            ProductId = input.ReadInt32();
            break;
          }
          case 58: {
            ActivationIds = input.ReadString();
            break;
          }
          case 64: {
            BrandId = input.ReadInt32();
            break;
          }
          case 72: {
            MaxPartyMembers = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PartyId = input.ReadInt64();
            break;
          }
          case 16: {
            JoinedParty = input.ReadInt32();
            break;
          }
          case 24: {
            LeftParty = input.ReadInt32();
            break;
          }
          case 32: {
            IsInitiator = input.ReadBool();
            break;
          }
          case 40: {
            DeclinedParty = input.ReadBool();
            break;
          }
          case 48: {
            ProductId = input.ReadInt32();
            break;
          }
          case 58: {
            ActivationIds = input.ReadString();
            break;
          }
          case 64: {
            BrandId = input.ReadInt32();
            break;
          }
          case 72: {
            MaxPartyMembers = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountCreationObjectData : pb::IMessage<AccountCreationObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountCreationObjectData> _parser = new pb::MessageParser<AccountCreationObjectData>(() => new AccountCreationObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountCreationObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountCreationObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountCreationObjectData(AccountCreationObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      endStatus_ = other.endStatus_;
      failReason_ = other.failReason_;
      errorCodes_ = other.errorCodes_;
      initiatedFrom_ = other.initiatedFrom_;
      installerId_ = other.installerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountCreationObjectData Clone() {
      return new AccountCreationObjectData(this);
    }

    /// <summary>Field number for the "endStatus" field.</summary>
    public const int EndStatusFieldNumber = 5;
    private readonly static global::Uplay.Statistics.AccountCreationObjectData.Types.EndStatus EndStatusDefaultValue = global::Uplay.Statistics.AccountCreationObjectData.Types.EndStatus.Success;

    private global::Uplay.Statistics.AccountCreationObjectData.Types.EndStatus endStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.AccountCreationObjectData.Types.EndStatus EndStatus {
      get { if ((_hasBits0 & 1) != 0) { return endStatus_; } else { return EndStatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        endStatus_ = value;
      }
    }
    /// <summary>Gets whether the "endStatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "endStatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "failReason" field.</summary>
    public const int FailReasonFieldNumber = 6;
    private readonly static global::Uplay.Statistics.AccountCreationObjectData.Types.FailReason FailReasonDefaultValue = global::Uplay.Statistics.AccountCreationObjectData.Types.FailReason.Getpoliciesfail;

    private global::Uplay.Statistics.AccountCreationObjectData.Types.FailReason failReason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.AccountCreationObjectData.Types.FailReason FailReason {
      get { if ((_hasBits0 & 2) != 0) { return failReason_; } else { return FailReasonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        failReason_ = value;
      }
    }
    /// <summary>Gets whether the "failReason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFailReason {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "failReason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFailReason() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "errorCodes" field.</summary>
    public const int ErrorCodesFieldNumber = 7;
    private readonly static string ErrorCodesDefaultValue = "";

    private string errorCodes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorCodes {
      get { return errorCodes_ ?? ErrorCodesDefaultValue; }
      set {
        errorCodes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorCodes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCodes {
      get { return errorCodes_ != null; }
    }
    /// <summary>Clears the value of the "errorCodes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCodes() {
      errorCodes_ = null;
    }

    /// <summary>Field number for the "initiatedFrom" field.</summary>
    public const int InitiatedFromFieldNumber = 8;
    private readonly static string InitiatedFromDefaultValue = "";

    private string initiatedFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InitiatedFrom {
      get { return initiatedFrom_ ?? InitiatedFromDefaultValue; }
      set {
        initiatedFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "initiatedFrom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitiatedFrom {
      get { return initiatedFrom_ != null; }
    }
    /// <summary>Clears the value of the "initiatedFrom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitiatedFrom() {
      initiatedFrom_ = null;
    }

    /// <summary>Field number for the "installerId" field.</summary>
    public const int InstallerIdFieldNumber = 9;
    private readonly static string InstallerIdDefaultValue = "";

    private string installerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstallerId {
      get { return installerId_ ?? InstallerIdDefaultValue; }
      set {
        installerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "installerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstallerId {
      get { return installerId_ != null; }
    }
    /// <summary>Clears the value of the "installerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstallerId() {
      installerId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountCreationObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountCreationObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EndStatus != other.EndStatus) return false;
      if (FailReason != other.FailReason) return false;
      if (ErrorCodes != other.ErrorCodes) return false;
      if (InitiatedFrom != other.InitiatedFrom) return false;
      if (InstallerId != other.InstallerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEndStatus) hash ^= EndStatus.GetHashCode();
      if (HasFailReason) hash ^= FailReason.GetHashCode();
      if (HasErrorCodes) hash ^= ErrorCodes.GetHashCode();
      if (HasInitiatedFrom) hash ^= InitiatedFrom.GetHashCode();
      if (HasInstallerId) hash ^= InstallerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEndStatus) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EndStatus);
      }
      if (HasFailReason) {
        output.WriteRawTag(48);
        output.WriteEnum((int) FailReason);
      }
      if (HasErrorCodes) {
        output.WriteRawTag(58);
        output.WriteString(ErrorCodes);
      }
      if (HasInitiatedFrom) {
        output.WriteRawTag(66);
        output.WriteString(InitiatedFrom);
      }
      if (HasInstallerId) {
        output.WriteRawTag(74);
        output.WriteString(InstallerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEndStatus) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EndStatus);
      }
      if (HasFailReason) {
        output.WriteRawTag(48);
        output.WriteEnum((int) FailReason);
      }
      if (HasErrorCodes) {
        output.WriteRawTag(58);
        output.WriteString(ErrorCodes);
      }
      if (HasInitiatedFrom) {
        output.WriteRawTag(66);
        output.WriteString(InitiatedFrom);
      }
      if (HasInstallerId) {
        output.WriteRawTag(74);
        output.WriteString(InstallerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEndStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EndStatus);
      }
      if (HasFailReason) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FailReason);
      }
      if (HasErrorCodes) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCodes);
      }
      if (HasInitiatedFrom) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InitiatedFrom);
      }
      if (HasInstallerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstallerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountCreationObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasEndStatus) {
        EndStatus = other.EndStatus;
      }
      if (other.HasFailReason) {
        FailReason = other.FailReason;
      }
      if (other.HasErrorCodes) {
        ErrorCodes = other.ErrorCodes;
      }
      if (other.HasInitiatedFrom) {
        InitiatedFrom = other.InitiatedFrom;
      }
      if (other.HasInstallerId) {
        InstallerId = other.InstallerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 40: {
            EndStatus = (global::Uplay.Statistics.AccountCreationObjectData.Types.EndStatus) input.ReadEnum();
            break;
          }
          case 48: {
            FailReason = (global::Uplay.Statistics.AccountCreationObjectData.Types.FailReason) input.ReadEnum();
            break;
          }
          case 58: {
            ErrorCodes = input.ReadString();
            break;
          }
          case 66: {
            InitiatedFrom = input.ReadString();
            break;
          }
          case 74: {
            InstallerId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 40: {
            EndStatus = (global::Uplay.Statistics.AccountCreationObjectData.Types.EndStatus) input.ReadEnum();
            break;
          }
          case 48: {
            FailReason = (global::Uplay.Statistics.AccountCreationObjectData.Types.FailReason) input.ReadEnum();
            break;
          }
          case 58: {
            ErrorCodes = input.ReadString();
            break;
          }
          case 66: {
            InitiatedFrom = input.ReadString();
            break;
          }
          case 74: {
            InstallerId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AccountCreationObjectData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum EndStatus {
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAIL")] Fail = 2,
        [pbr::OriginalName("CANCEL")] Cancel = 3,
      }

      public enum FailReason {
        [pbr::OriginalName("GETPOLICIESFAIL")] Getpoliciesfail = 1,
        [pbr::OriginalName("VALIDATINGFAIL")] Validatingfail = 2,
        [pbr::OriginalName("CREATEACCOUNTFAIL")] Createaccountfail = 3,
      }

    }
    #endregion

  }

  public sealed partial class FriendActionObjectData : pb::IMessage<FriendActionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FriendActionObjectData> _parser = new pb::MessageParser<FriendActionObjectData>(() => new FriendActionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FriendActionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendActionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendActionObjectData(FriendActionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      friendId_ = other.friendId_;
      productId_ = other.productId_;
      brandId_ = other.brandId_;
      inputSource_ = other.inputSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendActionObjectData Clone() {
      return new FriendActionObjectData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private readonly static string FriendIdDefaultValue = "";

    private string friendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FriendId {
      get { return friendId_ ?? FriendIdDefaultValue; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "friendId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendId {
      get { return friendId_ != null; }
    }
    /// <summary>Clears the value of the "friendId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendId() {
      friendId_ = null;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 3;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 4;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 2) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 5;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FriendActionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FriendActionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (FriendId != other.FriendId) return false;
      if (ProductId != other.ProductId) return false;
      if (BrandId != other.BrandId) return false;
      if (InputSource != other.InputSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasFriendId) hash ^= FriendId.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasFriendId) {
        output.WriteRawTag(18);
        output.WriteString(FriendId);
      }
      if (HasProductId) {
        output.WriteRawTag(24);
        output.WriteUInt32(ProductId);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasInputSource) {
        output.WriteRawTag(42);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasFriendId) {
        output.WriteRawTag(18);
        output.WriteString(FriendId);
      }
      if (HasProductId) {
        output.WriteRawTag(24);
        output.WriteUInt32(ProductId);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasInputSource) {
        output.WriteRawTag(42);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasFriendId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FriendActionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasFriendId) {
        FriendId = other.FriendId;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            FriendId = input.ReadString();
            break;
          }
          case 24: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 42: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            FriendId = input.ReadString();
            break;
          }
          case 24: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 42: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FriendSuggestionActionObjectData : pb::IMessage<FriendSuggestionActionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FriendSuggestionActionObjectData> _parser = new pb::MessageParser<FriendSuggestionActionObjectData>(() => new FriendSuggestionActionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FriendSuggestionActionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendSuggestionActionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendSuggestionActionObjectData(FriendSuggestionActionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      friendId_ = other.friendId_;
      suggestionType_ = other.suggestionType_;
      inputSource_ = other.inputSource_;
      brandId_ = other.brandId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendSuggestionActionObjectData Clone() {
      return new FriendSuggestionActionObjectData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private readonly static string FriendIdDefaultValue = "";

    private string friendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FriendId {
      get { return friendId_ ?? FriendIdDefaultValue; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "friendId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendId {
      get { return friendId_ != null; }
    }
    /// <summary>Clears the value of the "friendId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendId() {
      friendId_ = null;
    }

    /// <summary>Field number for the "suggestionType" field.</summary>
    public const int SuggestionTypeFieldNumber = 3;
    private readonly static string SuggestionTypeDefaultValue = "";

    private string suggestionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SuggestionType {
      get { return suggestionType_ ?? SuggestionTypeDefaultValue; }
      set {
        suggestionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "suggestionType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuggestionType {
      get { return suggestionType_ != null; }
    }
    /// <summary>Clears the value of the "suggestionType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuggestionType() {
      suggestionType_ = null;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 4;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 5;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 1) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FriendSuggestionActionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FriendSuggestionActionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (FriendId != other.FriendId) return false;
      if (SuggestionType != other.SuggestionType) return false;
      if (InputSource != other.InputSource) return false;
      if (BrandId != other.BrandId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasFriendId) hash ^= FriendId.GetHashCode();
      if (HasSuggestionType) hash ^= SuggestionType.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasFriendId) {
        output.WriteRawTag(18);
        output.WriteString(FriendId);
      }
      if (HasSuggestionType) {
        output.WriteRawTag(26);
        output.WriteString(SuggestionType);
      }
      if (HasInputSource) {
        output.WriteRawTag(34);
        output.WriteString(InputSource);
      }
      if (HasBrandId) {
        output.WriteRawTag(40);
        output.WriteUInt32(BrandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasFriendId) {
        output.WriteRawTag(18);
        output.WriteString(FriendId);
      }
      if (HasSuggestionType) {
        output.WriteRawTag(26);
        output.WriteString(SuggestionType);
      }
      if (HasInputSource) {
        output.WriteRawTag(34);
        output.WriteString(InputSource);
      }
      if (HasBrandId) {
        output.WriteRawTag(40);
        output.WriteUInt32(BrandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasFriendId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (HasSuggestionType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SuggestionType);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FriendSuggestionActionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasFriendId) {
        FriendId = other.FriendId;
      }
      if (other.HasSuggestionType) {
        SuggestionType = other.SuggestionType;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            FriendId = input.ReadString();
            break;
          }
          case 26: {
            SuggestionType = input.ReadString();
            break;
          }
          case 34: {
            InputSource = input.ReadString();
            break;
          }
          case 40: {
            BrandId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            FriendId = input.ReadString();
            break;
          }
          case 26: {
            SuggestionType = input.ReadString();
            break;
          }
          case 34: {
            InputSource = input.ReadString();
            break;
          }
          case 40: {
            BrandId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FriendSuggestionImpressionObjectData : pb::IMessage<FriendSuggestionImpressionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FriendSuggestionImpressionObjectData> _parser = new pb::MessageParser<FriendSuggestionImpressionObjectData>(() => new FriendSuggestionImpressionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FriendSuggestionImpressionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendSuggestionImpressionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendSuggestionImpressionObjectData(FriendSuggestionImpressionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      friendId_ = other.friendId_;
      suggestionType_ = other.suggestionType_;
      inputSource_ = other.inputSource_;
      brandId_ = other.brandId_;
      sugRank_ = other.sugRank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendSuggestionImpressionObjectData Clone() {
      return new FriendSuggestionImpressionObjectData(this);
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private readonly static string FriendIdDefaultValue = "";

    private string friendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FriendId {
      get { return friendId_ ?? FriendIdDefaultValue; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "friendId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendId {
      get { return friendId_ != null; }
    }
    /// <summary>Clears the value of the "friendId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendId() {
      friendId_ = null;
    }

    /// <summary>Field number for the "suggestionType" field.</summary>
    public const int SuggestionTypeFieldNumber = 2;
    private readonly static string SuggestionTypeDefaultValue = "";

    private string suggestionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SuggestionType {
      get { return suggestionType_ ?? SuggestionTypeDefaultValue; }
      set {
        suggestionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "suggestionType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuggestionType {
      get { return suggestionType_ != null; }
    }
    /// <summary>Clears the value of the "suggestionType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuggestionType() {
      suggestionType_ = null;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 3;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 4;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 1) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sugRank" field.</summary>
    public const int SugRankFieldNumber = 5;
    private readonly static uint SugRankDefaultValue = 0;

    private uint sugRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SugRank {
      get { if ((_hasBits0 & 2) != 0) { return sugRank_; } else { return SugRankDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sugRank_ = value;
      }
    }
    /// <summary>Gets whether the "sugRank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSugRank {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sugRank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSugRank() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FriendSuggestionImpressionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FriendSuggestionImpressionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      if (SuggestionType != other.SuggestionType) return false;
      if (InputSource != other.InputSource) return false;
      if (BrandId != other.BrandId) return false;
      if (SugRank != other.SugRank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFriendId) hash ^= FriendId.GetHashCode();
      if (HasSuggestionType) hash ^= SuggestionType.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasSugRank) hash ^= SugRank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFriendId) {
        output.WriteRawTag(10);
        output.WriteString(FriendId);
      }
      if (HasSuggestionType) {
        output.WriteRawTag(18);
        output.WriteString(SuggestionType);
      }
      if (HasInputSource) {
        output.WriteRawTag(26);
        output.WriteString(InputSource);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasSugRank) {
        output.WriteRawTag(40);
        output.WriteUInt32(SugRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFriendId) {
        output.WriteRawTag(10);
        output.WriteString(FriendId);
      }
      if (HasSuggestionType) {
        output.WriteRawTag(18);
        output.WriteString(SuggestionType);
      }
      if (HasInputSource) {
        output.WriteRawTag(26);
        output.WriteString(InputSource);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasSugRank) {
        output.WriteRawTag(40);
        output.WriteUInt32(SugRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFriendId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (HasSuggestionType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SuggestionType);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasSugRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SugRank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FriendSuggestionImpressionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasFriendId) {
        FriendId = other.FriendId;
      }
      if (other.HasSuggestionType) {
        SuggestionType = other.SuggestionType;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasSugRank) {
        SugRank = other.SugRank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FriendId = input.ReadString();
            break;
          }
          case 18: {
            SuggestionType = input.ReadString();
            break;
          }
          case 26: {
            InputSource = input.ReadString();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 40: {
            SugRank = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FriendId = input.ReadString();
            break;
          }
          case 18: {
            SuggestionType = input.ReadString();
            break;
          }
          case 26: {
            InputSource = input.ReadString();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 40: {
            SugRank = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RedeemRewardObjectData : pb::IMessage<RedeemRewardObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RedeemRewardObjectData> _parser = new pb::MessageParser<RedeemRewardObjectData>(() => new RedeemRewardObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RedeemRewardObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedeemRewardObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedeemRewardObjectData(RedeemRewardObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      unitCost_ = other.unitCost_;
      rewardId_ = other.rewardId_;
      sourcePage_ = other.sourcePage_;
      productId_ = other.productId_;
      activationIds_ = other.activationIds_;
      brandId_ = other.brandId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedeemRewardObjectData Clone() {
      return new RedeemRewardObjectData(this);
    }

    /// <summary>Field number for the "unitCost" field.</summary>
    public const int UnitCostFieldNumber = 1;
    private readonly static uint UnitCostDefaultValue = 0;

    private uint unitCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnitCost {
      get { if ((_hasBits0 & 1) != 0) { return unitCost_; } else { return UnitCostDefaultValue; } }
      set {
        _hasBits0 |= 1;
        unitCost_ = value;
      }
    }
    /// <summary>Gets whether the "unitCost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnitCost {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "unitCost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnitCost() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rewardId" field.</summary>
    public const int RewardIdFieldNumber = 2;
    private readonly static string RewardIdDefaultValue = "";

    private string rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RewardId {
      get { return rewardId_ ?? RewardIdDefaultValue; }
      set {
        rewardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rewardId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardId {
      get { return rewardId_ != null; }
    }
    /// <summary>Clears the value of the "rewardId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardId() {
      rewardId_ = null;
    }

    /// <summary>Field number for the "sourcePage" field.</summary>
    public const int SourcePageFieldNumber = 3;
    private readonly static string SourcePageDefaultValue = "";

    private string sourcePage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourcePage {
      get { return sourcePage_ ?? SourcePageDefaultValue; }
      set {
        sourcePage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourcePage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourcePage {
      get { return sourcePage_ != null; }
    }
    /// <summary>Clears the value of the "sourcePage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourcePage() {
      sourcePage_ = null;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 4;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 2) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "activationIds" field.</summary>
    public const int ActivationIdsFieldNumber = 5;
    private readonly static string ActivationIdsDefaultValue = "";

    private string activationIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivationIds {
      get { return activationIds_ ?? ActivationIdsDefaultValue; }
      set {
        activationIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "activationIds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationIds {
      get { return activationIds_ != null; }
    }
    /// <summary>Clears the value of the "activationIds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationIds() {
      activationIds_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 6;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 4) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RedeemRewardObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RedeemRewardObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnitCost != other.UnitCost) return false;
      if (RewardId != other.RewardId) return false;
      if (SourcePage != other.SourcePage) return false;
      if (ProductId != other.ProductId) return false;
      if (ActivationIds != other.ActivationIds) return false;
      if (BrandId != other.BrandId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUnitCost) hash ^= UnitCost.GetHashCode();
      if (HasRewardId) hash ^= RewardId.GetHashCode();
      if (HasSourcePage) hash ^= SourcePage.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasActivationIds) hash ^= ActivationIds.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUnitCost) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnitCost);
      }
      if (HasRewardId) {
        output.WriteRawTag(18);
        output.WriteString(RewardId);
      }
      if (HasSourcePage) {
        output.WriteRawTag(26);
        output.WriteString(SourcePage);
      }
      if (HasProductId) {
        output.WriteRawTag(32);
        output.WriteUInt32(ProductId);
      }
      if (HasActivationIds) {
        output.WriteRawTag(42);
        output.WriteString(ActivationIds);
      }
      if (HasBrandId) {
        output.WriteRawTag(48);
        output.WriteUInt32(BrandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUnitCost) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnitCost);
      }
      if (HasRewardId) {
        output.WriteRawTag(18);
        output.WriteString(RewardId);
      }
      if (HasSourcePage) {
        output.WriteRawTag(26);
        output.WriteString(SourcePage);
      }
      if (HasProductId) {
        output.WriteRawTag(32);
        output.WriteUInt32(ProductId);
      }
      if (HasActivationIds) {
        output.WriteRawTag(42);
        output.WriteString(ActivationIds);
      }
      if (HasBrandId) {
        output.WriteRawTag(48);
        output.WriteUInt32(BrandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUnitCost) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnitCost);
      }
      if (HasRewardId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardId);
      }
      if (HasSourcePage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourcePage);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasActivationIds) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivationIds);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RedeemRewardObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasUnitCost) {
        UnitCost = other.UnitCost;
      }
      if (other.HasRewardId) {
        RewardId = other.RewardId;
      }
      if (other.HasSourcePage) {
        SourcePage = other.SourcePage;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasActivationIds) {
        ActivationIds = other.ActivationIds;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnitCost = input.ReadUInt32();
            break;
          }
          case 18: {
            RewardId = input.ReadString();
            break;
          }
          case 26: {
            SourcePage = input.ReadString();
            break;
          }
          case 32: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 42: {
            ActivationIds = input.ReadString();
            break;
          }
          case 48: {
            BrandId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UnitCost = input.ReadUInt32();
            break;
          }
          case 18: {
            RewardId = input.ReadString();
            break;
          }
          case 26: {
            SourcePage = input.ReadString();
            break;
          }
          case 32: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 42: {
            ActivationIds = input.ReadString();
            break;
          }
          case 48: {
            BrandId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingSessionObjectData : pb::IMessage<StreamingSessionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingSessionObjectData> _parser = new pb::MessageParser<StreamingSessionObjectData>(() => new StreamingSessionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingSessionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingSessionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingSessionObjectData(StreamingSessionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      gameVolume_ = other.gameVolume_;
      micVolume_ = other.micVolume_;
      paused_ = other.paused_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      copyUrl_ = other.copyUrl_;
      startMethod_ = other.startMethod_;
      maxNbViewers_ = other.maxNbViewers_;
      gameId_ = other.gameId_;
      brandId_ = other.brandId_;
      streamingTime_ = other.streamingTime_;
      serviceName_ = other.serviceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingSessionObjectData Clone() {
      return new StreamingSessionObjectData(this);
    }

    /// <summary>Field number for the "gameVolume" field.</summary>
    public const int GameVolumeFieldNumber = 1;
    private readonly static int GameVolumeDefaultValue = 0;

    private int gameVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameVolume {
      get { if ((_hasBits0 & 1) != 0) { return gameVolume_; } else { return GameVolumeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameVolume_ = value;
      }
    }
    /// <summary>Gets whether the "gameVolume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameVolume {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gameVolume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameVolume() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "micVolume" field.</summary>
    public const int MicVolumeFieldNumber = 2;
    private readonly static int MicVolumeDefaultValue = 0;

    private int micVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MicVolume {
      get { if ((_hasBits0 & 2) != 0) { return micVolume_; } else { return MicVolumeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        micVolume_ = value;
      }
    }
    /// <summary>Gets whether the "micVolume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicVolume {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "micVolume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicVolume() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "paused" field.</summary>
    public const int PausedFieldNumber = 3;
    private readonly static int PausedDefaultValue = 0;

    private int paused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Paused {
      get { if ((_hasBits0 & 4) != 0) { return paused_; } else { return PausedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        paused_ = value;
      }
    }
    /// <summary>Gets whether the "paused" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaused {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "paused" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaused() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private readonly static int StartTimeDefaultValue = 0;

    private int startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartTime {
      get { if ((_hasBits0 & 8) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "startTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "startTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTime() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private readonly static int EndTimeDefaultValue = 0;

    private int endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndTime {
      get { if ((_hasBits0 & 16) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "endTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "endTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTime() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "copyUrl" field.</summary>
    public const int CopyUrlFieldNumber = 6;
    private readonly static int CopyUrlDefaultValue = 0;

    private int copyUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CopyUrl {
      get { if ((_hasBits0 & 32) != 0) { return copyUrl_; } else { return CopyUrlDefaultValue; } }
      set {
        _hasBits0 |= 32;
        copyUrl_ = value;
      }
    }
    /// <summary>Gets whether the "copyUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCopyUrl {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "copyUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCopyUrl() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "startMethod" field.</summary>
    public const int StartMethodFieldNumber = 7;
    private readonly static string StartMethodDefaultValue = "";

    private string startMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartMethod {
      get { return startMethod_ ?? StartMethodDefaultValue; }
      set {
        startMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "startMethod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartMethod {
      get { return startMethod_ != null; }
    }
    /// <summary>Clears the value of the "startMethod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartMethod() {
      startMethod_ = null;
    }

    /// <summary>Field number for the "maxNbViewers" field.</summary>
    public const int MaxNbViewersFieldNumber = 8;
    private readonly static int MaxNbViewersDefaultValue = 0;

    private int maxNbViewers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxNbViewers {
      get { if ((_hasBits0 & 64) != 0) { return maxNbViewers_; } else { return MaxNbViewersDefaultValue; } }
      set {
        _hasBits0 |= 64;
        maxNbViewers_ = value;
      }
    }
    /// <summary>Gets whether the "maxNbViewers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxNbViewers {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "maxNbViewers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxNbViewers() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 9;
    private readonly static int GameIdDefaultValue = 0;

    private int gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameId {
      get { if ((_hasBits0 & 128) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 128;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "gameId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "gameId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 10;
    private readonly static int BrandIdDefaultValue = 0;

    private int brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BrandId {
      get { if ((_hasBits0 & 256) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 256;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "streamingTime" field.</summary>
    public const int StreamingTimeFieldNumber = 11;
    private readonly static int StreamingTimeDefaultValue = 0;

    private int streamingTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StreamingTime {
      get { if ((_hasBits0 & 512) != 0) { return streamingTime_; } else { return StreamingTimeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        streamingTime_ = value;
      }
    }
    /// <summary>Gets whether the "streamingTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamingTime {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "streamingTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingTime() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 13;
    private readonly static string ServiceNameDefaultValue = "";

    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceName {
      get { return serviceName_ ?? ServiceNameDefaultValue; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serviceName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServiceName {
      get { return serviceName_ != null; }
    }
    /// <summary>Clears the value of the "serviceName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServiceName() {
      serviceName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingSessionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingSessionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameVolume != other.GameVolume) return false;
      if (MicVolume != other.MicVolume) return false;
      if (Paused != other.Paused) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (CopyUrl != other.CopyUrl) return false;
      if (StartMethod != other.StartMethod) return false;
      if (MaxNbViewers != other.MaxNbViewers) return false;
      if (GameId != other.GameId) return false;
      if (BrandId != other.BrandId) return false;
      if (StreamingTime != other.StreamingTime) return false;
      if (ServiceName != other.ServiceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameVolume) hash ^= GameVolume.GetHashCode();
      if (HasMicVolume) hash ^= MicVolume.GetHashCode();
      if (HasPaused) hash ^= Paused.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      if (HasCopyUrl) hash ^= CopyUrl.GetHashCode();
      if (HasStartMethod) hash ^= StartMethod.GetHashCode();
      if (HasMaxNbViewers) hash ^= MaxNbViewers.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasStreamingTime) hash ^= StreamingTime.GetHashCode();
      if (HasServiceName) hash ^= ServiceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameVolume) {
        output.WriteRawTag(8);
        output.WriteInt32(GameVolume);
      }
      if (HasMicVolume) {
        output.WriteRawTag(16);
        output.WriteInt32(MicVolume);
      }
      if (HasPaused) {
        output.WriteRawTag(24);
        output.WriteInt32(Paused);
      }
      if (HasStartTime) {
        output.WriteRawTag(32);
        output.WriteInt32(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(40);
        output.WriteInt32(EndTime);
      }
      if (HasCopyUrl) {
        output.WriteRawTag(48);
        output.WriteInt32(CopyUrl);
      }
      if (HasStartMethod) {
        output.WriteRawTag(58);
        output.WriteString(StartMethod);
      }
      if (HasMaxNbViewers) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxNbViewers);
      }
      if (HasGameId) {
        output.WriteRawTag(72);
        output.WriteInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(80);
        output.WriteInt32(BrandId);
      }
      if (HasStreamingTime) {
        output.WriteRawTag(88);
        output.WriteInt32(StreamingTime);
      }
      if (HasServiceName) {
        output.WriteRawTag(106);
        output.WriteString(ServiceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameVolume) {
        output.WriteRawTag(8);
        output.WriteInt32(GameVolume);
      }
      if (HasMicVolume) {
        output.WriteRawTag(16);
        output.WriteInt32(MicVolume);
      }
      if (HasPaused) {
        output.WriteRawTag(24);
        output.WriteInt32(Paused);
      }
      if (HasStartTime) {
        output.WriteRawTag(32);
        output.WriteInt32(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(40);
        output.WriteInt32(EndTime);
      }
      if (HasCopyUrl) {
        output.WriteRawTag(48);
        output.WriteInt32(CopyUrl);
      }
      if (HasStartMethod) {
        output.WriteRawTag(58);
        output.WriteString(StartMethod);
      }
      if (HasMaxNbViewers) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxNbViewers);
      }
      if (HasGameId) {
        output.WriteRawTag(72);
        output.WriteInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(80);
        output.WriteInt32(BrandId);
      }
      if (HasStreamingTime) {
        output.WriteRawTag(88);
        output.WriteInt32(StreamingTime);
      }
      if (HasServiceName) {
        output.WriteRawTag(106);
        output.WriteString(ServiceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameVolume) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameVolume);
      }
      if (HasMicVolume) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MicVolume);
      }
      if (HasPaused) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Paused);
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      if (HasCopyUrl) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CopyUrl);
      }
      if (HasStartMethod) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartMethod);
      }
      if (HasMaxNbViewers) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNbViewers);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameId);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrandId);
      }
      if (HasStreamingTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StreamingTime);
      }
      if (HasServiceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingSessionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasGameVolume) {
        GameVolume = other.GameVolume;
      }
      if (other.HasMicVolume) {
        MicVolume = other.MicVolume;
      }
      if (other.HasPaused) {
        Paused = other.Paused;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      if (other.HasCopyUrl) {
        CopyUrl = other.CopyUrl;
      }
      if (other.HasStartMethod) {
        StartMethod = other.StartMethod;
      }
      if (other.HasMaxNbViewers) {
        MaxNbViewers = other.MaxNbViewers;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasStreamingTime) {
        StreamingTime = other.StreamingTime;
      }
      if (other.HasServiceName) {
        ServiceName = other.ServiceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameVolume = input.ReadInt32();
            break;
          }
          case 16: {
            MicVolume = input.ReadInt32();
            break;
          }
          case 24: {
            Paused = input.ReadInt32();
            break;
          }
          case 32: {
            StartTime = input.ReadInt32();
            break;
          }
          case 40: {
            EndTime = input.ReadInt32();
            break;
          }
          case 48: {
            CopyUrl = input.ReadInt32();
            break;
          }
          case 58: {
            StartMethod = input.ReadString();
            break;
          }
          case 64: {
            MaxNbViewers = input.ReadInt32();
            break;
          }
          case 72: {
            GameId = input.ReadInt32();
            break;
          }
          case 80: {
            BrandId = input.ReadInt32();
            break;
          }
          case 88: {
            StreamingTime = input.ReadInt32();
            break;
          }
          case 106: {
            ServiceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameVolume = input.ReadInt32();
            break;
          }
          case 16: {
            MicVolume = input.ReadInt32();
            break;
          }
          case 24: {
            Paused = input.ReadInt32();
            break;
          }
          case 32: {
            StartTime = input.ReadInt32();
            break;
          }
          case 40: {
            EndTime = input.ReadInt32();
            break;
          }
          case 48: {
            CopyUrl = input.ReadInt32();
            break;
          }
          case 58: {
            StartMethod = input.ReadString();
            break;
          }
          case 64: {
            MaxNbViewers = input.ReadInt32();
            break;
          }
          case 72: {
            GameId = input.ReadInt32();
            break;
          }
          case 80: {
            BrandId = input.ReadInt32();
            break;
          }
          case 88: {
            StreamingTime = input.ReadInt32();
            break;
          }
          case 106: {
            ServiceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountLinkingObjectData : pb::IMessage<AccountLinkingObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountLinkingObjectData> _parser = new pb::MessageParser<AccountLinkingObjectData>(() => new AccountLinkingObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountLinkingObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountLinkingObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountLinkingObjectData(AccountLinkingObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      thirdPartyName_ = other.thirdPartyName_;
      success_ = other.success_;
      thirdPartyId_ = other.thirdPartyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountLinkingObjectData Clone() {
      return new AccountLinkingObjectData(this);
    }

    /// <summary>Field number for the "thirdPartyName" field.</summary>
    public const int ThirdPartyNameFieldNumber = 1;
    private readonly static string ThirdPartyNameDefaultValue = "";

    private string thirdPartyName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThirdPartyName {
      get { return thirdPartyName_ ?? ThirdPartyNameDefaultValue; }
      set {
        thirdPartyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "thirdPartyName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThirdPartyName {
      get { return thirdPartyName_ != null; }
    }
    /// <summary>Clears the value of the "thirdPartyName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThirdPartyName() {
      thirdPartyName_ = null;
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private readonly static int SuccessDefaultValue = 0;

    private int success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "thirdPartyId" field.</summary>
    public const int ThirdPartyIdFieldNumber = 3;
    private readonly static string ThirdPartyIdDefaultValue = "";

    private string thirdPartyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThirdPartyId {
      get { return thirdPartyId_ ?? ThirdPartyIdDefaultValue; }
      set {
        thirdPartyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "thirdPartyId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThirdPartyId {
      get { return thirdPartyId_ != null; }
    }
    /// <summary>Clears the value of the "thirdPartyId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThirdPartyId() {
      thirdPartyId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountLinkingObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountLinkingObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThirdPartyName != other.ThirdPartyName) return false;
      if (Success != other.Success) return false;
      if (ThirdPartyId != other.ThirdPartyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasThirdPartyName) hash ^= ThirdPartyName.GetHashCode();
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (HasThirdPartyId) hash ^= ThirdPartyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasThirdPartyName) {
        output.WriteRawTag(10);
        output.WriteString(ThirdPartyName);
      }
      if (HasSuccess) {
        output.WriteRawTag(16);
        output.WriteInt32(Success);
      }
      if (HasThirdPartyId) {
        output.WriteRawTag(26);
        output.WriteString(ThirdPartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasThirdPartyName) {
        output.WriteRawTag(10);
        output.WriteString(ThirdPartyName);
      }
      if (HasSuccess) {
        output.WriteRawTag(16);
        output.WriteInt32(Success);
      }
      if (HasThirdPartyId) {
        output.WriteRawTag(26);
        output.WriteString(ThirdPartyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasThirdPartyName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThirdPartyName);
      }
      if (HasSuccess) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Success);
      }
      if (HasThirdPartyId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThirdPartyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountLinkingObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasThirdPartyName) {
        ThirdPartyName = other.ThirdPartyName;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasThirdPartyId) {
        ThirdPartyId = other.ThirdPartyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ThirdPartyName = input.ReadString();
            break;
          }
          case 16: {
            Success = input.ReadInt32();
            break;
          }
          case 26: {
            ThirdPartyId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ThirdPartyName = input.ReadString();
            break;
          }
          case 16: {
            Success = input.ReadInt32();
            break;
          }
          case 26: {
            ThirdPartyId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChatSessionObjectData : pb::IMessage<ChatSessionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChatSessionObjectData> _parser = new pb::MessageParser<ChatSessionObjectData>(() => new ChatSessionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChatSessionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatSessionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatSessionObjectData(ChatSessionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      conversationId_ = other.conversationId_;
      msgSent_ = other.msgSent_;
      msgReceived_ = other.msgReceived_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatSessionObjectData Clone() {
      return new ChatSessionObjectData(this);
    }

    /// <summary>Field number for the "conversationId" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private readonly static string ConversationIdDefaultValue = "";

    private string conversationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConversationId {
      get { return conversationId_ ?? ConversationIdDefaultValue; }
      set {
        conversationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversationId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConversationId {
      get { return conversationId_ != null; }
    }
    /// <summary>Clears the value of the "conversationId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConversationId() {
      conversationId_ = null;
    }

    /// <summary>Field number for the "msgSent" field.</summary>
    public const int MsgSentFieldNumber = 2;
    private readonly static int MsgSentDefaultValue = 0;

    private int msgSent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MsgSent {
      get { if ((_hasBits0 & 1) != 0) { return msgSent_; } else { return MsgSentDefaultValue; } }
      set {
        _hasBits0 |= 1;
        msgSent_ = value;
      }
    }
    /// <summary>Gets whether the "msgSent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgSent {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msgSent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgSent() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "msgReceived" field.</summary>
    public const int MsgReceivedFieldNumber = 3;
    private readonly static int MsgReceivedDefaultValue = 0;

    private int msgReceived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MsgReceived {
      get { if ((_hasBits0 & 2) != 0) { return msgReceived_; } else { return MsgReceivedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        msgReceived_ = value;
      }
    }
    /// <summary>Gets whether the "msgReceived" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgReceived {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "msgReceived" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgReceived() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChatSessionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChatSessionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConversationId != other.ConversationId) return false;
      if (MsgSent != other.MsgSent) return false;
      if (MsgReceived != other.MsgReceived) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConversationId) hash ^= ConversationId.GetHashCode();
      if (HasMsgSent) hash ^= MsgSent.GetHashCode();
      if (HasMsgReceived) hash ^= MsgReceived.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConversationId) {
        output.WriteRawTag(10);
        output.WriteString(ConversationId);
      }
      if (HasMsgSent) {
        output.WriteRawTag(16);
        output.WriteInt32(MsgSent);
      }
      if (HasMsgReceived) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgReceived);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConversationId) {
        output.WriteRawTag(10);
        output.WriteString(ConversationId);
      }
      if (HasMsgSent) {
        output.WriteRawTag(16);
        output.WriteInt32(MsgSent);
      }
      if (HasMsgReceived) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgReceived);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasConversationId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversationId);
      }
      if (HasMsgSent) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgSent);
      }
      if (HasMsgReceived) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgReceived);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChatSessionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasConversationId) {
        ConversationId = other.ConversationId;
      }
      if (other.HasMsgSent) {
        MsgSent = other.MsgSent;
      }
      if (other.HasMsgReceived) {
        MsgReceived = other.MsgReceived;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConversationId = input.ReadString();
            break;
          }
          case 16: {
            MsgSent = input.ReadInt32();
            break;
          }
          case 24: {
            MsgReceived = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConversationId = input.ReadString();
            break;
          }
          case 16: {
            MsgSent = input.ReadInt32();
            break;
          }
          case 24: {
            MsgReceived = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChallengeActionObjectData : pb::IMessage<ChallengeActionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChallengeActionObjectData> _parser = new pb::MessageParser<ChallengeActionObjectData>(() => new ChallengeActionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChallengeActionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChallengeActionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChallengeActionObjectData(ChallengeActionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      activationIds_ = other.activationIds_;
      brandId_ = other.brandId_;
      action_ = other.action_;
      poolId_ = other.poolId_;
      challengeId_ = other.challengeId_;
      expired_ = other.expired_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChallengeActionObjectData Clone() {
      return new ChallengeActionObjectData(this);
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "activationIds" field.</summary>
    public const int ActivationIdsFieldNumber = 2;
    private readonly static string ActivationIdsDefaultValue = "";

    private string activationIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivationIds {
      get { return activationIds_ ?? ActivationIdsDefaultValue; }
      set {
        activationIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "activationIds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationIds {
      get { return activationIds_ != null; }
    }
    /// <summary>Clears the value of the "activationIds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationIds() {
      activationIds_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 3;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 2) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 4;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "poolId" field.</summary>
    public const int PoolIdFieldNumber = 5;
    private readonly static string PoolIdDefaultValue = "";

    private string poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PoolId {
      get { return poolId_ ?? PoolIdDefaultValue; }
      set {
        poolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "poolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPoolId {
      get { return poolId_ != null; }
    }
    /// <summary>Clears the value of the "poolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPoolId() {
      poolId_ = null;
    }

    /// <summary>Field number for the "challengeId" field.</summary>
    public const int ChallengeIdFieldNumber = 6;
    private readonly static string ChallengeIdDefaultValue = "";

    private string challengeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChallengeId {
      get { return challengeId_ ?? ChallengeIdDefaultValue; }
      set {
        challengeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "challengeId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChallengeId {
      get { return challengeId_ != null; }
    }
    /// <summary>Clears the value of the "challengeId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChallengeId() {
      challengeId_ = null;
    }

    /// <summary>Field number for the "expired" field.</summary>
    public const int ExpiredFieldNumber = 7;
    private readonly static bool ExpiredDefaultValue = false;

    private bool expired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Expired {
      get { if ((_hasBits0 & 4) != 0) { return expired_; } else { return ExpiredDefaultValue; } }
      set {
        _hasBits0 |= 4;
        expired_ = value;
      }
    }
    /// <summary>Gets whether the "expired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpired {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "expired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpired() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChallengeActionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChallengeActionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (ActivationIds != other.ActivationIds) return false;
      if (BrandId != other.BrandId) return false;
      if (Action != other.Action) return false;
      if (PoolId != other.PoolId) return false;
      if (ChallengeId != other.ChallengeId) return false;
      if (Expired != other.Expired) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasActivationIds) hash ^= ActivationIds.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasPoolId) hash ^= PoolId.GetHashCode();
      if (HasChallengeId) hash ^= ChallengeId.GetHashCode();
      if (HasExpired) hash ^= Expired.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasActivationIds) {
        output.WriteRawTag(18);
        output.WriteString(ActivationIds);
      }
      if (HasBrandId) {
        output.WriteRawTag(24);
        output.WriteUInt32(BrandId);
      }
      if (HasAction) {
        output.WriteRawTag(34);
        output.WriteString(Action);
      }
      if (HasPoolId) {
        output.WriteRawTag(42);
        output.WriteString(PoolId);
      }
      if (HasChallengeId) {
        output.WriteRawTag(50);
        output.WriteString(ChallengeId);
      }
      if (HasExpired) {
        output.WriteRawTag(56);
        output.WriteBool(Expired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasActivationIds) {
        output.WriteRawTag(18);
        output.WriteString(ActivationIds);
      }
      if (HasBrandId) {
        output.WriteRawTag(24);
        output.WriteUInt32(BrandId);
      }
      if (HasAction) {
        output.WriteRawTag(34);
        output.WriteString(Action);
      }
      if (HasPoolId) {
        output.WriteRawTag(42);
        output.WriteString(PoolId);
      }
      if (HasChallengeId) {
        output.WriteRawTag(50);
        output.WriteString(ChallengeId);
      }
      if (HasExpired) {
        output.WriteRawTag(56);
        output.WriteBool(Expired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasActivationIds) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivationIds);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasPoolId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoolId);
      }
      if (HasChallengeId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChallengeId);
      }
      if (HasExpired) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChallengeActionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasActivationIds) {
        ActivationIds = other.ActivationIds;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasPoolId) {
        PoolId = other.PoolId;
      }
      if (other.HasChallengeId) {
        ChallengeId = other.ChallengeId;
      }
      if (other.HasExpired) {
        Expired = other.Expired;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            ActivationIds = input.ReadString();
            break;
          }
          case 24: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 34: {
            Action = input.ReadString();
            break;
          }
          case 42: {
            PoolId = input.ReadString();
            break;
          }
          case 50: {
            ChallengeId = input.ReadString();
            break;
          }
          case 56: {
            Expired = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            ActivationIds = input.ReadString();
            break;
          }
          case 24: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 34: {
            Action = input.ReadString();
            break;
          }
          case 42: {
            PoolId = input.ReadString();
            break;
          }
          case 50: {
            ChallengeId = input.ReadString();
            break;
          }
          case 56: {
            Expired = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewsClickObjectData : pb::IMessage<NewsClickObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewsClickObjectData> _parser = new pb::MessageParser<NewsClickObjectData>(() => new NewsClickObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewsClickObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsClickObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsClickObjectData(NewsClickObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      ignId_ = other.ignId_;
      viewName_ = other.viewName_;
      displayType_ = other.displayType_;
      brandId_ = other.brandId_;
      productId_ = other.productId_;
      layout_ = other.layout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsClickObjectData Clone() {
      return new NewsClickObjectData(this);
    }

    /// <summary>Field number for the "ignId" field.</summary>
    public const int IgnIdFieldNumber = 1;
    private readonly static string IgnIdDefaultValue = "";

    private string ignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IgnId {
      get { return ignId_ ?? IgnIdDefaultValue; }
      set {
        ignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ignId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIgnId {
      get { return ignId_ != null; }
    }
    /// <summary>Clears the value of the "ignId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIgnId() {
      ignId_ = null;
    }

    /// <summary>Field number for the "viewName" field.</summary>
    public const int ViewNameFieldNumber = 2;
    private readonly static string ViewNameDefaultValue = "";

    private string viewName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewName {
      get { return viewName_ ?? ViewNameDefaultValue; }
      set {
        viewName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "viewName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewName {
      get { return viewName_ != null; }
    }
    /// <summary>Clears the value of the "viewName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewName() {
      viewName_ = null;
    }

    /// <summary>Field number for the "displayType" field.</summary>
    public const int DisplayTypeFieldNumber = 3;
    private readonly static string DisplayTypeDefaultValue = "";

    private string displayType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayType {
      get { return displayType_ ?? DisplayTypeDefaultValue; }
      set {
        displayType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayType {
      get { return displayType_ != null; }
    }
    /// <summary>Clears the value of the "displayType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayType() {
      displayType_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 4;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 1) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 5;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 2) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 7;
    private readonly static string LayoutDefaultValue = "";

    private string layout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Layout {
      get { return layout_ ?? LayoutDefaultValue; }
      set {
        layout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "layout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayout {
      get { return layout_ != null; }
    }
    /// <summary>Clears the value of the "layout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayout() {
      layout_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewsClickObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewsClickObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IgnId != other.IgnId) return false;
      if (ViewName != other.ViewName) return false;
      if (DisplayType != other.DisplayType) return false;
      if (BrandId != other.BrandId) return false;
      if (ProductId != other.ProductId) return false;
      if (Layout != other.Layout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIgnId) hash ^= IgnId.GetHashCode();
      if (HasViewName) hash ^= ViewName.GetHashCode();
      if (HasDisplayType) hash ^= DisplayType.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasLayout) hash ^= Layout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIgnId) {
        output.WriteRawTag(10);
        output.WriteString(IgnId);
      }
      if (HasViewName) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasDisplayType) {
        output.WriteRawTag(26);
        output.WriteString(DisplayType);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasProductId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProductId);
      }
      if (HasLayout) {
        output.WriteRawTag(58);
        output.WriteString(Layout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIgnId) {
        output.WriteRawTag(10);
        output.WriteString(IgnId);
      }
      if (HasViewName) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasDisplayType) {
        output.WriteRawTag(26);
        output.WriteString(DisplayType);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasProductId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProductId);
      }
      if (HasLayout) {
        output.WriteRawTag(58);
        output.WriteString(Layout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIgnId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IgnId);
      }
      if (HasViewName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewName);
      }
      if (HasDisplayType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayType);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasLayout) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Layout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewsClickObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasIgnId) {
        IgnId = other.IgnId;
      }
      if (other.HasViewName) {
        ViewName = other.ViewName;
      }
      if (other.HasDisplayType) {
        DisplayType = other.DisplayType;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasLayout) {
        Layout = other.Layout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IgnId = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 26: {
            DisplayType = input.ReadString();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 40: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 58: {
            Layout = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IgnId = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 26: {
            DisplayType = input.ReadString();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 40: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 58: {
            Layout = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewsOpenObjectData : pb::IMessage<NewsOpenObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewsOpenObjectData> _parser = new pb::MessageParser<NewsOpenObjectData>(() => new NewsOpenObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewsOpenObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsOpenObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsOpenObjectData(NewsOpenObjectData other) : this() {
      ignId_ = other.ignId_;
      sender_ = other.sender_;
      senderId_ = other.senderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsOpenObjectData Clone() {
      return new NewsOpenObjectData(this);
    }

    /// <summary>Field number for the "ignId" field.</summary>
    public const int IgnIdFieldNumber = 1;
    private readonly static string IgnIdDefaultValue = "";

    private string ignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IgnId {
      get { return ignId_ ?? IgnIdDefaultValue; }
      set {
        ignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ignId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIgnId {
      get { return ignId_ != null; }
    }
    /// <summary>Clears the value of the "ignId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIgnId() {
      ignId_ = null;
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 2;
    private readonly static string SenderDefaultValue = "";

    private string sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sender {
      get { return sender_ ?? SenderDefaultValue; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sender" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSender {
      get { return sender_ != null; }
    }
    /// <summary>Clears the value of the "sender" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSender() {
      sender_ = null;
    }

    /// <summary>Field number for the "senderId" field.</summary>
    public const int SenderIdFieldNumber = 3;
    private readonly static string SenderIdDefaultValue = "";

    private string senderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SenderId {
      get { return senderId_ ?? SenderIdDefaultValue; }
      set {
        senderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "senderId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSenderId {
      get { return senderId_ != null; }
    }
    /// <summary>Clears the value of the "senderId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSenderId() {
      senderId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewsOpenObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewsOpenObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IgnId != other.IgnId) return false;
      if (Sender != other.Sender) return false;
      if (SenderId != other.SenderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIgnId) hash ^= IgnId.GetHashCode();
      if (HasSender) hash ^= Sender.GetHashCode();
      if (HasSenderId) hash ^= SenderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIgnId) {
        output.WriteRawTag(10);
        output.WriteString(IgnId);
      }
      if (HasSender) {
        output.WriteRawTag(18);
        output.WriteString(Sender);
      }
      if (HasSenderId) {
        output.WriteRawTag(26);
        output.WriteString(SenderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIgnId) {
        output.WriteRawTag(10);
        output.WriteString(IgnId);
      }
      if (HasSender) {
        output.WriteRawTag(18);
        output.WriteString(Sender);
      }
      if (HasSenderId) {
        output.WriteRawTag(26);
        output.WriteString(SenderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIgnId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IgnId);
      }
      if (HasSender) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (HasSenderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewsOpenObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasIgnId) {
        IgnId = other.IgnId;
      }
      if (other.HasSender) {
        Sender = other.Sender;
      }
      if (other.HasSenderId) {
        SenderId = other.SenderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IgnId = input.ReadString();
            break;
          }
          case 18: {
            Sender = input.ReadString();
            break;
          }
          case 26: {
            SenderId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IgnId = input.ReadString();
            break;
          }
          case 18: {
            Sender = input.ReadString();
            break;
          }
          case 26: {
            SenderId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewsImpressionObjectData : pb::IMessage<NewsImpressionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewsImpressionObjectData> _parser = new pb::MessageParser<NewsImpressionObjectData>(() => new NewsImpressionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewsImpressionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsImpressionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsImpressionObjectData(NewsImpressionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      ignId_ = other.ignId_;
      viewName_ = other.viewName_;
      displayType_ = other.displayType_;
      brandId_ = other.brandId_;
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsImpressionObjectData Clone() {
      return new NewsImpressionObjectData(this);
    }

    /// <summary>Field number for the "ignId" field.</summary>
    public const int IgnIdFieldNumber = 1;
    private readonly static string IgnIdDefaultValue = "";

    private string ignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IgnId {
      get { return ignId_ ?? IgnIdDefaultValue; }
      set {
        ignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ignId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIgnId {
      get { return ignId_ != null; }
    }
    /// <summary>Clears the value of the "ignId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIgnId() {
      ignId_ = null;
    }

    /// <summary>Field number for the "viewName" field.</summary>
    public const int ViewNameFieldNumber = 2;
    private readonly static string ViewNameDefaultValue = "";

    private string viewName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewName {
      get { return viewName_ ?? ViewNameDefaultValue; }
      set {
        viewName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "viewName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewName {
      get { return viewName_ != null; }
    }
    /// <summary>Clears the value of the "viewName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewName() {
      viewName_ = null;
    }

    /// <summary>Field number for the "displayType" field.</summary>
    public const int DisplayTypeFieldNumber = 3;
    private readonly static string DisplayTypeDefaultValue = "";

    private string displayType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayType {
      get { return displayType_ ?? DisplayTypeDefaultValue; }
      set {
        displayType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayType {
      get { return displayType_ != null; }
    }
    /// <summary>Clears the value of the "displayType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayType() {
      displayType_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 4;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 1) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 5;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 2) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewsImpressionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewsImpressionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IgnId != other.IgnId) return false;
      if (ViewName != other.ViewName) return false;
      if (DisplayType != other.DisplayType) return false;
      if (BrandId != other.BrandId) return false;
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIgnId) hash ^= IgnId.GetHashCode();
      if (HasViewName) hash ^= ViewName.GetHashCode();
      if (HasDisplayType) hash ^= DisplayType.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIgnId) {
        output.WriteRawTag(10);
        output.WriteString(IgnId);
      }
      if (HasViewName) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasDisplayType) {
        output.WriteRawTag(26);
        output.WriteString(DisplayType);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasProductId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIgnId) {
        output.WriteRawTag(10);
        output.WriteString(IgnId);
      }
      if (HasViewName) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasDisplayType) {
        output.WriteRawTag(26);
        output.WriteString(DisplayType);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasProductId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIgnId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IgnId);
      }
      if (HasViewName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewName);
      }
      if (HasDisplayType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayType);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewsImpressionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasIgnId) {
        IgnId = other.IgnId;
      }
      if (other.HasViewName) {
        ViewName = other.ViewName;
      }
      if (other.HasDisplayType) {
        DisplayType = other.DisplayType;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IgnId = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 26: {
            DisplayType = input.ReadString();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 40: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IgnId = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 26: {
            DisplayType = input.ReadString();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 40: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AdImpressionObjectData : pb::IMessage<AdImpressionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AdImpressionObjectData> _parser = new pb::MessageParser<AdImpressionObjectData>(() => new AdImpressionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AdImpressionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdImpressionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdImpressionObjectData(AdImpressionObjectData other) : this() {
      linkUrl_ = other.linkUrl_;
      metaTag_ = other.metaTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdImpressionObjectData Clone() {
      return new AdImpressionObjectData(this);
    }

    /// <summary>Field number for the "linkUrl" field.</summary>
    public const int LinkUrlFieldNumber = 1;
    private readonly static string LinkUrlDefaultValue = "";

    private string linkUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LinkUrl {
      get { return linkUrl_ ?? LinkUrlDefaultValue; }
      set {
        linkUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "linkUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLinkUrl {
      get { return linkUrl_ != null; }
    }
    /// <summary>Clears the value of the "linkUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLinkUrl() {
      linkUrl_ = null;
    }

    /// <summary>Field number for the "metaTag" field.</summary>
    public const int MetaTagFieldNumber = 2;
    private readonly static string MetaTagDefaultValue = "";

    private string metaTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MetaTag {
      get { return metaTag_ ?? MetaTagDefaultValue; }
      set {
        metaTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "metaTag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMetaTag {
      get { return metaTag_ != null; }
    }
    /// <summary>Clears the value of the "metaTag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetaTag() {
      metaTag_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AdImpressionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AdImpressionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LinkUrl != other.LinkUrl) return false;
      if (MetaTag != other.MetaTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLinkUrl) hash ^= LinkUrl.GetHashCode();
      if (HasMetaTag) hash ^= MetaTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLinkUrl) {
        output.WriteRawTag(10);
        output.WriteString(LinkUrl);
      }
      if (HasMetaTag) {
        output.WriteRawTag(18);
        output.WriteString(MetaTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLinkUrl) {
        output.WriteRawTag(10);
        output.WriteString(LinkUrl);
      }
      if (HasMetaTag) {
        output.WriteRawTag(18);
        output.WriteString(MetaTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLinkUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkUrl);
      }
      if (HasMetaTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AdImpressionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasLinkUrl) {
        LinkUrl = other.LinkUrl;
      }
      if (other.HasMetaTag) {
        MetaTag = other.MetaTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LinkUrl = input.ReadString();
            break;
          }
          case 18: {
            MetaTag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LinkUrl = input.ReadString();
            break;
          }
          case 18: {
            MetaTag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PromoTabInteractionObjectData : pb::IMessage<PromoTabInteractionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PromoTabInteractionObjectData> _parser = new pb::MessageParser<PromoTabInteractionObjectData>(() => new PromoTabInteractionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PromoTabInteractionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PromoTabInteractionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PromoTabInteractionObjectData(PromoTabInteractionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      tabName_ = other.tabName_;
      interactionType_ = other.interactionType_;
      target_ = other.target_;
      sectionName_ = other.sectionName_;
      brandId_ = other.brandId_;
      url_ = other.url_;
      clientLanguage_ = other.clientLanguage_;
      ownScenario_ = other.ownScenario_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PromoTabInteractionObjectData Clone() {
      return new PromoTabInteractionObjectData(this);
    }

    /// <summary>Field number for the "tabName" field.</summary>
    public const int TabNameFieldNumber = 1;
    private readonly static string TabNameDefaultValue = "";

    private string tabName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabName {
      get { return tabName_ ?? TabNameDefaultValue; }
      set {
        tabName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tabName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTabName {
      get { return tabName_ != null; }
    }
    /// <summary>Clears the value of the "tabName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTabName() {
      tabName_ = null;
    }

    /// <summary>Field number for the "interactionType" field.</summary>
    public const int InteractionTypeFieldNumber = 2;
    private readonly static string InteractionTypeDefaultValue = "";

    private string interactionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InteractionType {
      get { return interactionType_ ?? InteractionTypeDefaultValue; }
      set {
        interactionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "interactionType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInteractionType {
      get { return interactionType_ != null; }
    }
    /// <summary>Clears the value of the "interactionType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInteractionType() {
      interactionType_ = null;
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private readonly static string TargetDefaultValue = "";

    private string target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Target {
      get { return target_ ?? TargetDefaultValue; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTarget {
      get { return target_ != null; }
    }
    /// <summary>Clears the value of the "target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      target_ = null;
    }

    /// <summary>Field number for the "sectionName" field.</summary>
    public const int SectionNameFieldNumber = 4;
    private readonly static string SectionNameDefaultValue = "";

    private string sectionName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SectionName {
      get { return sectionName_ ?? SectionNameDefaultValue; }
      set {
        sectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSectionName {
      get { return sectionName_ != null; }
    }
    /// <summary>Clears the value of the "sectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSectionName() {
      sectionName_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 5;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 1) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 6;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "clientLanguage" field.</summary>
    public const int ClientLanguageFieldNumber = 7;
    private readonly static string ClientLanguageDefaultValue = "";

    private string clientLanguage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientLanguage {
      get { return clientLanguage_ ?? ClientLanguageDefaultValue; }
      set {
        clientLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clientLanguage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientLanguage {
      get { return clientLanguage_ != null; }
    }
    /// <summary>Clears the value of the "clientLanguage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientLanguage() {
      clientLanguage_ = null;
    }

    /// <summary>Field number for the "ownScenario" field.</summary>
    public const int OwnScenarioFieldNumber = 8;
    private readonly static string OwnScenarioDefaultValue = "";

    private string ownScenario_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnScenario {
      get { return ownScenario_ ?? OwnScenarioDefaultValue; }
      set {
        ownScenario_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ownScenario" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnScenario {
      get { return ownScenario_ != null; }
    }
    /// <summary>Clears the value of the "ownScenario" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnScenario() {
      ownScenario_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PromoTabInteractionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PromoTabInteractionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabName != other.TabName) return false;
      if (InteractionType != other.InteractionType) return false;
      if (Target != other.Target) return false;
      if (SectionName != other.SectionName) return false;
      if (BrandId != other.BrandId) return false;
      if (Url != other.Url) return false;
      if (ClientLanguage != other.ClientLanguage) return false;
      if (OwnScenario != other.OwnScenario) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTabName) hash ^= TabName.GetHashCode();
      if (HasInteractionType) hash ^= InteractionType.GetHashCode();
      if (HasTarget) hash ^= Target.GetHashCode();
      if (HasSectionName) hash ^= SectionName.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasClientLanguage) hash ^= ClientLanguage.GetHashCode();
      if (HasOwnScenario) hash ^= OwnScenario.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTabName) {
        output.WriteRawTag(10);
        output.WriteString(TabName);
      }
      if (HasInteractionType) {
        output.WriteRawTag(18);
        output.WriteString(InteractionType);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (HasSectionName) {
        output.WriteRawTag(34);
        output.WriteString(SectionName);
      }
      if (HasBrandId) {
        output.WriteRawTag(40);
        output.WriteUInt32(BrandId);
      }
      if (HasUrl) {
        output.WriteRawTag(50);
        output.WriteString(Url);
      }
      if (HasClientLanguage) {
        output.WriteRawTag(58);
        output.WriteString(ClientLanguage);
      }
      if (HasOwnScenario) {
        output.WriteRawTag(66);
        output.WriteString(OwnScenario);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTabName) {
        output.WriteRawTag(10);
        output.WriteString(TabName);
      }
      if (HasInteractionType) {
        output.WriteRawTag(18);
        output.WriteString(InteractionType);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (HasSectionName) {
        output.WriteRawTag(34);
        output.WriteString(SectionName);
      }
      if (HasBrandId) {
        output.WriteRawTag(40);
        output.WriteUInt32(BrandId);
      }
      if (HasUrl) {
        output.WriteRawTag(50);
        output.WriteString(Url);
      }
      if (HasClientLanguage) {
        output.WriteRawTag(58);
        output.WriteString(ClientLanguage);
      }
      if (HasOwnScenario) {
        output.WriteRawTag(66);
        output.WriteString(OwnScenario);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTabName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabName);
      }
      if (HasInteractionType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InteractionType);
      }
      if (HasTarget) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (HasSectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SectionName);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasClientLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientLanguage);
      }
      if (HasOwnScenario) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnScenario);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PromoTabInteractionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasTabName) {
        TabName = other.TabName;
      }
      if (other.HasInteractionType) {
        InteractionType = other.InteractionType;
      }
      if (other.HasTarget) {
        Target = other.Target;
      }
      if (other.HasSectionName) {
        SectionName = other.SectionName;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasClientLanguage) {
        ClientLanguage = other.ClientLanguage;
      }
      if (other.HasOwnScenario) {
        OwnScenario = other.OwnScenario;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TabName = input.ReadString();
            break;
          }
          case 18: {
            InteractionType = input.ReadString();
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            SectionName = input.ReadString();
            break;
          }
          case 40: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 50: {
            Url = input.ReadString();
            break;
          }
          case 58: {
            ClientLanguage = input.ReadString();
            break;
          }
          case 66: {
            OwnScenario = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TabName = input.ReadString();
            break;
          }
          case 18: {
            InteractionType = input.ReadString();
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            SectionName = input.ReadString();
            break;
          }
          case 40: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 50: {
            Url = input.ReadString();
            break;
          }
          case 58: {
            ClientLanguage = input.ReadString();
            break;
          }
          case 66: {
            OwnScenario = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewsInteractionObjectData : pb::IMessage<NewsInteractionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewsInteractionObjectData> _parser = new pb::MessageParser<NewsInteractionObjectData>(() => new NewsInteractionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewsInteractionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsInteractionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsInteractionObjectData(NewsInteractionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      ignId_ = other.ignId_;
      interactionType_ = other.interactionType_;
      target_ = other.target_;
      viewName_ = other.viewName_;
      brandId_ = other.brandId_;
      productId_ = other.productId_;
      url_ = other.url_;
      layout_ = other.layout_;
      betaCode_ = other.betaCode_;
      betaPhaseId_ = other.betaPhaseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewsInteractionObjectData Clone() {
      return new NewsInteractionObjectData(this);
    }

    /// <summary>Field number for the "ignId" field.</summary>
    public const int IgnIdFieldNumber = 1;
    private readonly static string IgnIdDefaultValue = "";

    private string ignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IgnId {
      get { return ignId_ ?? IgnIdDefaultValue; }
      set {
        ignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ignId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIgnId {
      get { return ignId_ != null; }
    }
    /// <summary>Clears the value of the "ignId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIgnId() {
      ignId_ = null;
    }

    /// <summary>Field number for the "interactionType" field.</summary>
    public const int InteractionTypeFieldNumber = 2;
    private readonly static string InteractionTypeDefaultValue = "";

    private string interactionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InteractionType {
      get { return interactionType_ ?? InteractionTypeDefaultValue; }
      set {
        interactionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "interactionType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInteractionType {
      get { return interactionType_ != null; }
    }
    /// <summary>Clears the value of the "interactionType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInteractionType() {
      interactionType_ = null;
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private readonly static string TargetDefaultValue = "";

    private string target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Target {
      get { return target_ ?? TargetDefaultValue; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTarget {
      get { return target_ != null; }
    }
    /// <summary>Clears the value of the "target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      target_ = null;
    }

    /// <summary>Field number for the "viewName" field.</summary>
    public const int ViewNameFieldNumber = 4;
    private readonly static string ViewNameDefaultValue = "";

    private string viewName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewName {
      get { return viewName_ ?? ViewNameDefaultValue; }
      set {
        viewName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "viewName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewName {
      get { return viewName_ != null; }
    }
    /// <summary>Clears the value of the "viewName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewName() {
      viewName_ = null;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 5;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 1) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 6;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 2) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 8;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 9;
    private readonly static string LayoutDefaultValue = "";

    private string layout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Layout {
      get { return layout_ ?? LayoutDefaultValue; }
      set {
        layout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "layout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayout {
      get { return layout_ != null; }
    }
    /// <summary>Clears the value of the "layout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayout() {
      layout_ = null;
    }

    /// <summary>Field number for the "betaCode" field.</summary>
    public const int BetaCodeFieldNumber = 10;
    private readonly static string BetaCodeDefaultValue = "";

    private string betaCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BetaCode {
      get { return betaCode_ ?? BetaCodeDefaultValue; }
      set {
        betaCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "betaCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBetaCode {
      get { return betaCode_ != null; }
    }
    /// <summary>Clears the value of the "betaCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBetaCode() {
      betaCode_ = null;
    }

    /// <summary>Field number for the "betaPhaseId" field.</summary>
    public const int BetaPhaseIdFieldNumber = 11;
    private readonly static uint BetaPhaseIdDefaultValue = 0;

    private uint betaPhaseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BetaPhaseId {
      get { if ((_hasBits0 & 4) != 0) { return betaPhaseId_; } else { return BetaPhaseIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        betaPhaseId_ = value;
      }
    }
    /// <summary>Gets whether the "betaPhaseId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBetaPhaseId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "betaPhaseId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBetaPhaseId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewsInteractionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewsInteractionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IgnId != other.IgnId) return false;
      if (InteractionType != other.InteractionType) return false;
      if (Target != other.Target) return false;
      if (ViewName != other.ViewName) return false;
      if (BrandId != other.BrandId) return false;
      if (ProductId != other.ProductId) return false;
      if (Url != other.Url) return false;
      if (Layout != other.Layout) return false;
      if (BetaCode != other.BetaCode) return false;
      if (BetaPhaseId != other.BetaPhaseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIgnId) hash ^= IgnId.GetHashCode();
      if (HasInteractionType) hash ^= InteractionType.GetHashCode();
      if (HasTarget) hash ^= Target.GetHashCode();
      if (HasViewName) hash ^= ViewName.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasLayout) hash ^= Layout.GetHashCode();
      if (HasBetaCode) hash ^= BetaCode.GetHashCode();
      if (HasBetaPhaseId) hash ^= BetaPhaseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIgnId) {
        output.WriteRawTag(10);
        output.WriteString(IgnId);
      }
      if (HasInteractionType) {
        output.WriteRawTag(18);
        output.WriteString(InteractionType);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (HasViewName) {
        output.WriteRawTag(34);
        output.WriteString(ViewName);
      }
      if (HasBrandId) {
        output.WriteRawTag(40);
        output.WriteUInt32(BrandId);
      }
      if (HasProductId) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProductId);
      }
      if (HasUrl) {
        output.WriteRawTag(66);
        output.WriteString(Url);
      }
      if (HasLayout) {
        output.WriteRawTag(74);
        output.WriteString(Layout);
      }
      if (HasBetaCode) {
        output.WriteRawTag(82);
        output.WriteString(BetaCode);
      }
      if (HasBetaPhaseId) {
        output.WriteRawTag(88);
        output.WriteUInt32(BetaPhaseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIgnId) {
        output.WriteRawTag(10);
        output.WriteString(IgnId);
      }
      if (HasInteractionType) {
        output.WriteRawTag(18);
        output.WriteString(InteractionType);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (HasViewName) {
        output.WriteRawTag(34);
        output.WriteString(ViewName);
      }
      if (HasBrandId) {
        output.WriteRawTag(40);
        output.WriteUInt32(BrandId);
      }
      if (HasProductId) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProductId);
      }
      if (HasUrl) {
        output.WriteRawTag(66);
        output.WriteString(Url);
      }
      if (HasLayout) {
        output.WriteRawTag(74);
        output.WriteString(Layout);
      }
      if (HasBetaCode) {
        output.WriteRawTag(82);
        output.WriteString(BetaCode);
      }
      if (HasBetaPhaseId) {
        output.WriteRawTag(88);
        output.WriteUInt32(BetaPhaseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIgnId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IgnId);
      }
      if (HasInteractionType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InteractionType);
      }
      if (HasTarget) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (HasViewName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewName);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasLayout) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Layout);
      }
      if (HasBetaCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BetaCode);
      }
      if (HasBetaPhaseId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BetaPhaseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewsInteractionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasIgnId) {
        IgnId = other.IgnId;
      }
      if (other.HasInteractionType) {
        InteractionType = other.InteractionType;
      }
      if (other.HasTarget) {
        Target = other.Target;
      }
      if (other.HasViewName) {
        ViewName = other.ViewName;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasLayout) {
        Layout = other.Layout;
      }
      if (other.HasBetaCode) {
        BetaCode = other.BetaCode;
      }
      if (other.HasBetaPhaseId) {
        BetaPhaseId = other.BetaPhaseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IgnId = input.ReadString();
            break;
          }
          case 18: {
            InteractionType = input.ReadString();
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            ViewName = input.ReadString();
            break;
          }
          case 40: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 48: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 66: {
            Url = input.ReadString();
            break;
          }
          case 74: {
            Layout = input.ReadString();
            break;
          }
          case 82: {
            BetaCode = input.ReadString();
            break;
          }
          case 88: {
            BetaPhaseId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IgnId = input.ReadString();
            break;
          }
          case 18: {
            InteractionType = input.ReadString();
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            ViewName = input.ReadString();
            break;
          }
          case 40: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 48: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 66: {
            Url = input.ReadString();
            break;
          }
          case 74: {
            Layout = input.ReadString();
            break;
          }
          case 82: {
            BetaCode = input.ReadString();
            break;
          }
          case 88: {
            BetaPhaseId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TicketRenewalFailureObjectData : pb::IMessage<TicketRenewalFailureObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TicketRenewalFailureObjectData> _parser = new pb::MessageParser<TicketRenewalFailureObjectData>(() => new TicketRenewalFailureObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TicketRenewalFailureObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketRenewalFailureObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketRenewalFailureObjectData(TicketRenewalFailureObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      failRenewalCount_ = other.failRenewalCount_;
      resultHttpCode_ = other.resultHttpCode_;
      isRememberMeTicket_ = other.isRememberMeTicket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TicketRenewalFailureObjectData Clone() {
      return new TicketRenewalFailureObjectData(this);
    }

    /// <summary>Field number for the "failRenewalCount" field.</summary>
    public const int FailRenewalCountFieldNumber = 1;
    private readonly static uint FailRenewalCountDefaultValue = 0;

    private uint failRenewalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FailRenewalCount {
      get { if ((_hasBits0 & 1) != 0) { return failRenewalCount_; } else { return FailRenewalCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        failRenewalCount_ = value;
      }
    }
    /// <summary>Gets whether the "failRenewalCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFailRenewalCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "failRenewalCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFailRenewalCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "resultHttpCode" field.</summary>
    public const int ResultHttpCodeFieldNumber = 2;
    private readonly static uint ResultHttpCodeDefaultValue = 0;

    private uint resultHttpCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResultHttpCode {
      get { if ((_hasBits0 & 2) != 0) { return resultHttpCode_; } else { return ResultHttpCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        resultHttpCode_ = value;
      }
    }
    /// <summary>Gets whether the "resultHttpCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResultHttpCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "resultHttpCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResultHttpCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "isRememberMeTicket" field.</summary>
    public const int IsRememberMeTicketFieldNumber = 3;
    private readonly static bool IsRememberMeTicketDefaultValue = false;

    private bool isRememberMeTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRememberMeTicket {
      get { if ((_hasBits0 & 4) != 0) { return isRememberMeTicket_; } else { return IsRememberMeTicketDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isRememberMeTicket_ = value;
      }
    }
    /// <summary>Gets whether the "isRememberMeTicket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsRememberMeTicket {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "isRememberMeTicket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsRememberMeTicket() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TicketRenewalFailureObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TicketRenewalFailureObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FailRenewalCount != other.FailRenewalCount) return false;
      if (ResultHttpCode != other.ResultHttpCode) return false;
      if (IsRememberMeTicket != other.IsRememberMeTicket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFailRenewalCount) hash ^= FailRenewalCount.GetHashCode();
      if (HasResultHttpCode) hash ^= ResultHttpCode.GetHashCode();
      if (HasIsRememberMeTicket) hash ^= IsRememberMeTicket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFailRenewalCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(FailRenewalCount);
      }
      if (HasResultHttpCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultHttpCode);
      }
      if (HasIsRememberMeTicket) {
        output.WriteRawTag(24);
        output.WriteBool(IsRememberMeTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFailRenewalCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(FailRenewalCount);
      }
      if (HasResultHttpCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultHttpCode);
      }
      if (HasIsRememberMeTicket) {
        output.WriteRawTag(24);
        output.WriteBool(IsRememberMeTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFailRenewalCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FailRenewalCount);
      }
      if (HasResultHttpCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultHttpCode);
      }
      if (HasIsRememberMeTicket) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TicketRenewalFailureObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasFailRenewalCount) {
        FailRenewalCount = other.FailRenewalCount;
      }
      if (other.HasResultHttpCode) {
        ResultHttpCode = other.ResultHttpCode;
      }
      if (other.HasIsRememberMeTicket) {
        IsRememberMeTicket = other.IsRememberMeTicket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FailRenewalCount = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultHttpCode = input.ReadUInt32();
            break;
          }
          case 24: {
            IsRememberMeTicket = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FailRenewalCount = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultHttpCode = input.ReadUInt32();
            break;
          }
          case 24: {
            IsRememberMeTicket = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroupActionObjectData : pb::IMessage<GroupActionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupActionObjectData> _parser = new pb::MessageParser<GroupActionObjectData>(() => new GroupActionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupActionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupActionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupActionObjectData(GroupActionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      groupId_ = other.groupId_;
      inviteeId_ = other.inviteeId_;
      groupName_ = other.groupName_;
      groupPreviousName_ = other.groupPreviousName_;
      productId_ = other.productId_;
      brandId_ = other.brandId_;
      inputSource_ = other.inputSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupActionObjectData Clone() {
      return new GroupActionObjectData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private readonly static string GroupIdDefaultValue = "";

    private string groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupId {
      get { return groupId_ ?? GroupIdDefaultValue; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "groupId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupId {
      get { return groupId_ != null; }
    }
    /// <summary>Clears the value of the "groupId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupId() {
      groupId_ = null;
    }

    /// <summary>Field number for the "inviteeId" field.</summary>
    public const int InviteeIdFieldNumber = 3;
    private readonly static string InviteeIdDefaultValue = "";

    private string inviteeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InviteeId {
      get { return inviteeId_ ?? InviteeIdDefaultValue; }
      set {
        inviteeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inviteeId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInviteeId {
      get { return inviteeId_ != null; }
    }
    /// <summary>Clears the value of the "inviteeId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInviteeId() {
      inviteeId_ = null;
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 4;
    private readonly static string GroupNameDefaultValue = "";

    private string groupName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupName {
      get { return groupName_ ?? GroupNameDefaultValue; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "groupName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupName {
      get { return groupName_ != null; }
    }
    /// <summary>Clears the value of the "groupName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupName() {
      groupName_ = null;
    }

    /// <summary>Field number for the "groupPreviousName" field.</summary>
    public const int GroupPreviousNameFieldNumber = 5;
    private readonly static string GroupPreviousNameDefaultValue = "";

    private string groupPreviousName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupPreviousName {
      get { return groupPreviousName_ ?? GroupPreviousNameDefaultValue; }
      set {
        groupPreviousName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "groupPreviousName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupPreviousName {
      get { return groupPreviousName_ != null; }
    }
    /// <summary>Clears the value of the "groupPreviousName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupPreviousName() {
      groupPreviousName_ = null;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 6;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 7;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 2) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 8;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupActionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupActionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (GroupId != other.GroupId) return false;
      if (InviteeId != other.InviteeId) return false;
      if (GroupName != other.GroupName) return false;
      if (GroupPreviousName != other.GroupPreviousName) return false;
      if (ProductId != other.ProductId) return false;
      if (BrandId != other.BrandId) return false;
      if (InputSource != other.InputSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasGroupId) hash ^= GroupId.GetHashCode();
      if (HasInviteeId) hash ^= InviteeId.GetHashCode();
      if (HasGroupName) hash ^= GroupName.GetHashCode();
      if (HasGroupPreviousName) hash ^= GroupPreviousName.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasGroupId) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (HasInviteeId) {
        output.WriteRawTag(26);
        output.WriteString(InviteeId);
      }
      if (HasGroupName) {
        output.WriteRawTag(34);
        output.WriteString(GroupName);
      }
      if (HasGroupPreviousName) {
        output.WriteRawTag(42);
        output.WriteString(GroupPreviousName);
      }
      if (HasProductId) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProductId);
      }
      if (HasBrandId) {
        output.WriteRawTag(56);
        output.WriteUInt32(BrandId);
      }
      if (HasInputSource) {
        output.WriteRawTag(66);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasGroupId) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (HasInviteeId) {
        output.WriteRawTag(26);
        output.WriteString(InviteeId);
      }
      if (HasGroupName) {
        output.WriteRawTag(34);
        output.WriteString(GroupName);
      }
      if (HasGroupPreviousName) {
        output.WriteRawTag(42);
        output.WriteString(GroupPreviousName);
      }
      if (HasProductId) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProductId);
      }
      if (HasBrandId) {
        output.WriteRawTag(56);
        output.WriteUInt32(BrandId);
      }
      if (HasInputSource) {
        output.WriteRawTag(66);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasGroupId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (HasInviteeId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteeId);
      }
      if (HasGroupName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (HasGroupPreviousName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupPreviousName);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupActionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasGroupId) {
        GroupId = other.GroupId;
      }
      if (other.HasInviteeId) {
        InviteeId = other.InviteeId;
      }
      if (other.HasGroupName) {
        GroupName = other.GroupName;
      }
      if (other.HasGroupPreviousName) {
        GroupPreviousName = other.GroupPreviousName;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            InviteeId = input.ReadString();
            break;
          }
          case 34: {
            GroupName = input.ReadString();
            break;
          }
          case 42: {
            GroupPreviousName = input.ReadString();
            break;
          }
          case 48: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 56: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 66: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            InviteeId = input.ReadString();
            break;
          }
          case 34: {
            GroupName = input.ReadString();
            break;
          }
          case 42: {
            GroupPreviousName = input.ReadString();
            break;
          }
          case 48: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 56: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 66: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IngameShopImpressionObjectData : pb::IMessage<IngameShopImpressionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IngameShopImpressionObjectData> _parser = new pb::MessageParser<IngameShopImpressionObjectData>(() => new IngameShopImpressionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IngameShopImpressionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngameShopImpressionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngameShopImpressionObjectData(IngameShopImpressionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      assetUrl_ = other.assetUrl_;
      viewName_ = other.viewName_;
      gameId_ = other.gameId_;
      brandId_ = other.brandId_;
      shopId_ = other.shopId_;
      marketId_ = other.marketId_;
      countryId_ = other.countryId_;
      productId_ = other.productId_;
      shopProductId_ = other.shopProductId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngameShopImpressionObjectData Clone() {
      return new IngameShopImpressionObjectData(this);
    }

    /// <summary>Field number for the "assetUrl" field.</summary>
    public const int AssetUrlFieldNumber = 1;
    private readonly static string AssetUrlDefaultValue = "";

    private string assetUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AssetUrl {
      get { return assetUrl_ ?? AssetUrlDefaultValue; }
      set {
        assetUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "assetUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAssetUrl {
      get { return assetUrl_ != null; }
    }
    /// <summary>Clears the value of the "assetUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAssetUrl() {
      assetUrl_ = null;
    }

    /// <summary>Field number for the "viewName" field.</summary>
    public const int ViewNameFieldNumber = 2;
    private readonly static string ViewNameDefaultValue = "";

    private string viewName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewName {
      get { return viewName_ ?? ViewNameDefaultValue; }
      set {
        viewName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "viewName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewName {
      get { return viewName_ != null; }
    }
    /// <summary>Clears the value of the "viewName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewName() {
      viewName_ = null;
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 3;
    private readonly static uint GameIdDefaultValue = 0;

    private uint gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "gameId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gameId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 4;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 2) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "shopId" field.</summary>
    public const int ShopIdFieldNumber = 5;
    private readonly static string ShopIdDefaultValue = "";

    private string shopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShopId {
      get { return shopId_ ?? ShopIdDefaultValue; }
      set {
        shopId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shopId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopId {
      get { return shopId_ != null; }
    }
    /// <summary>Clears the value of the "shopId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopId() {
      shopId_ = null;
    }

    /// <summary>Field number for the "marketId" field.</summary>
    public const int MarketIdFieldNumber = 6;
    private readonly static string MarketIdDefaultValue = "";

    private string marketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_ ?? MarketIdDefaultValue; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "marketId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketId {
      get { return marketId_ != null; }
    }
    /// <summary>Clears the value of the "marketId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketId() {
      marketId_ = null;
    }

    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 7;
    private readonly static string CountryIdDefaultValue = "";

    private string countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CountryId {
      get { return countryId_ ?? CountryIdDefaultValue; }
      set {
        countryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "countryId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCountryId {
      get { return countryId_ != null; }
    }
    /// <summary>Clears the value of the "countryId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCountryId() {
      countryId_ = null;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 8;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 4) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "shopProductId" field.</summary>
    public const int ShopProductIdFieldNumber = 9;
    private readonly static string ShopProductIdDefaultValue = "";

    private string shopProductId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShopProductId {
      get { return shopProductId_ ?? ShopProductIdDefaultValue; }
      set {
        shopProductId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shopProductId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopProductId {
      get { return shopProductId_ != null; }
    }
    /// <summary>Clears the value of the "shopProductId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopProductId() {
      shopProductId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IngameShopImpressionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IngameShopImpressionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssetUrl != other.AssetUrl) return false;
      if (ViewName != other.ViewName) return false;
      if (GameId != other.GameId) return false;
      if (BrandId != other.BrandId) return false;
      if (ShopId != other.ShopId) return false;
      if (MarketId != other.MarketId) return false;
      if (CountryId != other.CountryId) return false;
      if (ProductId != other.ProductId) return false;
      if (ShopProductId != other.ShopProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAssetUrl) hash ^= AssetUrl.GetHashCode();
      if (HasViewName) hash ^= ViewName.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasShopId) hash ^= ShopId.GetHashCode();
      if (HasMarketId) hash ^= MarketId.GetHashCode();
      if (HasCountryId) hash ^= CountryId.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasShopProductId) hash ^= ShopProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAssetUrl) {
        output.WriteRawTag(10);
        output.WriteString(AssetUrl);
      }
      if (HasViewName) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasGameId) {
        output.WriteRawTag(24);
        output.WriteUInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasShopId) {
        output.WriteRawTag(42);
        output.WriteString(ShopId);
      }
      if (HasMarketId) {
        output.WriteRawTag(50);
        output.WriteString(MarketId);
      }
      if (HasCountryId) {
        output.WriteRawTag(58);
        output.WriteString(CountryId);
      }
      if (HasProductId) {
        output.WriteRawTag(64);
        output.WriteUInt32(ProductId);
      }
      if (HasShopProductId) {
        output.WriteRawTag(74);
        output.WriteString(ShopProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAssetUrl) {
        output.WriteRawTag(10);
        output.WriteString(AssetUrl);
      }
      if (HasViewName) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasGameId) {
        output.WriteRawTag(24);
        output.WriteUInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(32);
        output.WriteUInt32(BrandId);
      }
      if (HasShopId) {
        output.WriteRawTag(42);
        output.WriteString(ShopId);
      }
      if (HasMarketId) {
        output.WriteRawTag(50);
        output.WriteString(MarketId);
      }
      if (HasCountryId) {
        output.WriteRawTag(58);
        output.WriteString(CountryId);
      }
      if (HasProductId) {
        output.WriteRawTag(64);
        output.WriteUInt32(ProductId);
      }
      if (HasShopProductId) {
        output.WriteRawTag(74);
        output.WriteString(ShopProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAssetUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetUrl);
      }
      if (HasViewName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewName);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameId);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasShopId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopId);
      }
      if (HasMarketId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (HasCountryId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryId);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasShopProductId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IngameShopImpressionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAssetUrl) {
        AssetUrl = other.AssetUrl;
      }
      if (other.HasViewName) {
        ViewName = other.ViewName;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasShopId) {
        ShopId = other.ShopId;
      }
      if (other.HasMarketId) {
        MarketId = other.MarketId;
      }
      if (other.HasCountryId) {
        CountryId = other.CountryId;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasShopProductId) {
        ShopProductId = other.ShopProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AssetUrl = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 24: {
            GameId = input.ReadUInt32();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 42: {
            ShopId = input.ReadString();
            break;
          }
          case 50: {
            MarketId = input.ReadString();
            break;
          }
          case 58: {
            CountryId = input.ReadString();
            break;
          }
          case 64: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 74: {
            ShopProductId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AssetUrl = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 24: {
            GameId = input.ReadUInt32();
            break;
          }
          case 32: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 42: {
            ShopId = input.ReadString();
            break;
          }
          case 50: {
            MarketId = input.ReadString();
            break;
          }
          case 58: {
            CountryId = input.ReadString();
            break;
          }
          case 64: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 74: {
            ShopProductId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IngameShopActionObjectData : pb::IMessage<IngameShopActionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IngameShopActionObjectData> _parser = new pb::MessageParser<IngameShopActionObjectData>(() => new IngameShopActionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IngameShopActionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngameShopActionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngameShopActionObjectData(IngameShopActionObjectData other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      brandId_ = other.brandId_;
      shopId_ = other.shopId_;
      marketId_ = other.marketId_;
      countryId_ = other.countryId_;
      productId_ = other.productId_;
      shopProductId_ = other.shopProductId_;
      pspId_ = other.pspId_;
      promoId_ = other.promoId_;
      filterId_ = other.filterId_;
      itemCategory_ = other.itemCategory_;
      result_ = other.result_;
      action_ = other.action_;
      source_ = other.source_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngameShopActionObjectData Clone() {
      return new IngameShopActionObjectData(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static uint GameIdDefaultValue = 0;

    private uint gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "gameId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gameId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "brandId" field.</summary>
    public const int BrandIdFieldNumber = 2;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 2) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brandId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "brandId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "shopId" field.</summary>
    public const int ShopIdFieldNumber = 3;
    private readonly static string ShopIdDefaultValue = "";

    private string shopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShopId {
      get { return shopId_ ?? ShopIdDefaultValue; }
      set {
        shopId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shopId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopId {
      get { return shopId_ != null; }
    }
    /// <summary>Clears the value of the "shopId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopId() {
      shopId_ = null;
    }

    /// <summary>Field number for the "marketId" field.</summary>
    public const int MarketIdFieldNumber = 4;
    private readonly static string MarketIdDefaultValue = "";

    private string marketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarketId {
      get { return marketId_ ?? MarketIdDefaultValue; }
      set {
        marketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "marketId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketId {
      get { return marketId_ != null; }
    }
    /// <summary>Clears the value of the "marketId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketId() {
      marketId_ = null;
    }

    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 5;
    private readonly static string CountryIdDefaultValue = "";

    private string countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CountryId {
      get { return countryId_ ?? CountryIdDefaultValue; }
      set {
        countryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "countryId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCountryId {
      get { return countryId_ != null; }
    }
    /// <summary>Clears the value of the "countryId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCountryId() {
      countryId_ = null;
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 6;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 4) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "shopProductId" field.</summary>
    public const int ShopProductIdFieldNumber = 7;
    private readonly static string ShopProductIdDefaultValue = "";

    private string shopProductId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShopProductId {
      get { return shopProductId_ ?? ShopProductIdDefaultValue; }
      set {
        shopProductId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shopProductId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShopProductId {
      get { return shopProductId_ != null; }
    }
    /// <summary>Clears the value of the "shopProductId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShopProductId() {
      shopProductId_ = null;
    }

    /// <summary>Field number for the "pspId" field.</summary>
    public const int PspIdFieldNumber = 8;
    private readonly static string PspIdDefaultValue = "";

    private string pspId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PspId {
      get { return pspId_ ?? PspIdDefaultValue; }
      set {
        pspId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pspId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPspId {
      get { return pspId_ != null; }
    }
    /// <summary>Clears the value of the "pspId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPspId() {
      pspId_ = null;
    }

    /// <summary>Field number for the "promoId" field.</summary>
    public const int PromoIdFieldNumber = 9;
    private readonly static string PromoIdDefaultValue = "";

    private string promoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PromoId {
      get { return promoId_ ?? PromoIdDefaultValue; }
      set {
        promoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "promoId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPromoId {
      get { return promoId_ != null; }
    }
    /// <summary>Clears the value of the "promoId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPromoId() {
      promoId_ = null;
    }

    /// <summary>Field number for the "filterId" field.</summary>
    public const int FilterIdFieldNumber = 10;
    private readonly static uint FilterIdDefaultValue = 0;

    private uint filterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FilterId {
      get { if ((_hasBits0 & 8) != 0) { return filterId_; } else { return FilterIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        filterId_ = value;
      }
    }
    /// <summary>Gets whether the "filterId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilterId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "filterId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilterId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "itemCategory" field.</summary>
    public const int ItemCategoryFieldNumber = 11;
    private readonly static string ItemCategoryDefaultValue = "";

    private string itemCategory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemCategory {
      get { return itemCategory_ ?? ItemCategoryDefaultValue; }
      set {
        itemCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "itemCategory" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemCategory {
      get { return itemCategory_ != null; }
    }
    /// <summary>Clears the value of the "itemCategory" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemCategory() {
      itemCategory_ = null;
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 12;
    private readonly static bool ResultDefaultValue = false;

    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Result {
      get { if ((_hasBits0 & 16) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 16;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 13;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 14;
    private readonly static string SourceDefaultValue = "";

    private string source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Source {
      get { return source_ ?? SourceDefaultValue; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSource {
      get { return source_ != null; }
    }
    /// <summary>Clears the value of the "source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IngameShopActionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IngameShopActionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (BrandId != other.BrandId) return false;
      if (ShopId != other.ShopId) return false;
      if (MarketId != other.MarketId) return false;
      if (CountryId != other.CountryId) return false;
      if (ProductId != other.ProductId) return false;
      if (ShopProductId != other.ShopProductId) return false;
      if (PspId != other.PspId) return false;
      if (PromoId != other.PromoId) return false;
      if (FilterId != other.FilterId) return false;
      if (ItemCategory != other.ItemCategory) return false;
      if (Result != other.Result) return false;
      if (Action != other.Action) return false;
      if (Source != other.Source) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasShopId) hash ^= ShopId.GetHashCode();
      if (HasMarketId) hash ^= MarketId.GetHashCode();
      if (HasCountryId) hash ^= CountryId.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasShopProductId) hash ^= ShopProductId.GetHashCode();
      if (HasPspId) hash ^= PspId.GetHashCode();
      if (HasPromoId) hash ^= PromoId.GetHashCode();
      if (HasFilterId) hash ^= FilterId.GetHashCode();
      if (HasItemCategory) hash ^= ItemCategory.GetHashCode();
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasSource) hash ^= Source.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(16);
        output.WriteUInt32(BrandId);
      }
      if (HasShopId) {
        output.WriteRawTag(26);
        output.WriteString(ShopId);
      }
      if (HasMarketId) {
        output.WriteRawTag(34);
        output.WriteString(MarketId);
      }
      if (HasCountryId) {
        output.WriteRawTag(42);
        output.WriteString(CountryId);
      }
      if (HasProductId) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProductId);
      }
      if (HasShopProductId) {
        output.WriteRawTag(58);
        output.WriteString(ShopProductId);
      }
      if (HasPspId) {
        output.WriteRawTag(66);
        output.WriteString(PspId);
      }
      if (HasPromoId) {
        output.WriteRawTag(74);
        output.WriteString(PromoId);
      }
      if (HasFilterId) {
        output.WriteRawTag(80);
        output.WriteUInt32(FilterId);
      }
      if (HasItemCategory) {
        output.WriteRawTag(90);
        output.WriteString(ItemCategory);
      }
      if (HasResult) {
        output.WriteRawTag(96);
        output.WriteBool(Result);
      }
      if (HasAction) {
        output.WriteRawTag(106);
        output.WriteString(Action);
      }
      if (HasSource) {
        output.WriteRawTag(114);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameId);
      }
      if (HasBrandId) {
        output.WriteRawTag(16);
        output.WriteUInt32(BrandId);
      }
      if (HasShopId) {
        output.WriteRawTag(26);
        output.WriteString(ShopId);
      }
      if (HasMarketId) {
        output.WriteRawTag(34);
        output.WriteString(MarketId);
      }
      if (HasCountryId) {
        output.WriteRawTag(42);
        output.WriteString(CountryId);
      }
      if (HasProductId) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProductId);
      }
      if (HasShopProductId) {
        output.WriteRawTag(58);
        output.WriteString(ShopProductId);
      }
      if (HasPspId) {
        output.WriteRawTag(66);
        output.WriteString(PspId);
      }
      if (HasPromoId) {
        output.WriteRawTag(74);
        output.WriteString(PromoId);
      }
      if (HasFilterId) {
        output.WriteRawTag(80);
        output.WriteUInt32(FilterId);
      }
      if (HasItemCategory) {
        output.WriteRawTag(90);
        output.WriteString(ItemCategory);
      }
      if (HasResult) {
        output.WriteRawTag(96);
        output.WriteBool(Result);
      }
      if (HasAction) {
        output.WriteRawTag(106);
        output.WriteString(Action);
      }
      if (HasSource) {
        output.WriteRawTag(114);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameId);
      }
      if (HasBrandId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasShopId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopId);
      }
      if (HasMarketId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketId);
      }
      if (HasCountryId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryId);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasShopProductId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopProductId);
      }
      if (HasPspId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PspId);
      }
      if (HasPromoId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PromoId);
      }
      if (HasFilterId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FilterId);
      }
      if (HasItemCategory) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemCategory);
      }
      if (HasResult) {
        size += 1 + 1;
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IngameShopActionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasShopId) {
        ShopId = other.ShopId;
      }
      if (other.HasMarketId) {
        MarketId = other.MarketId;
      }
      if (other.HasCountryId) {
        CountryId = other.CountryId;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasShopProductId) {
        ShopProductId = other.ShopProductId;
      }
      if (other.HasPspId) {
        PspId = other.PspId;
      }
      if (other.HasPromoId) {
        PromoId = other.PromoId;
      }
      if (other.HasFilterId) {
        FilterId = other.FilterId;
      }
      if (other.HasItemCategory) {
        ItemCategory = other.ItemCategory;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasSource) {
        Source = other.Source;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt32();
            break;
          }
          case 16: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 26: {
            ShopId = input.ReadString();
            break;
          }
          case 34: {
            MarketId = input.ReadString();
            break;
          }
          case 42: {
            CountryId = input.ReadString();
            break;
          }
          case 48: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 58: {
            ShopProductId = input.ReadString();
            break;
          }
          case 66: {
            PspId = input.ReadString();
            break;
          }
          case 74: {
            PromoId = input.ReadString();
            break;
          }
          case 80: {
            FilterId = input.ReadUInt32();
            break;
          }
          case 90: {
            ItemCategory = input.ReadString();
            break;
          }
          case 96: {
            Result = input.ReadBool();
            break;
          }
          case 106: {
            Action = input.ReadString();
            break;
          }
          case 114: {
            Source = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt32();
            break;
          }
          case 16: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 26: {
            ShopId = input.ReadString();
            break;
          }
          case 34: {
            MarketId = input.ReadString();
            break;
          }
          case 42: {
            CountryId = input.ReadString();
            break;
          }
          case 48: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 58: {
            ShopProductId = input.ReadString();
            break;
          }
          case 66: {
            PspId = input.ReadString();
            break;
          }
          case 74: {
            PromoId = input.ReadString();
            break;
          }
          case 80: {
            FilterId = input.ReadUInt32();
            break;
          }
          case 90: {
            ItemCategory = input.ReadString();
            break;
          }
          case 96: {
            Result = input.ReadBool();
            break;
          }
          case 106: {
            Action = input.ReadString();
            break;
          }
          case 114: {
            Source = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiagnosticObjectData : pb::IMessage<DiagnosticObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiagnosticObjectData> _parser = new pb::MessageParser<DiagnosticObjectData>(() => new DiagnosticObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiagnosticObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiagnosticObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiagnosticObjectData(DiagnosticObjectData other) : this() {
      customData_ = other.customData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiagnosticObjectData Clone() {
      return new DiagnosticObjectData(this);
    }

    /// <summary>Field number for the "customData" field.</summary>
    public const int CustomDataFieldNumber = 2;
    private readonly static string CustomDataDefaultValue = "";

    private string customData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomData {
      get { return customData_ ?? CustomDataDefaultValue; }
      set {
        customData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "customData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCustomData {
      get { return customData_ != null; }
    }
    /// <summary>Clears the value of the "customData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCustomData() {
      customData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiagnosticObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiagnosticObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomData != other.CustomData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCustomData) hash ^= CustomData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCustomData) {
        output.WriteRawTag(18);
        output.WriteString(CustomData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCustomData) {
        output.WriteRawTag(18);
        output.WriteString(CustomData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCustomData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiagnosticObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasCustomData) {
        CustomData = other.CustomData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            CustomData = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            CustomData = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EmailVerificationObjectData : pb::IMessage<EmailVerificationObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EmailVerificationObjectData> _parser = new pb::MessageParser<EmailVerificationObjectData>(() => new EmailVerificationObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EmailVerificationObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmailVerificationObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmailVerificationObjectData(EmailVerificationObjectData other) : this() {
      action_ = other.action_;
      inputSource_ = other.inputSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmailVerificationObjectData Clone() {
      return new EmailVerificationObjectData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 2;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EmailVerificationObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EmailVerificationObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (InputSource != other.InputSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasInputSource) {
        output.WriteRawTag(18);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasInputSource) {
        output.WriteRawTag(18);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EmailVerificationObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TwoFAActivationObjectData : pb::IMessage<TwoFAActivationObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TwoFAActivationObjectData> _parser = new pb::MessageParser<TwoFAActivationObjectData>(() => new TwoFAActivationObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TwoFAActivationObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TwoFAActivationObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TwoFAActivationObjectData(TwoFAActivationObjectData other) : this() {
      action_ = other.action_;
      inputSource_ = other.inputSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TwoFAActivationObjectData Clone() {
      return new TwoFAActivationObjectData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 2;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TwoFAActivationObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TwoFAActivationObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (InputSource != other.InputSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasInputSource) {
        output.WriteRawTag(18);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasInputSource) {
        output.WriteRawTag(18);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TwoFAActivationObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PhoneSecurityObjectData : pb::IMessage<PhoneSecurityObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PhoneSecurityObjectData> _parser = new pb::MessageParser<PhoneSecurityObjectData>(() => new PhoneSecurityObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PhoneSecurityObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhoneSecurityObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhoneSecurityObjectData(PhoneSecurityObjectData other) : this() {
      action_ = other.action_;
      inputSource_ = other.inputSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhoneSecurityObjectData Clone() {
      return new PhoneSecurityObjectData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 2;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PhoneSecurityObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PhoneSecurityObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (InputSource != other.InputSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasInputSource) {
        output.WriteRawTag(18);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasInputSource) {
        output.WriteRawTag(18);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PhoneSecurityObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SendSmsTrackEventActionObjectData : pb::IMessage<SendSmsTrackEventActionObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendSmsTrackEventActionObjectData> _parser = new pb::MessageParser<SendSmsTrackEventActionObjectData>(() => new SendSmsTrackEventActionObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SendSmsTrackEventActionObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SendSmsTrackEventActionObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SendSmsTrackEventActionObjectData(SendSmsTrackEventActionObjectData other) : this() {
      action_ = other.action_;
      inputSource_ = other.inputSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SendSmsTrackEventActionObjectData Clone() {
      return new SendSmsTrackEventActionObjectData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 2;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SendSmsTrackEventActionObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SendSmsTrackEventActionObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (InputSource != other.InputSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasInputSource) {
        output.WriteRawTag(18);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasInputSource) {
        output.WriteRawTag(18);
        output.WriteString(InputSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SendSmsTrackEventActionObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            InputSource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PopUpDisplayEventObjectData : pb::IMessage<PopUpDisplayEventObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PopUpDisplayEventObjectData> _parser = new pb::MessageParser<PopUpDisplayEventObjectData>(() => new PopUpDisplayEventObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PopUpDisplayEventObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopUpDisplayEventObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopUpDisplayEventObjectData(PopUpDisplayEventObjectData other) : this() {
      popUpName_ = other.popUpName_;
      viewName_ = other.viewName_;
      finalState_ = other.finalState_;
      contentId_ = other.contentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PopUpDisplayEventObjectData Clone() {
      return new PopUpDisplayEventObjectData(this);
    }

    /// <summary>Field number for the "popUpName" field.</summary>
    public const int PopUpNameFieldNumber = 1;
    private readonly static string PopUpNameDefaultValue = "";

    private string popUpName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PopUpName {
      get { return popUpName_ ?? PopUpNameDefaultValue; }
      set {
        popUpName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "popUpName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPopUpName {
      get { return popUpName_ != null; }
    }
    /// <summary>Clears the value of the "popUpName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPopUpName() {
      popUpName_ = null;
    }

    /// <summary>Field number for the "viewName" field.</summary>
    public const int ViewNameFieldNumber = 2;
    private readonly static string ViewNameDefaultValue = "";

    private string viewName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewName {
      get { return viewName_ ?? ViewNameDefaultValue; }
      set {
        viewName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "viewName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewName {
      get { return viewName_ != null; }
    }
    /// <summary>Clears the value of the "viewName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewName() {
      viewName_ = null;
    }

    /// <summary>Field number for the "finalState" field.</summary>
    public const int FinalStateFieldNumber = 3;
    private readonly static string FinalStateDefaultValue = "";

    private string finalState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FinalState {
      get { return finalState_ ?? FinalStateDefaultValue; }
      set {
        finalState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "finalState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFinalState {
      get { return finalState_ != null; }
    }
    /// <summary>Clears the value of the "finalState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFinalState() {
      finalState_ = null;
    }

    /// <summary>Field number for the "contentId" field.</summary>
    public const int ContentIdFieldNumber = 4;
    private readonly static string ContentIdDefaultValue = "";

    private string contentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentId {
      get { return contentId_ ?? ContentIdDefaultValue; }
      set {
        contentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contentId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContentId {
      get { return contentId_ != null; }
    }
    /// <summary>Clears the value of the "contentId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContentId() {
      contentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PopUpDisplayEventObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PopUpDisplayEventObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PopUpName != other.PopUpName) return false;
      if (ViewName != other.ViewName) return false;
      if (FinalState != other.FinalState) return false;
      if (ContentId != other.ContentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPopUpName) hash ^= PopUpName.GetHashCode();
      if (HasViewName) hash ^= ViewName.GetHashCode();
      if (HasFinalState) hash ^= FinalState.GetHashCode();
      if (HasContentId) hash ^= ContentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPopUpName) {
        output.WriteRawTag(10);
        output.WriteString(PopUpName);
      }
      if (HasViewName) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasFinalState) {
        output.WriteRawTag(26);
        output.WriteString(FinalState);
      }
      if (HasContentId) {
        output.WriteRawTag(34);
        output.WriteString(ContentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPopUpName) {
        output.WriteRawTag(10);
        output.WriteString(PopUpName);
      }
      if (HasViewName) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasFinalState) {
        output.WriteRawTag(26);
        output.WriteString(FinalState);
      }
      if (HasContentId) {
        output.WriteRawTag(34);
        output.WriteString(ContentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPopUpName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PopUpName);
      }
      if (HasViewName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewName);
      }
      if (HasFinalState) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FinalState);
      }
      if (HasContentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PopUpDisplayEventObjectData other) {
      if (other == null) {
        return;
      }
      if (other.HasPopUpName) {
        PopUpName = other.PopUpName;
      }
      if (other.HasViewName) {
        ViewName = other.ViewName;
      }
      if (other.HasFinalState) {
        FinalState = other.FinalState;
      }
      if (other.HasContentId) {
        ContentId = other.ContentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PopUpName = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 26: {
            FinalState = input.ReadString();
            break;
          }
          case 34: {
            ContentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PopUpName = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 26: {
            FinalState = input.ReadString();
            break;
          }
          case 34: {
            ContentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TrustedDeviceActionData : pb::IMessage<TrustedDeviceActionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrustedDeviceActionData> _parser = new pb::MessageParser<TrustedDeviceActionData>(() => new TrustedDeviceActionData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrustedDeviceActionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrustedDeviceActionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrustedDeviceActionData(TrustedDeviceActionData other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      machineId_ = other.machineId_;
      defaultFriendlyName_ = other.defaultFriendlyName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrustedDeviceActionData Clone() {
      return new TrustedDeviceActionData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "machineId" field.</summary>
    public const int MachineIdFieldNumber = 2;
    private readonly static string MachineIdDefaultValue = "";

    private string machineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineId {
      get { return machineId_ ?? MachineIdDefaultValue; }
      set {
        machineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "machineId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMachineId {
      get { return machineId_ != null; }
    }
    /// <summary>Clears the value of the "machineId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMachineId() {
      machineId_ = null;
    }

    /// <summary>Field number for the "defaultFriendlyName" field.</summary>
    public const int DefaultFriendlyNameFieldNumber = 3;
    private readonly static bool DefaultFriendlyNameDefaultValue = false;

    private bool defaultFriendlyName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DefaultFriendlyName {
      get { if ((_hasBits0 & 1) != 0) { return defaultFriendlyName_; } else { return DefaultFriendlyNameDefaultValue; } }
      set {
        _hasBits0 |= 1;
        defaultFriendlyName_ = value;
      }
    }
    /// <summary>Gets whether the "defaultFriendlyName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultFriendlyName {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "defaultFriendlyName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultFriendlyName() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrustedDeviceActionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrustedDeviceActionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (MachineId != other.MachineId) return false;
      if (DefaultFriendlyName != other.DefaultFriendlyName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasMachineId) hash ^= MachineId.GetHashCode();
      if (HasDefaultFriendlyName) hash ^= DefaultFriendlyName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasMachineId) {
        output.WriteRawTag(18);
        output.WriteString(MachineId);
      }
      if (HasDefaultFriendlyName) {
        output.WriteRawTag(24);
        output.WriteBool(DefaultFriendlyName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasMachineId) {
        output.WriteRawTag(18);
        output.WriteString(MachineId);
      }
      if (HasDefaultFriendlyName) {
        output.WriteRawTag(24);
        output.WriteBool(DefaultFriendlyName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasMachineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineId);
      }
      if (HasDefaultFriendlyName) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrustedDeviceActionData other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasMachineId) {
        MachineId = other.MachineId;
      }
      if (other.HasDefaultFriendlyName) {
        DefaultFriendlyName = other.DefaultFriendlyName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            MachineId = input.ReadString();
            break;
          }
          case 24: {
            DefaultFriendlyName = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            MachineId = input.ReadString();
            break;
          }
          case 24: {
            DefaultFriendlyName = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlayHostSessionStreamingStartData : pb::IMessage<SharePlayHostSessionStreamingStartData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlayHostSessionStreamingStartData> _parser = new pb::MessageParser<SharePlayHostSessionStreamingStartData>(() => new SharePlayHostSessionStreamingStartData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlayHostSessionStreamingStartData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSessionStreamingStartData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSessionStreamingStartData(SharePlayHostSessionStreamingStartData other) : this() {
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      spaceIdGame_ = other.spaceIdGame_;
      streamingService_ = other.streamingService_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSessionStreamingStartData Clone() {
      return new SharePlayHostSessionStreamingStartData(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 3;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    /// <summary>Field number for the "streamingService" field.</summary>
    public const int StreamingServiceFieldNumber = 4;
    private readonly static string StreamingServiceDefaultValue = "";

    private string streamingService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamingService {
      get { return streamingService_ ?? StreamingServiceDefaultValue; }
      set {
        streamingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "streamingService" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamingService {
      get { return streamingService_ != null; }
    }
    /// <summary>Clears the value of the "streamingService" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingService() {
      streamingService_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlayHostSessionStreamingStartData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlayHostSessionStreamingStartData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      if (StreamingService != other.StreamingService) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (HasStreamingService) hash ^= StreamingService.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasStreamingService) {
        output.WriteRawTag(34);
        output.WriteString(StreamingService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasStreamingService) {
        output.WriteRawTag(34);
        output.WriteString(StreamingService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (HasStreamingService) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamingService);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlayHostSessionStreamingStartData other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      if (other.HasStreamingService) {
        StreamingService = other.StreamingService;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 34: {
            StreamingService = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 34: {
            StreamingService = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlayHostSessionStreamingStopData : pb::IMessage<SharePlayHostSessionStreamingStopData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlayHostSessionStreamingStopData> _parser = new pb::MessageParser<SharePlayHostSessionStreamingStopData>(() => new SharePlayHostSessionStreamingStopData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlayHostSessionStreamingStopData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSessionStreamingStopData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSessionStreamingStopData(SharePlayHostSessionStreamingStopData other) : this() {
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      reason_ = other.reason_;
      spaceIdGame_ = other.spaceIdGame_;
      streamingService_ = other.streamingService_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSessionStreamingStopData Clone() {
      return new SharePlayHostSessionStreamingStopData(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 3;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 4;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    /// <summary>Field number for the "streamingService" field.</summary>
    public const int StreamingServiceFieldNumber = 5;
    private readonly static string StreamingServiceDefaultValue = "";

    private string streamingService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamingService {
      get { return streamingService_ ?? StreamingServiceDefaultValue; }
      set {
        streamingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "streamingService" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamingService {
      get { return streamingService_ != null; }
    }
    /// <summary>Clears the value of the "streamingService" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingService() {
      streamingService_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlayHostSessionStreamingStopData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlayHostSessionStreamingStopData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (Reason != other.Reason) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      if (StreamingService != other.StreamingService) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (HasStreamingService) hash ^= StreamingService.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasReason) {
        output.WriteRawTag(26);
        output.WriteString(Reason);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(34);
        output.WriteString(SpaceIdGame);
      }
      if (HasStreamingService) {
        output.WriteRawTag(42);
        output.WriteString(StreamingService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasReason) {
        output.WriteRawTag(26);
        output.WriteString(Reason);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(34);
        output.WriteString(SpaceIdGame);
      }
      if (HasStreamingService) {
        output.WriteRawTag(42);
        output.WriteString(StreamingService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (HasStreamingService) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamingService);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlayHostSessionStreamingStopData other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      if (other.HasStreamingService) {
        StreamingService = other.StreamingService;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            Reason = input.ReadString();
            break;
          }
          case 34: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 42: {
            StreamingService = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            Reason = input.ReadString();
            break;
          }
          case 34: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 42: {
            StreamingService = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlayOnboardingData : pb::IMessage<SharePlayOnboardingData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlayOnboardingData> _parser = new pb::MessageParser<SharePlayOnboardingData>(() => new SharePlayOnboardingData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlayOnboardingData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayOnboardingData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayOnboardingData(SharePlayOnboardingData other) : this() {
      _hasBits0 = other._hasBits0;
      sourceTrackingData_ = other.sourceTrackingData_;
      reason_ = other.reason_;
      step_ = other.step_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayOnboardingData Clone() {
      return new SharePlayOnboardingData(this);
    }

    /// <summary>Field number for the "sourceTrackingData" field.</summary>
    public const int SourceTrackingDataFieldNumber = 1;
    private readonly static string SourceTrackingDataDefaultValue = "";

    private string sourceTrackingData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceTrackingData {
      get { return sourceTrackingData_ ?? SourceTrackingDataDefaultValue; }
      set {
        sourceTrackingData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourceTrackingData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceTrackingData {
      get { return sourceTrackingData_ != null; }
    }
    /// <summary>Clears the value of the "sourceTrackingData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceTrackingData() {
      sourceTrackingData_ = null;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 3;
    private readonly static uint StepDefaultValue = 0;

    private uint step_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Step {
      get { if ((_hasBits0 & 1) != 0) { return step_; } else { return StepDefaultValue; } }
      set {
        _hasBits0 |= 1;
        step_ = value;
      }
    }
    /// <summary>Gets whether the "step" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStep {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "step" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStep() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlayOnboardingData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlayOnboardingData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceTrackingData != other.SourceTrackingData) return false;
      if (Reason != other.Reason) return false;
      if (Step != other.Step) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSourceTrackingData) hash ^= SourceTrackingData.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasStep) hash ^= Step.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSourceTrackingData) {
        output.WriteRawTag(10);
        output.WriteString(SourceTrackingData);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (HasStep) {
        output.WriteRawTag(24);
        output.WriteUInt32(Step);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSourceTrackingData) {
        output.WriteRawTag(10);
        output.WriteString(SourceTrackingData);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (HasStep) {
        output.WriteRawTag(24);
        output.WriteUInt32(Step);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSourceTrackingData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceTrackingData);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasStep) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Step);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlayOnboardingData other) {
      if (other == null) {
        return;
      }
      if (other.HasSourceTrackingData) {
        SourceTrackingData = other.SourceTrackingData;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasStep) {
        Step = other.Step;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceTrackingData = input.ReadString();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 24: {
            Step = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SourceTrackingData = input.ReadString();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 24: {
            Step = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlayHostPageData : pb::IMessage<SharePlayHostPageData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlayHostPageData> _parser = new pb::MessageParser<SharePlayHostPageData>(() => new SharePlayHostPageData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlayHostPageData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostPageData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostPageData(SharePlayHostPageData other) : this() {
      sourceTrackingData_ = other.sourceTrackingData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostPageData Clone() {
      return new SharePlayHostPageData(this);
    }

    /// <summary>Field number for the "sourceTrackingData" field.</summary>
    public const int SourceTrackingDataFieldNumber = 1;
    private readonly static string SourceTrackingDataDefaultValue = "";

    private string sourceTrackingData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceTrackingData {
      get { return sourceTrackingData_ ?? SourceTrackingDataDefaultValue; }
      set {
        sourceTrackingData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourceTrackingData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceTrackingData {
      get { return sourceTrackingData_ != null; }
    }
    /// <summary>Clears the value of the "sourceTrackingData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceTrackingData() {
      sourceTrackingData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlayHostPageData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlayHostPageData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceTrackingData != other.SourceTrackingData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSourceTrackingData) hash ^= SourceTrackingData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSourceTrackingData) {
        output.WriteRawTag(10);
        output.WriteString(SourceTrackingData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSourceTrackingData) {
        output.WriteRawTag(10);
        output.WriteString(SourceTrackingData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSourceTrackingData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceTrackingData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlayHostPageData other) {
      if (other == null) {
        return;
      }
      if (other.HasSourceTrackingData) {
        SourceTrackingData = other.SourceTrackingData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceTrackingData = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SourceTrackingData = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlayGuestInvitationData : pb::IMessage<SharePlayGuestInvitationData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlayGuestInvitationData> _parser = new pb::MessageParser<SharePlayGuestInvitationData>(() => new SharePlayGuestInvitationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlayGuestInvitationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayGuestInvitationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayGuestInvitationData(SharePlayGuestInvitationData other) : this() {
      invitationSource_ = other.invitationSource_;
      invitationStatus_ = other.invitationStatus_;
      invitationSentTime_ = other.invitationSentTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayGuestInvitationData Clone() {
      return new SharePlayGuestInvitationData(this);
    }

    /// <summary>Field number for the "invitationSource" field.</summary>
    public const int InvitationSourceFieldNumber = 1;
    private readonly static string InvitationSourceDefaultValue = "";

    private string invitationSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvitationSource {
      get { return invitationSource_ ?? InvitationSourceDefaultValue; }
      set {
        invitationSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "invitationSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationSource {
      get { return invitationSource_ != null; }
    }
    /// <summary>Clears the value of the "invitationSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationSource() {
      invitationSource_ = null;
    }

    /// <summary>Field number for the "invitationStatus" field.</summary>
    public const int InvitationStatusFieldNumber = 2;
    private readonly static string InvitationStatusDefaultValue = "";

    private string invitationStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvitationStatus {
      get { return invitationStatus_ ?? InvitationStatusDefaultValue; }
      set {
        invitationStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "invitationStatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationStatus {
      get { return invitationStatus_ != null; }
    }
    /// <summary>Clears the value of the "invitationStatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationStatus() {
      invitationStatus_ = null;
    }

    /// <summary>Field number for the "invitationSentTime" field.</summary>
    public const int InvitationSentTimeFieldNumber = 3;
    private readonly static string InvitationSentTimeDefaultValue = "";

    private string invitationSentTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvitationSentTime {
      get { return invitationSentTime_ ?? InvitationSentTimeDefaultValue; }
      set {
        invitationSentTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "invitationSentTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationSentTime {
      get { return invitationSentTime_ != null; }
    }
    /// <summary>Clears the value of the "invitationSentTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationSentTime() {
      invitationSentTime_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlayGuestInvitationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlayGuestInvitationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InvitationSource != other.InvitationSource) return false;
      if (InvitationStatus != other.InvitationStatus) return false;
      if (InvitationSentTime != other.InvitationSentTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInvitationSource) hash ^= InvitationSource.GetHashCode();
      if (HasInvitationStatus) hash ^= InvitationStatus.GetHashCode();
      if (HasInvitationSentTime) hash ^= InvitationSentTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInvitationSource) {
        output.WriteRawTag(10);
        output.WriteString(InvitationSource);
      }
      if (HasInvitationStatus) {
        output.WriteRawTag(18);
        output.WriteString(InvitationStatus);
      }
      if (HasInvitationSentTime) {
        output.WriteRawTag(26);
        output.WriteString(InvitationSentTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInvitationSource) {
        output.WriteRawTag(10);
        output.WriteString(InvitationSource);
      }
      if (HasInvitationStatus) {
        output.WriteRawTag(18);
        output.WriteString(InvitationStatus);
      }
      if (HasInvitationSentTime) {
        output.WriteRawTag(26);
        output.WriteString(InvitationSentTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInvitationSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitationSource);
      }
      if (HasInvitationStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitationStatus);
      }
      if (HasInvitationSentTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitationSentTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlayGuestInvitationData other) {
      if (other == null) {
        return;
      }
      if (other.HasInvitationSource) {
        InvitationSource = other.InvitationSource;
      }
      if (other.HasInvitationStatus) {
        InvitationStatus = other.InvitationStatus;
      }
      if (other.HasInvitationSentTime) {
        InvitationSentTime = other.InvitationSentTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InvitationSource = input.ReadString();
            break;
          }
          case 18: {
            InvitationStatus = input.ReadString();
            break;
          }
          case 26: {
            InvitationSentTime = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InvitationSource = input.ReadString();
            break;
          }
          case 18: {
            InvitationStatus = input.ReadString();
            break;
          }
          case 26: {
            InvitationSentTime = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlayHostInvitationData : pb::IMessage<SharePlayHostInvitationData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlayHostInvitationData> _parser = new pb::MessageParser<SharePlayHostInvitationData>(() => new SharePlayHostInvitationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlayHostInvitationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostInvitationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostInvitationData(SharePlayHostInvitationData other) : this() {
      invitationTarget_ = other.invitationTarget_;
      invitationStatus_ = other.invitationStatus_;
      invitationId_ = other.invitationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostInvitationData Clone() {
      return new SharePlayHostInvitationData(this);
    }

    /// <summary>Field number for the "invitationTarget" field.</summary>
    public const int InvitationTargetFieldNumber = 1;
    private readonly static string InvitationTargetDefaultValue = "";

    private string invitationTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvitationTarget {
      get { return invitationTarget_ ?? InvitationTargetDefaultValue; }
      set {
        invitationTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "invitationTarget" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationTarget {
      get { return invitationTarget_ != null; }
    }
    /// <summary>Clears the value of the "invitationTarget" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationTarget() {
      invitationTarget_ = null;
    }

    /// <summary>Field number for the "invitationStatus" field.</summary>
    public const int InvitationStatusFieldNumber = 2;
    private readonly static string InvitationStatusDefaultValue = "";

    private string invitationStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvitationStatus {
      get { return invitationStatus_ ?? InvitationStatusDefaultValue; }
      set {
        invitationStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "invitationStatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationStatus {
      get { return invitationStatus_ != null; }
    }
    /// <summary>Clears the value of the "invitationStatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationStatus() {
      invitationStatus_ = null;
    }

    /// <summary>Field number for the "invitationId" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static string InvitationIdDefaultValue = "";

    private string invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvitationId {
      get { return invitationId_ ?? InvitationIdDefaultValue; }
      set {
        invitationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "invitationId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationId {
      get { return invitationId_ != null; }
    }
    /// <summary>Clears the value of the "invitationId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationId() {
      invitationId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlayHostInvitationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlayHostInvitationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InvitationTarget != other.InvitationTarget) return false;
      if (InvitationStatus != other.InvitationStatus) return false;
      if (InvitationId != other.InvitationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInvitationTarget) hash ^= InvitationTarget.GetHashCode();
      if (HasInvitationStatus) hash ^= InvitationStatus.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInvitationTarget) {
        output.WriteRawTag(10);
        output.WriteString(InvitationTarget);
      }
      if (HasInvitationStatus) {
        output.WriteRawTag(18);
        output.WriteString(InvitationStatus);
      }
      if (HasInvitationId) {
        output.WriteRawTag(26);
        output.WriteString(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInvitationTarget) {
        output.WriteRawTag(10);
        output.WriteString(InvitationTarget);
      }
      if (HasInvitationStatus) {
        output.WriteRawTag(18);
        output.WriteString(InvitationStatus);
      }
      if (HasInvitationId) {
        output.WriteRawTag(26);
        output.WriteString(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInvitationTarget) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitationTarget);
      }
      if (HasInvitationStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitationStatus);
      }
      if (HasInvitationId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlayHostInvitationData other) {
      if (other == null) {
        return;
      }
      if (other.HasInvitationTarget) {
        InvitationTarget = other.InvitationTarget;
      }
      if (other.HasInvitationStatus) {
        InvitationStatus = other.InvitationStatus;
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InvitationTarget = input.ReadString();
            break;
          }
          case 18: {
            InvitationStatus = input.ReadString();
            break;
          }
          case 26: {
            InvitationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InvitationTarget = input.ReadString();
            break;
          }
          case 18: {
            InvitationStatus = input.ReadString();
            break;
          }
          case 26: {
            InvitationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlayHostErrorData : pb::IMessage<SharePlayHostErrorData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlayHostErrorData> _parser = new pb::MessageParser<SharePlayHostErrorData>(() => new SharePlayHostErrorData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlayHostErrorData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostErrorData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostErrorData(SharePlayHostErrorData other) : this() {
      errorType_ = other.errorType_;
      errorName_ = other.errorName_;
      errorSource_ = other.errorSource_;
      invitationId_ = other.invitationId_;
      hostStreamId_ = other.hostStreamId_;
      guestStreamId_ = other.guestStreamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostErrorData Clone() {
      return new SharePlayHostErrorData(this);
    }

    /// <summary>Field number for the "errorType" field.</summary>
    public const int ErrorTypeFieldNumber = 1;
    private readonly static string ErrorTypeDefaultValue = "";

    private string errorType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorType {
      get { return errorType_ ?? ErrorTypeDefaultValue; }
      set {
        errorType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorType {
      get { return errorType_ != null; }
    }
    /// <summary>Clears the value of the "errorType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorType() {
      errorType_ = null;
    }

    /// <summary>Field number for the "errorName" field.</summary>
    public const int ErrorNameFieldNumber = 2;
    private readonly static string ErrorNameDefaultValue = "";

    private string errorName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorName {
      get { return errorName_ ?? ErrorNameDefaultValue; }
      set {
        errorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorName {
      get { return errorName_ != null; }
    }
    /// <summary>Clears the value of the "errorName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorName() {
      errorName_ = null;
    }

    /// <summary>Field number for the "errorSource" field.</summary>
    public const int ErrorSourceFieldNumber = 3;
    private readonly static string ErrorSourceDefaultValue = "";

    private string errorSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorSource {
      get { return errorSource_ ?? ErrorSourceDefaultValue; }
      set {
        errorSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorSource {
      get { return errorSource_ != null; }
    }
    /// <summary>Clears the value of the "errorSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorSource() {
      errorSource_ = null;
    }

    /// <summary>Field number for the "invitationId" field.</summary>
    public const int InvitationIdFieldNumber = 4;
    private readonly static string InvitationIdDefaultValue = "";

    private string invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvitationId {
      get { return invitationId_ ?? InvitationIdDefaultValue; }
      set {
        invitationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "invitationId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationId {
      get { return invitationId_ != null; }
    }
    /// <summary>Clears the value of the "invitationId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationId() {
      invitationId_ = null;
    }

    /// <summary>Field number for the "hostStreamId" field.</summary>
    public const int HostStreamIdFieldNumber = 5;
    private readonly static string HostStreamIdDefaultValue = "";

    private string hostStreamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostStreamId {
      get { return hostStreamId_ ?? HostStreamIdDefaultValue; }
      set {
        hostStreamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostStreamId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostStreamId {
      get { return hostStreamId_ != null; }
    }
    /// <summary>Clears the value of the "hostStreamId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostStreamId() {
      hostStreamId_ = null;
    }

    /// <summary>Field number for the "guestStreamId" field.</summary>
    public const int GuestStreamIdFieldNumber = 6;
    private readonly static string GuestStreamIdDefaultValue = "";

    private string guestStreamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GuestStreamId {
      get { return guestStreamId_ ?? GuestStreamIdDefaultValue; }
      set {
        guestStreamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "guestStreamId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuestStreamId {
      get { return guestStreamId_ != null; }
    }
    /// <summary>Clears the value of the "guestStreamId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuestStreamId() {
      guestStreamId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlayHostErrorData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlayHostErrorData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorType != other.ErrorType) return false;
      if (ErrorName != other.ErrorName) return false;
      if (ErrorSource != other.ErrorSource) return false;
      if (InvitationId != other.InvitationId) return false;
      if (HostStreamId != other.HostStreamId) return false;
      if (GuestStreamId != other.GuestStreamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasErrorType) hash ^= ErrorType.GetHashCode();
      if (HasErrorName) hash ^= ErrorName.GetHashCode();
      if (HasErrorSource) hash ^= ErrorSource.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (HasHostStreamId) hash ^= HostStreamId.GetHashCode();
      if (HasGuestStreamId) hash ^= GuestStreamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasErrorType) {
        output.WriteRawTag(10);
        output.WriteString(ErrorType);
      }
      if (HasErrorName) {
        output.WriteRawTag(18);
        output.WriteString(ErrorName);
      }
      if (HasErrorSource) {
        output.WriteRawTag(26);
        output.WriteString(ErrorSource);
      }
      if (HasInvitationId) {
        output.WriteRawTag(34);
        output.WriteString(InvitationId);
      }
      if (HasHostStreamId) {
        output.WriteRawTag(42);
        output.WriteString(HostStreamId);
      }
      if (HasGuestStreamId) {
        output.WriteRawTag(50);
        output.WriteString(GuestStreamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasErrorType) {
        output.WriteRawTag(10);
        output.WriteString(ErrorType);
      }
      if (HasErrorName) {
        output.WriteRawTag(18);
        output.WriteString(ErrorName);
      }
      if (HasErrorSource) {
        output.WriteRawTag(26);
        output.WriteString(ErrorSource);
      }
      if (HasInvitationId) {
        output.WriteRawTag(34);
        output.WriteString(InvitationId);
      }
      if (HasHostStreamId) {
        output.WriteRawTag(42);
        output.WriteString(HostStreamId);
      }
      if (HasGuestStreamId) {
        output.WriteRawTag(50);
        output.WriteString(GuestStreamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasErrorType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorType);
      }
      if (HasErrorName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorName);
      }
      if (HasErrorSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorSource);
      }
      if (HasInvitationId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitationId);
      }
      if (HasHostStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostStreamId);
      }
      if (HasGuestStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GuestStreamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlayHostErrorData other) {
      if (other == null) {
        return;
      }
      if (other.HasErrorType) {
        ErrorType = other.ErrorType;
      }
      if (other.HasErrorName) {
        ErrorName = other.ErrorName;
      }
      if (other.HasErrorSource) {
        ErrorSource = other.ErrorSource;
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      if (other.HasHostStreamId) {
        HostStreamId = other.HostStreamId;
      }
      if (other.HasGuestStreamId) {
        GuestStreamId = other.GuestStreamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorType = input.ReadString();
            break;
          }
          case 18: {
            ErrorName = input.ReadString();
            break;
          }
          case 26: {
            ErrorSource = input.ReadString();
            break;
          }
          case 34: {
            InvitationId = input.ReadString();
            break;
          }
          case 42: {
            HostStreamId = input.ReadString();
            break;
          }
          case 50: {
            GuestStreamId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ErrorType = input.ReadString();
            break;
          }
          case 18: {
            ErrorName = input.ReadString();
            break;
          }
          case 26: {
            ErrorSource = input.ReadString();
            break;
          }
          case 34: {
            InvitationId = input.ReadString();
            break;
          }
          case 42: {
            HostStreamId = input.ReadString();
            break;
          }
          case 50: {
            GuestStreamId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlayHostSettingsData : pb::IMessage<SharePlayHostSettingsData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlayHostSettingsData> _parser = new pb::MessageParser<SharePlayHostSettingsData>(() => new SharePlayHostSettingsData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlayHostSettingsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSettingsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSettingsData(SharePlayHostSettingsData other) : this() {
      _hasBits0 = other._hasBits0;
      bitrate_ = other.bitrate_;
      mouseAndKeyboardAccessAllowed_ = other.mouseAndKeyboardAccessAllowed_;
      gamepadAccessAllowed_ = other.gamepadAccessAllowed_;
      sourceTrackingData_ = other.sourceTrackingData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlayHostSettingsData Clone() {
      return new SharePlayHostSettingsData(this);
    }

    /// <summary>Field number for the "bitrate" field.</summary>
    public const int BitrateFieldNumber = 1;
    private readonly static uint BitrateDefaultValue = 0;

    private uint bitrate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bitrate {
      get { if ((_hasBits0 & 1) != 0) { return bitrate_; } else { return BitrateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bitrate_ = value;
      }
    }
    /// <summary>Gets whether the "bitrate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bitrate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mouseAndKeyboardAccessAllowed" field.</summary>
    public const int MouseAndKeyboardAccessAllowedFieldNumber = 2;
    private readonly static bool MouseAndKeyboardAccessAllowedDefaultValue = false;

    private bool mouseAndKeyboardAccessAllowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MouseAndKeyboardAccessAllowed {
      get { if ((_hasBits0 & 2) != 0) { return mouseAndKeyboardAccessAllowed_; } else { return MouseAndKeyboardAccessAllowedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mouseAndKeyboardAccessAllowed_ = value;
      }
    }
    /// <summary>Gets whether the "mouseAndKeyboardAccessAllowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMouseAndKeyboardAccessAllowed {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mouseAndKeyboardAccessAllowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMouseAndKeyboardAccessAllowed() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gamepadAccessAllowed" field.</summary>
    public const int GamepadAccessAllowedFieldNumber = 3;
    private readonly static bool GamepadAccessAllowedDefaultValue = false;

    private bool gamepadAccessAllowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GamepadAccessAllowed {
      get { if ((_hasBits0 & 4) != 0) { return gamepadAccessAllowed_; } else { return GamepadAccessAllowedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gamepadAccessAllowed_ = value;
      }
    }
    /// <summary>Gets whether the "gamepadAccessAllowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamepadAccessAllowed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gamepadAccessAllowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamepadAccessAllowed() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "sourceTrackingData" field.</summary>
    public const int SourceTrackingDataFieldNumber = 4;
    private readonly static string SourceTrackingDataDefaultValue = "";

    private string sourceTrackingData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceTrackingData {
      get { return sourceTrackingData_ ?? SourceTrackingDataDefaultValue; }
      set {
        sourceTrackingData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourceTrackingData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceTrackingData {
      get { return sourceTrackingData_ != null; }
    }
    /// <summary>Clears the value of the "sourceTrackingData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceTrackingData() {
      sourceTrackingData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlayHostSettingsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlayHostSettingsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bitrate != other.Bitrate) return false;
      if (MouseAndKeyboardAccessAllowed != other.MouseAndKeyboardAccessAllowed) return false;
      if (GamepadAccessAllowed != other.GamepadAccessAllowed) return false;
      if (SourceTrackingData != other.SourceTrackingData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBitrate) hash ^= Bitrate.GetHashCode();
      if (HasMouseAndKeyboardAccessAllowed) hash ^= MouseAndKeyboardAccessAllowed.GetHashCode();
      if (HasGamepadAccessAllowed) hash ^= GamepadAccessAllowed.GetHashCode();
      if (HasSourceTrackingData) hash ^= SourceTrackingData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBitrate) {
        output.WriteRawTag(8);
        output.WriteUInt32(Bitrate);
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        output.WriteRawTag(16);
        output.WriteBool(MouseAndKeyboardAccessAllowed);
      }
      if (HasGamepadAccessAllowed) {
        output.WriteRawTag(24);
        output.WriteBool(GamepadAccessAllowed);
      }
      if (HasSourceTrackingData) {
        output.WriteRawTag(34);
        output.WriteString(SourceTrackingData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBitrate) {
        output.WriteRawTag(8);
        output.WriteUInt32(Bitrate);
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        output.WriteRawTag(16);
        output.WriteBool(MouseAndKeyboardAccessAllowed);
      }
      if (HasGamepadAccessAllowed) {
        output.WriteRawTag(24);
        output.WriteBool(GamepadAccessAllowed);
      }
      if (HasSourceTrackingData) {
        output.WriteRawTag(34);
        output.WriteString(SourceTrackingData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBitrate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bitrate);
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        size += 1 + 1;
      }
      if (HasGamepadAccessAllowed) {
        size += 1 + 1;
      }
      if (HasSourceTrackingData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceTrackingData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlayHostSettingsData other) {
      if (other == null) {
        return;
      }
      if (other.HasBitrate) {
        Bitrate = other.Bitrate;
      }
      if (other.HasMouseAndKeyboardAccessAllowed) {
        MouseAndKeyboardAccessAllowed = other.MouseAndKeyboardAccessAllowed;
      }
      if (other.HasGamepadAccessAllowed) {
        GamepadAccessAllowed = other.GamepadAccessAllowed;
      }
      if (other.HasSourceTrackingData) {
        SourceTrackingData = other.SourceTrackingData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bitrate = input.ReadUInt32();
            break;
          }
          case 16: {
            MouseAndKeyboardAccessAllowed = input.ReadBool();
            break;
          }
          case 24: {
            GamepadAccessAllowed = input.ReadBool();
            break;
          }
          case 34: {
            SourceTrackingData = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bitrate = input.ReadUInt32();
            break;
          }
          case 16: {
            MouseAndKeyboardAccessAllowed = input.ReadBool();
            break;
          }
          case 24: {
            GamepadAccessAllowed = input.ReadBool();
            break;
          }
          case 34: {
            SourceTrackingData = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingHostStartSessionData : pb::IMessage<StreamingHostStartSessionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingHostStartSessionData> _parser = new pb::MessageParser<StreamingHostStartSessionData>(() => new StreamingHostStartSessionData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingHostStartSessionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostStartSessionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostStartSessionData(StreamingHostStartSessionData other) : this() {
      _hasBits0 = other._hasBits0;
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      spaceIdGame_ = other.spaceIdGame_;
      bitrateMbps_ = other.bitrateMbps_;
      resolution_ = other.resolution_;
      fps_ = other.fps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostStartSessionData Clone() {
      return new StreamingHostStartSessionData(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 3;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    /// <summary>Field number for the "bitrateMbps" field.</summary>
    public const int BitrateMbpsFieldNumber = 4;
    private readonly static uint BitrateMbpsDefaultValue = 0;

    private uint bitrateMbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BitrateMbps {
      get { if ((_hasBits0 & 1) != 0) { return bitrateMbps_; } else { return BitrateMbpsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bitrateMbps_ = value;
      }
    }
    /// <summary>Gets whether the "bitrateMbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrateMbps {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bitrateMbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrateMbps() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 5;
    private readonly static string ResolutionDefaultValue = "";

    private string resolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Resolution {
      get { return resolution_ ?? ResolutionDefaultValue; }
      set {
        resolution_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResolution {
      get { return resolution_ != null; }
    }
    /// <summary>Clears the value of the "resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResolution() {
      resolution_ = null;
    }

    /// <summary>Field number for the "fps" field.</summary>
    public const int FpsFieldNumber = 6;
    private readonly static uint FpsDefaultValue = 0;

    private uint fps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Fps {
      get { if ((_hasBits0 & 2) != 0) { return fps_; } else { return FpsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fps_ = value;
      }
    }
    /// <summary>Gets whether the "fps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFps {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFps() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingHostStartSessionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingHostStartSessionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      if (BitrateMbps != other.BitrateMbps) return false;
      if (Resolution != other.Resolution) return false;
      if (Fps != other.Fps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (HasBitrateMbps) hash ^= BitrateMbps.GetHashCode();
      if (HasResolution) hash ^= Resolution.GetHashCode();
      if (HasFps) hash ^= Fps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasBitrateMbps) {
        output.WriteRawTag(32);
        output.WriteUInt32(BitrateMbps);
      }
      if (HasResolution) {
        output.WriteRawTag(42);
        output.WriteString(Resolution);
      }
      if (HasFps) {
        output.WriteRawTag(48);
        output.WriteUInt32(Fps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasBitrateMbps) {
        output.WriteRawTag(32);
        output.WriteUInt32(BitrateMbps);
      }
      if (HasResolution) {
        output.WriteRawTag(42);
        output.WriteString(Resolution);
      }
      if (HasFps) {
        output.WriteRawTag(48);
        output.WriteUInt32(Fps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (HasBitrateMbps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BitrateMbps);
      }
      if (HasResolution) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Resolution);
      }
      if (HasFps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingHostStartSessionData other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      if (other.HasBitrateMbps) {
        BitrateMbps = other.BitrateMbps;
      }
      if (other.HasResolution) {
        Resolution = other.Resolution;
      }
      if (other.HasFps) {
        Fps = other.Fps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 32: {
            BitrateMbps = input.ReadUInt32();
            break;
          }
          case 42: {
            Resolution = input.ReadString();
            break;
          }
          case 48: {
            Fps = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 32: {
            BitrateMbps = input.ReadUInt32();
            break;
          }
          case 42: {
            Resolution = input.ReadString();
            break;
          }
          case 48: {
            Fps = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingHostStopSessionData : pb::IMessage<StreamingHostStopSessionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingHostStopSessionData> _parser = new pb::MessageParser<StreamingHostStopSessionData>(() => new StreamingHostStopSessionData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingHostStopSessionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostStopSessionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostStopSessionData(StreamingHostStopSessionData other) : this() {
      _hasBits0 = other._hasBits0;
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      spaceIdGame_ = other.spaceIdGame_;
      reason_ = other.reason_;
      bitrateMbps_ = other.bitrateMbps_;
      resolution_ = other.resolution_;
      fps_ = other.fps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostStopSessionData Clone() {
      return new StreamingHostStopSessionData(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 3;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "bitrateMbps" field.</summary>
    public const int BitrateMbpsFieldNumber = 5;
    private readonly static uint BitrateMbpsDefaultValue = 0;

    private uint bitrateMbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BitrateMbps {
      get { if ((_hasBits0 & 1) != 0) { return bitrateMbps_; } else { return BitrateMbpsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bitrateMbps_ = value;
      }
    }
    /// <summary>Gets whether the "bitrateMbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrateMbps {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bitrateMbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrateMbps() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 6;
    private readonly static string ResolutionDefaultValue = "";

    private string resolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Resolution {
      get { return resolution_ ?? ResolutionDefaultValue; }
      set {
        resolution_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResolution {
      get { return resolution_ != null; }
    }
    /// <summary>Clears the value of the "resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResolution() {
      resolution_ = null;
    }

    /// <summary>Field number for the "fps" field.</summary>
    public const int FpsFieldNumber = 7;
    private readonly static uint FpsDefaultValue = 0;

    private uint fps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Fps {
      get { if ((_hasBits0 & 2) != 0) { return fps_; } else { return FpsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fps_ = value;
      }
    }
    /// <summary>Gets whether the "fps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFps {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFps() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingHostStopSessionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingHostStopSessionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      if (Reason != other.Reason) return false;
      if (BitrateMbps != other.BitrateMbps) return false;
      if (Resolution != other.Resolution) return false;
      if (Fps != other.Fps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasBitrateMbps) hash ^= BitrateMbps.GetHashCode();
      if (HasResolution) hash ^= Resolution.GetHashCode();
      if (HasFps) hash ^= Fps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasBitrateMbps) {
        output.WriteRawTag(40);
        output.WriteUInt32(BitrateMbps);
      }
      if (HasResolution) {
        output.WriteRawTag(50);
        output.WriteString(Resolution);
      }
      if (HasFps) {
        output.WriteRawTag(56);
        output.WriteUInt32(Fps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasBitrateMbps) {
        output.WriteRawTag(40);
        output.WriteUInt32(BitrateMbps);
      }
      if (HasResolution) {
        output.WriteRawTag(50);
        output.WriteString(Resolution);
      }
      if (HasFps) {
        output.WriteRawTag(56);
        output.WriteUInt32(Fps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasBitrateMbps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BitrateMbps);
      }
      if (HasResolution) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Resolution);
      }
      if (HasFps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingHostStopSessionData other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasBitrateMbps) {
        BitrateMbps = other.BitrateMbps;
      }
      if (other.HasResolution) {
        Resolution = other.Resolution;
      }
      if (other.HasFps) {
        Fps = other.Fps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 40: {
            BitrateMbps = input.ReadUInt32();
            break;
          }
          case 50: {
            Resolution = input.ReadString();
            break;
          }
          case 56: {
            Fps = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 40: {
            BitrateMbps = input.ReadUInt32();
            break;
          }
          case 50: {
            Resolution = input.ReadString();
            break;
          }
          case 56: {
            Fps = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingHostSessionSettingsChanged : pb::IMessage<StreamingHostSessionSettingsChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingHostSessionSettingsChanged> _parser = new pb::MessageParser<StreamingHostSessionSettingsChanged>(() => new StreamingHostSessionSettingsChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingHostSessionSettingsChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostSessionSettingsChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostSessionSettingsChanged(StreamingHostSessionSettingsChanged other) : this() {
      sender_ = other.sender_;
      settingName_ = other.settingName_;
      newValue_ = other.newValue_;
      oldValue_ = other.oldValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostSessionSettingsChanged Clone() {
      return new StreamingHostSessionSettingsChanged(this);
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 1;
    private readonly static string SenderDefaultValue = "";

    private string sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sender {
      get { return sender_ ?? SenderDefaultValue; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sender" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSender {
      get { return sender_ != null; }
    }
    /// <summary>Clears the value of the "sender" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSender() {
      sender_ = null;
    }

    /// <summary>Field number for the "settingName" field.</summary>
    public const int SettingNameFieldNumber = 2;
    private readonly static string SettingNameDefaultValue = "";

    private string settingName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SettingName {
      get { return settingName_ ?? SettingNameDefaultValue; }
      set {
        settingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "settingName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSettingName {
      get { return settingName_ != null; }
    }
    /// <summary>Clears the value of the "settingName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSettingName() {
      settingName_ = null;
    }

    /// <summary>Field number for the "newValue" field.</summary>
    public const int NewValueFieldNumber = 3;
    private readonly static string NewValueDefaultValue = "";

    private string newValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewValue {
      get { return newValue_ ?? NewValueDefaultValue; }
      set {
        newValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "newValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewValue {
      get { return newValue_ != null; }
    }
    /// <summary>Clears the value of the "newValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewValue() {
      newValue_ = null;
    }

    /// <summary>Field number for the "oldValue" field.</summary>
    public const int OldValueFieldNumber = 4;
    private readonly static string OldValueDefaultValue = "";

    private string oldValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OldValue {
      get { return oldValue_ ?? OldValueDefaultValue; }
      set {
        oldValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "oldValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOldValue {
      get { return oldValue_ != null; }
    }
    /// <summary>Clears the value of the "oldValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOldValue() {
      oldValue_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingHostSessionSettingsChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingHostSessionSettingsChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sender != other.Sender) return false;
      if (SettingName != other.SettingName) return false;
      if (NewValue != other.NewValue) return false;
      if (OldValue != other.OldValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSender) hash ^= Sender.GetHashCode();
      if (HasSettingName) hash ^= SettingName.GetHashCode();
      if (HasNewValue) hash ^= NewValue.GetHashCode();
      if (HasOldValue) hash ^= OldValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSender) {
        output.WriteRawTag(10);
        output.WriteString(Sender);
      }
      if (HasSettingName) {
        output.WriteRawTag(18);
        output.WriteString(SettingName);
      }
      if (HasNewValue) {
        output.WriteRawTag(26);
        output.WriteString(NewValue);
      }
      if (HasOldValue) {
        output.WriteRawTag(34);
        output.WriteString(OldValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSender) {
        output.WriteRawTag(10);
        output.WriteString(Sender);
      }
      if (HasSettingName) {
        output.WriteRawTag(18);
        output.WriteString(SettingName);
      }
      if (HasNewValue) {
        output.WriteRawTag(26);
        output.WriteString(NewValue);
      }
      if (HasOldValue) {
        output.WriteRawTag(34);
        output.WriteString(OldValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSender) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (HasSettingName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SettingName);
      }
      if (HasNewValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewValue);
      }
      if (HasOldValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingHostSessionSettingsChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasSender) {
        Sender = other.Sender;
      }
      if (other.HasSettingName) {
        SettingName = other.SettingName;
      }
      if (other.HasNewValue) {
        NewValue = other.NewValue;
      }
      if (other.HasOldValue) {
        OldValue = other.OldValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sender = input.ReadString();
            break;
          }
          case 18: {
            SettingName = input.ReadString();
            break;
          }
          case 26: {
            NewValue = input.ReadString();
            break;
          }
          case 34: {
            OldValue = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Sender = input.ReadString();
            break;
          }
          case 18: {
            SettingName = input.ReadString();
            break;
          }
          case 26: {
            NewValue = input.ReadString();
            break;
          }
          case 34: {
            OldValue = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingErrorData : pb::IMessage<StreamingErrorData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingErrorData> _parser = new pb::MessageParser<StreamingErrorData>(() => new StreamingErrorData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingErrorData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingErrorData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingErrorData(StreamingErrorData other) : this() {
      errorName_ = other.errorName_;
      errorType_ = other.errorType_;
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingErrorData Clone() {
      return new StreamingErrorData(this);
    }

    /// <summary>Field number for the "errorName" field.</summary>
    public const int ErrorNameFieldNumber = 1;
    private readonly static string ErrorNameDefaultValue = "";

    private string errorName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorName {
      get { return errorName_ ?? ErrorNameDefaultValue; }
      set {
        errorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorName {
      get { return errorName_ != null; }
    }
    /// <summary>Clears the value of the "errorName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorName() {
      errorName_ = null;
    }

    /// <summary>Field number for the "errorType" field.</summary>
    public const int ErrorTypeFieldNumber = 2;
    private readonly static string ErrorTypeDefaultValue = "";

    private string errorType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorType {
      get { return errorType_ ?? ErrorTypeDefaultValue; }
      set {
        errorType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorType {
      get { return errorType_ != null; }
    }
    /// <summary>Clears the value of the "errorType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorType() {
      errorType_ = null;
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 3;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 4;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingErrorData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingErrorData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorName != other.ErrorName) return false;
      if (ErrorType != other.ErrorType) return false;
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasErrorName) hash ^= ErrorName.GetHashCode();
      if (HasErrorType) hash ^= ErrorType.GetHashCode();
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasErrorName) {
        output.WriteRawTag(10);
        output.WriteString(ErrorName);
      }
      if (HasErrorType) {
        output.WriteRawTag(18);
        output.WriteString(ErrorType);
      }
      if (HasHostPeerId) {
        output.WriteRawTag(26);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(34);
        output.WriteString(Side);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasErrorName) {
        output.WriteRawTag(10);
        output.WriteString(ErrorName);
      }
      if (HasErrorType) {
        output.WriteRawTag(18);
        output.WriteString(ErrorType);
      }
      if (HasHostPeerId) {
        output.WriteRawTag(26);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(34);
        output.WriteString(Side);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasErrorName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorName);
      }
      if (HasErrorType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorType);
      }
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingErrorData other) {
      if (other == null) {
        return;
      }
      if (other.HasErrorName) {
        ErrorName = other.ErrorName;
      }
      if (other.HasErrorType) {
        ErrorType = other.ErrorType;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorName = input.ReadString();
            break;
          }
          case 18: {
            ErrorType = input.ReadString();
            break;
          }
          case 26: {
            HostPeerId = input.ReadString();
            break;
          }
          case 34: {
            Side = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ErrorName = input.ReadString();
            break;
          }
          case 18: {
            ErrorType = input.ReadString();
            break;
          }
          case 26: {
            HostPeerId = input.ReadString();
            break;
          }
          case 34: {
            Side = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingStatusData : pb::IMessage<StreamingStatusData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingStatusData> _parser = new pb::MessageParser<StreamingStatusData>(() => new StreamingStatusData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingStatusData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingStatusData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingStatusData(StreamingStatusData other) : this() {
      status_ = other.status_;
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      streamingService_ = other.streamingService_;
      spaceIdGame_ = other.spaceIdGame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingStatusData Clone() {
      return new StreamingStatusData(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 2;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 3;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "streamingService" field.</summary>
    public const int StreamingServiceFieldNumber = 4;
    private readonly static string StreamingServiceDefaultValue = "";

    private string streamingService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamingService {
      get { return streamingService_ ?? StreamingServiceDefaultValue; }
      set {
        streamingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "streamingService" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamingService {
      get { return streamingService_ != null; }
    }
    /// <summary>Clears the value of the "streamingService" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingService() {
      streamingService_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 5;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingStatusData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingStatusData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (StreamingService != other.StreamingService) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasStreamingService) hash ^= StreamingService.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStatus) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (HasHostPeerId) {
        output.WriteRawTag(18);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(26);
        output.WriteString(Side);
      }
      if (HasStreamingService) {
        output.WriteRawTag(34);
        output.WriteString(StreamingService);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(42);
        output.WriteString(SpaceIdGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStatus) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (HasHostPeerId) {
        output.WriteRawTag(18);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(26);
        output.WriteString(Side);
      }
      if (HasStreamingService) {
        output.WriteRawTag(34);
        output.WriteString(StreamingService);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(42);
        output.WriteString(SpaceIdGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasStreamingService) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamingService);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingStatusData other) {
      if (other == null) {
        return;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasStreamingService) {
        StreamingService = other.StreamingService;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
          case 18: {
            HostPeerId = input.ReadString();
            break;
          }
          case 26: {
            Side = input.ReadString();
            break;
          }
          case 34: {
            StreamingService = input.ReadString();
            break;
          }
          case 42: {
            SpaceIdGame = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
          case 18: {
            HostPeerId = input.ReadString();
            break;
          }
          case 26: {
            Side = input.ReadString();
            break;
          }
          case 34: {
            StreamingService = input.ReadString();
            break;
          }
          case 42: {
            SpaceIdGame = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingFeedBackData : pb::IMessage<StreamingFeedBackData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingFeedBackData> _parser = new pb::MessageParser<StreamingFeedBackData>(() => new StreamingFeedBackData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingFeedBackData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingFeedBackData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingFeedBackData(StreamingFeedBackData other) : this() {
      _hasBits0 = other._hasBits0;
      audioIssue_ = other.audioIssue_;
      inputLag_ = other.inputLag_;
      invitationFailed_ = other.invitationFailed_;
      other_ = other.other_;
      poorConnection_ = other.poorConnection_;
      rating_ = other.rating_;
      inputSource_ = other.inputSource_;
      brand_ = other.brand_;
      invitationId_ = other.invitationId_;
      hostPerformanceIssue_ = other.hostPerformanceIssue_;
      guestPerformanceIssue_ = other.guestPerformanceIssue_;
      poorGuestBehavior_ = other.poorGuestBehavior_;
      videoIssue_ = other.videoIssue_;
      side_ = other.side_;
      userType_ = other.userType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingFeedBackData Clone() {
      return new StreamingFeedBackData(this);
    }

    /// <summary>Field number for the "audioIssue" field.</summary>
    public const int AudioIssueFieldNumber = 1;
    private readonly static bool AudioIssueDefaultValue = false;

    private bool audioIssue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AudioIssue {
      get { if ((_hasBits0 & 1) != 0) { return audioIssue_; } else { return AudioIssueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        audioIssue_ = value;
      }
    }
    /// <summary>Gets whether the "audioIssue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioIssue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "audioIssue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioIssue() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "inputLag" field.</summary>
    public const int InputLagFieldNumber = 2;
    private readonly static bool InputLagDefaultValue = false;

    private bool inputLag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InputLag {
      get { if ((_hasBits0 & 2) != 0) { return inputLag_; } else { return InputLagDefaultValue; } }
      set {
        _hasBits0 |= 2;
        inputLag_ = value;
      }
    }
    /// <summary>Gets whether the "inputLag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputLag {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "inputLag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputLag() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "invitationFailed" field.</summary>
    public const int InvitationFailedFieldNumber = 3;
    private readonly static bool InvitationFailedDefaultValue = false;

    private bool invitationFailed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InvitationFailed {
      get { if ((_hasBits0 & 4) != 0) { return invitationFailed_; } else { return InvitationFailedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        invitationFailed_ = value;
      }
    }
    /// <summary>Gets whether the "invitationFailed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationFailed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "invitationFailed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationFailed() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "other" field.</summary>
    public const int OtherFieldNumber = 4;
    private readonly static bool OtherDefaultValue = false;

    private bool other_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Other {
      get { if ((_hasBits0 & 8) != 0) { return other_; } else { return OtherDefaultValue; } }
      set {
        _hasBits0 |= 8;
        other_ = value;
      }
    }
    /// <summary>Gets whether the "other" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOther {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "other" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOther() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "poorConnection" field.</summary>
    public const int PoorConnectionFieldNumber = 5;
    private readonly static bool PoorConnectionDefaultValue = false;

    private bool poorConnection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PoorConnection {
      get { if ((_hasBits0 & 16) != 0) { return poorConnection_; } else { return PoorConnectionDefaultValue; } }
      set {
        _hasBits0 |= 16;
        poorConnection_ = value;
      }
    }
    /// <summary>Gets whether the "poorConnection" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPoorConnection {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "poorConnection" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPoorConnection() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "rating" field.</summary>
    public const int RatingFieldNumber = 6;
    private readonly static uint RatingDefaultValue = 0;

    private uint rating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rating {
      get { if ((_hasBits0 & 32) != 0) { return rating_; } else { return RatingDefaultValue; } }
      set {
        _hasBits0 |= 32;
        rating_ = value;
      }
    }
    /// <summary>Gets whether the "rating" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRating {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "rating" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRating() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "inputSource" field.</summary>
    public const int InputSourceFieldNumber = 7;
    private readonly static string InputSourceDefaultValue = "";

    private string inputSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputSource {
      get { return inputSource_ ?? InputSourceDefaultValue; }
      set {
        inputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputSource {
      get { return inputSource_ != null; }
    }
    /// <summary>Clears the value of the "inputSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputSource() {
      inputSource_ = null;
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 8;
    private readonly static uint BrandDefaultValue = 0;

    private uint brand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Brand {
      get { if ((_hasBits0 & 64) != 0) { return brand_; } else { return BrandDefaultValue; } }
      set {
        _hasBits0 |= 64;
        brand_ = value;
      }
    }
    /// <summary>Gets whether the "brand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrand {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "brand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrand() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "invitationId" field.</summary>
    public const int InvitationIdFieldNumber = 9;
    private readonly static string InvitationIdDefaultValue = "";

    private string invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvitationId {
      get { return invitationId_ ?? InvitationIdDefaultValue; }
      set {
        invitationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "invitationId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvitationId {
      get { return invitationId_ != null; }
    }
    /// <summary>Clears the value of the "invitationId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvitationId() {
      invitationId_ = null;
    }

    /// <summary>Field number for the "hostPerformanceIssue" field.</summary>
    public const int HostPerformanceIssueFieldNumber = 10;
    private readonly static bool HostPerformanceIssueDefaultValue = false;

    private bool hostPerformanceIssue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HostPerformanceIssue {
      get { if ((_hasBits0 & 128) != 0) { return hostPerformanceIssue_; } else { return HostPerformanceIssueDefaultValue; } }
      set {
        _hasBits0 |= 128;
        hostPerformanceIssue_ = value;
      }
    }
    /// <summary>Gets whether the "hostPerformanceIssue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPerformanceIssue {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "hostPerformanceIssue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPerformanceIssue() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "guestPerformanceIssue" field.</summary>
    public const int GuestPerformanceIssueFieldNumber = 11;
    private readonly static bool GuestPerformanceIssueDefaultValue = false;

    private bool guestPerformanceIssue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GuestPerformanceIssue {
      get { if ((_hasBits0 & 256) != 0) { return guestPerformanceIssue_; } else { return GuestPerformanceIssueDefaultValue; } }
      set {
        _hasBits0 |= 256;
        guestPerformanceIssue_ = value;
      }
    }
    /// <summary>Gets whether the "guestPerformanceIssue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuestPerformanceIssue {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "guestPerformanceIssue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuestPerformanceIssue() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "poorGuestBehavior" field.</summary>
    public const int PoorGuestBehaviorFieldNumber = 12;
    private readonly static bool PoorGuestBehaviorDefaultValue = false;

    private bool poorGuestBehavior_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PoorGuestBehavior {
      get { if ((_hasBits0 & 512) != 0) { return poorGuestBehavior_; } else { return PoorGuestBehaviorDefaultValue; } }
      set {
        _hasBits0 |= 512;
        poorGuestBehavior_ = value;
      }
    }
    /// <summary>Gets whether the "poorGuestBehavior" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPoorGuestBehavior {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "poorGuestBehavior" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPoorGuestBehavior() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "videoIssue" field.</summary>
    public const int VideoIssueFieldNumber = 13;
    private readonly static bool VideoIssueDefaultValue = false;

    private bool videoIssue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VideoIssue {
      get { if ((_hasBits0 & 1024) != 0) { return videoIssue_; } else { return VideoIssueDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        videoIssue_ = value;
      }
    }
    /// <summary>Gets whether the "videoIssue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoIssue {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "videoIssue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoIssue() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 14;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "userType" field.</summary>
    public const int UserTypeFieldNumber = 15;
    private readonly static string UserTypeDefaultValue = "";

    private string userType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserType {
      get { return userType_ ?? UserTypeDefaultValue; }
      set {
        userType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserType {
      get { return userType_ != null; }
    }
    /// <summary>Clears the value of the "userType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserType() {
      userType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingFeedBackData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingFeedBackData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AudioIssue != other.AudioIssue) return false;
      if (InputLag != other.InputLag) return false;
      if (InvitationFailed != other.InvitationFailed) return false;
      if (Other != other.Other) return false;
      if (PoorConnection != other.PoorConnection) return false;
      if (Rating != other.Rating) return false;
      if (InputSource != other.InputSource) return false;
      if (Brand != other.Brand) return false;
      if (InvitationId != other.InvitationId) return false;
      if (HostPerformanceIssue != other.HostPerformanceIssue) return false;
      if (GuestPerformanceIssue != other.GuestPerformanceIssue) return false;
      if (PoorGuestBehavior != other.PoorGuestBehavior) return false;
      if (VideoIssue != other.VideoIssue) return false;
      if (Side != other.Side) return false;
      if (UserType != other.UserType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAudioIssue) hash ^= AudioIssue.GetHashCode();
      if (HasInputLag) hash ^= InputLag.GetHashCode();
      if (HasInvitationFailed) hash ^= InvitationFailed.GetHashCode();
      if (HasOther) hash ^= Other.GetHashCode();
      if (HasPoorConnection) hash ^= PoorConnection.GetHashCode();
      if (HasRating) hash ^= Rating.GetHashCode();
      if (HasInputSource) hash ^= InputSource.GetHashCode();
      if (HasBrand) hash ^= Brand.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (HasHostPerformanceIssue) hash ^= HostPerformanceIssue.GetHashCode();
      if (HasGuestPerformanceIssue) hash ^= GuestPerformanceIssue.GetHashCode();
      if (HasPoorGuestBehavior) hash ^= PoorGuestBehavior.GetHashCode();
      if (HasVideoIssue) hash ^= VideoIssue.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasUserType) hash ^= UserType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAudioIssue) {
        output.WriteRawTag(8);
        output.WriteBool(AudioIssue);
      }
      if (HasInputLag) {
        output.WriteRawTag(16);
        output.WriteBool(InputLag);
      }
      if (HasInvitationFailed) {
        output.WriteRawTag(24);
        output.WriteBool(InvitationFailed);
      }
      if (HasOther) {
        output.WriteRawTag(32);
        output.WriteBool(Other);
      }
      if (HasPoorConnection) {
        output.WriteRawTag(40);
        output.WriteBool(PoorConnection);
      }
      if (HasRating) {
        output.WriteRawTag(48);
        output.WriteUInt32(Rating);
      }
      if (HasInputSource) {
        output.WriteRawTag(58);
        output.WriteString(InputSource);
      }
      if (HasBrand) {
        output.WriteRawTag(64);
        output.WriteUInt32(Brand);
      }
      if (HasInvitationId) {
        output.WriteRawTag(74);
        output.WriteString(InvitationId);
      }
      if (HasHostPerformanceIssue) {
        output.WriteRawTag(80);
        output.WriteBool(HostPerformanceIssue);
      }
      if (HasGuestPerformanceIssue) {
        output.WriteRawTag(88);
        output.WriteBool(GuestPerformanceIssue);
      }
      if (HasPoorGuestBehavior) {
        output.WriteRawTag(96);
        output.WriteBool(PoorGuestBehavior);
      }
      if (HasVideoIssue) {
        output.WriteRawTag(104);
        output.WriteBool(VideoIssue);
      }
      if (HasSide) {
        output.WriteRawTag(114);
        output.WriteString(Side);
      }
      if (HasUserType) {
        output.WriteRawTag(122);
        output.WriteString(UserType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAudioIssue) {
        output.WriteRawTag(8);
        output.WriteBool(AudioIssue);
      }
      if (HasInputLag) {
        output.WriteRawTag(16);
        output.WriteBool(InputLag);
      }
      if (HasInvitationFailed) {
        output.WriteRawTag(24);
        output.WriteBool(InvitationFailed);
      }
      if (HasOther) {
        output.WriteRawTag(32);
        output.WriteBool(Other);
      }
      if (HasPoorConnection) {
        output.WriteRawTag(40);
        output.WriteBool(PoorConnection);
      }
      if (HasRating) {
        output.WriteRawTag(48);
        output.WriteUInt32(Rating);
      }
      if (HasInputSource) {
        output.WriteRawTag(58);
        output.WriteString(InputSource);
      }
      if (HasBrand) {
        output.WriteRawTag(64);
        output.WriteUInt32(Brand);
      }
      if (HasInvitationId) {
        output.WriteRawTag(74);
        output.WriteString(InvitationId);
      }
      if (HasHostPerformanceIssue) {
        output.WriteRawTag(80);
        output.WriteBool(HostPerformanceIssue);
      }
      if (HasGuestPerformanceIssue) {
        output.WriteRawTag(88);
        output.WriteBool(GuestPerformanceIssue);
      }
      if (HasPoorGuestBehavior) {
        output.WriteRawTag(96);
        output.WriteBool(PoorGuestBehavior);
      }
      if (HasVideoIssue) {
        output.WriteRawTag(104);
        output.WriteBool(VideoIssue);
      }
      if (HasSide) {
        output.WriteRawTag(114);
        output.WriteString(Side);
      }
      if (HasUserType) {
        output.WriteRawTag(122);
        output.WriteString(UserType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAudioIssue) {
        size += 1 + 1;
      }
      if (HasInputLag) {
        size += 1 + 1;
      }
      if (HasInvitationFailed) {
        size += 1 + 1;
      }
      if (HasOther) {
        size += 1 + 1;
      }
      if (HasPoorConnection) {
        size += 1 + 1;
      }
      if (HasRating) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rating);
      }
      if (HasInputSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputSource);
      }
      if (HasBrand) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Brand);
      }
      if (HasInvitationId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitationId);
      }
      if (HasHostPerformanceIssue) {
        size += 1 + 1;
      }
      if (HasGuestPerformanceIssue) {
        size += 1 + 1;
      }
      if (HasPoorGuestBehavior) {
        size += 1 + 1;
      }
      if (HasVideoIssue) {
        size += 1 + 1;
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasUserType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingFeedBackData other) {
      if (other == null) {
        return;
      }
      if (other.HasAudioIssue) {
        AudioIssue = other.AudioIssue;
      }
      if (other.HasInputLag) {
        InputLag = other.InputLag;
      }
      if (other.HasInvitationFailed) {
        InvitationFailed = other.InvitationFailed;
      }
      if (other.HasOther) {
        Other = other.Other;
      }
      if (other.HasPoorConnection) {
        PoorConnection = other.PoorConnection;
      }
      if (other.HasRating) {
        Rating = other.Rating;
      }
      if (other.HasInputSource) {
        InputSource = other.InputSource;
      }
      if (other.HasBrand) {
        Brand = other.Brand;
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      if (other.HasHostPerformanceIssue) {
        HostPerformanceIssue = other.HostPerformanceIssue;
      }
      if (other.HasGuestPerformanceIssue) {
        GuestPerformanceIssue = other.GuestPerformanceIssue;
      }
      if (other.HasPoorGuestBehavior) {
        PoorGuestBehavior = other.PoorGuestBehavior;
      }
      if (other.HasVideoIssue) {
        VideoIssue = other.VideoIssue;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasUserType) {
        UserType = other.UserType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AudioIssue = input.ReadBool();
            break;
          }
          case 16: {
            InputLag = input.ReadBool();
            break;
          }
          case 24: {
            InvitationFailed = input.ReadBool();
            break;
          }
          case 32: {
            Other = input.ReadBool();
            break;
          }
          case 40: {
            PoorConnection = input.ReadBool();
            break;
          }
          case 48: {
            Rating = input.ReadUInt32();
            break;
          }
          case 58: {
            InputSource = input.ReadString();
            break;
          }
          case 64: {
            Brand = input.ReadUInt32();
            break;
          }
          case 74: {
            InvitationId = input.ReadString();
            break;
          }
          case 80: {
            HostPerformanceIssue = input.ReadBool();
            break;
          }
          case 88: {
            GuestPerformanceIssue = input.ReadBool();
            break;
          }
          case 96: {
            PoorGuestBehavior = input.ReadBool();
            break;
          }
          case 104: {
            VideoIssue = input.ReadBool();
            break;
          }
          case 114: {
            Side = input.ReadString();
            break;
          }
          case 122: {
            UserType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AudioIssue = input.ReadBool();
            break;
          }
          case 16: {
            InputLag = input.ReadBool();
            break;
          }
          case 24: {
            InvitationFailed = input.ReadBool();
            break;
          }
          case 32: {
            Other = input.ReadBool();
            break;
          }
          case 40: {
            PoorConnection = input.ReadBool();
            break;
          }
          case 48: {
            Rating = input.ReadUInt32();
            break;
          }
          case 58: {
            InputSource = input.ReadString();
            break;
          }
          case 64: {
            Brand = input.ReadUInt32();
            break;
          }
          case 74: {
            InvitationId = input.ReadString();
            break;
          }
          case 80: {
            HostPerformanceIssue = input.ReadBool();
            break;
          }
          case 88: {
            GuestPerformanceIssue = input.ReadBool();
            break;
          }
          case 96: {
            PoorGuestBehavior = input.ReadBool();
            break;
          }
          case 104: {
            VideoIssue = input.ReadBool();
            break;
          }
          case 114: {
            Side = input.ReadString();
            break;
          }
          case 122: {
            UserType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingHostOutOfFocusStartData : pb::IMessage<StreamingHostOutOfFocusStartData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingHostOutOfFocusStartData> _parser = new pb::MessageParser<StreamingHostOutOfFocusStartData>(() => new StreamingHostOutOfFocusStartData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingHostOutOfFocusStartData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostOutOfFocusStartData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostOutOfFocusStartData(StreamingHostOutOfFocusStartData other) : this() {
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      spaceIdGame_ = other.spaceIdGame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostOutOfFocusStartData Clone() {
      return new StreamingHostOutOfFocusStartData(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 3;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingHostOutOfFocusStartData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingHostOutOfFocusStartData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingHostOutOfFocusStartData other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingHostOutOfFocusStopData : pb::IMessage<StreamingHostOutOfFocusStopData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingHostOutOfFocusStopData> _parser = new pb::MessageParser<StreamingHostOutOfFocusStopData>(() => new StreamingHostOutOfFocusStopData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingHostOutOfFocusStopData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostOutOfFocusStopData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostOutOfFocusStopData(StreamingHostOutOfFocusStopData other) : this() {
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      spaceIdGame_ = other.spaceIdGame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostOutOfFocusStopData Clone() {
      return new StreamingHostOutOfFocusStopData(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 3;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingHostOutOfFocusStopData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingHostOutOfFocusStopData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingHostOutOfFocusStopData other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingVGPEvent : pb::IMessage<StreamingVGPEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingVGPEvent> _parser = new pb::MessageParser<StreamingVGPEvent>(() => new StreamingVGPEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingVGPEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingVGPEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingVGPEvent(StreamingVGPEvent other) : this() {
      _hasBits0 = other._hasBits0;
      deviceId_ = other.deviceId_;
      deviceName_ = other.deviceName_;
      deviceType_ = other.deviceType_;
      guestProfileId_ = other.guestProfileId_;
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      spaceIdGame_ = other.spaceIdGame_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingVGPEvent Clone() {
      return new StreamingVGPEvent(this);
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private readonly static uint DeviceIdDefaultValue = 0;

    private uint deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeviceId {
      get { if ((_hasBits0 & 1) != 0) { return deviceId_; } else { return DeviceIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deviceId_ = value;
      }
    }
    /// <summary>Gets whether the "deviceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deviceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deviceName" field.</summary>
    public const int DeviceNameFieldNumber = 2;
    private readonly static string DeviceNameDefaultValue = "";

    private string deviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_ ?? DeviceNameDefaultValue; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "deviceName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceName {
      get { return deviceName_ != null; }
    }
    /// <summary>Clears the value of the "deviceName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceName() {
      deviceName_ = null;
    }

    /// <summary>Field number for the "deviceType" field.</summary>
    public const int DeviceTypeFieldNumber = 3;
    private readonly static string DeviceTypeDefaultValue = "";

    private string deviceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceType {
      get { return deviceType_ ?? DeviceTypeDefaultValue; }
      set {
        deviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "deviceType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceType {
      get { return deviceType_ != null; }
    }
    /// <summary>Clears the value of the "deviceType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceType() {
      deviceType_ = null;
    }

    /// <summary>Field number for the "guestProfileId" field.</summary>
    public const int GuestProfileIdFieldNumber = 4;
    private readonly static string GuestProfileIdDefaultValue = "";

    private string guestProfileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GuestProfileId {
      get { return guestProfileId_ ?? GuestProfileIdDefaultValue; }
      set {
        guestProfileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "guestProfileId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuestProfileId {
      get { return guestProfileId_ != null; }
    }
    /// <summary>Clears the value of the "guestProfileId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuestProfileId() {
      guestProfileId_ = null;
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 5;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 6;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 7;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 8;
    private readonly static string StateDefaultValue = "";

    private string state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string State {
      get { return state_ ?? StateDefaultValue; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return state_ != null; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      state_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingVGPEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingVGPEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DeviceType != other.DeviceType) return false;
      if (GuestProfileId != other.GuestProfileId) return false;
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (HasDeviceName) hash ^= DeviceName.GetHashCode();
      if (HasDeviceType) hash ^= DeviceType.GetHashCode();
      if (HasGuestProfileId) hash ^= GuestProfileId.GetHashCode();
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDeviceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DeviceId);
      }
      if (HasDeviceName) {
        output.WriteRawTag(18);
        output.WriteString(DeviceName);
      }
      if (HasDeviceType) {
        output.WriteRawTag(26);
        output.WriteString(DeviceType);
      }
      if (HasGuestProfileId) {
        output.WriteRawTag(34);
        output.WriteString(GuestProfileId);
      }
      if (HasHostPeerId) {
        output.WriteRawTag(42);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(50);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(58);
        output.WriteString(SpaceIdGame);
      }
      if (HasState) {
        output.WriteRawTag(66);
        output.WriteString(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeviceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DeviceId);
      }
      if (HasDeviceName) {
        output.WriteRawTag(18);
        output.WriteString(DeviceName);
      }
      if (HasDeviceType) {
        output.WriteRawTag(26);
        output.WriteString(DeviceType);
      }
      if (HasGuestProfileId) {
        output.WriteRawTag(34);
        output.WriteString(GuestProfileId);
      }
      if (HasHostPeerId) {
        output.WriteRawTag(42);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(50);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(58);
        output.WriteString(SpaceIdGame);
      }
      if (HasState) {
        output.WriteRawTag(66);
        output.WriteString(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
      }
      if (HasDeviceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (HasDeviceType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceType);
      }
      if (HasGuestProfileId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GuestProfileId);
      }
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingVGPEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      if (other.HasDeviceName) {
        DeviceName = other.DeviceName;
      }
      if (other.HasDeviceType) {
        DeviceType = other.DeviceType;
      }
      if (other.HasGuestProfileId) {
        GuestProfileId = other.GuestProfileId;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      if (other.HasState) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 18: {
            DeviceName = input.ReadString();
            break;
          }
          case 26: {
            DeviceType = input.ReadString();
            break;
          }
          case 34: {
            GuestProfileId = input.ReadString();
            break;
          }
          case 42: {
            HostPeerId = input.ReadString();
            break;
          }
          case 50: {
            Side = input.ReadString();
            break;
          }
          case 58: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 66: {
            State = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 18: {
            DeviceName = input.ReadString();
            break;
          }
          case 26: {
            DeviceType = input.ReadString();
            break;
          }
          case 34: {
            GuestProfileId = input.ReadString();
            break;
          }
          case 42: {
            HostPeerId = input.ReadString();
            break;
          }
          case 50: {
            Side = input.ReadString();
            break;
          }
          case 58: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 66: {
            State = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingHostLinkCreatedEvent : pb::IMessage<StreamingHostLinkCreatedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingHostLinkCreatedEvent> _parser = new pb::MessageParser<StreamingHostLinkCreatedEvent>(() => new StreamingHostLinkCreatedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingHostLinkCreatedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostLinkCreatedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostLinkCreatedEvent(StreamingHostLinkCreatedEvent other) : this() {
      hostPeerId_ = other.hostPeerId_;
      spaceIdGame_ = other.spaceIdGame_;
      source_ = other.source_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingHostLinkCreatedEvent Clone() {
      return new StreamingHostLinkCreatedEvent(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 2;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private readonly static string SourceDefaultValue = "";

    private string source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Source {
      get { return source_ ?? SourceDefaultValue; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSource {
      get { return source_ != null; }
    }
    /// <summary>Clears the value of the "source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingHostLinkCreatedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingHostLinkCreatedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      if (Source != other.Source) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (HasSource) hash ^= Source.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(18);
        output.WriteString(SpaceIdGame);
      }
      if (HasSource) {
        output.WriteRawTag(26);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(18);
        output.WriteString(SpaceIdGame);
      }
      if (HasSource) {
        output.WriteRawTag(26);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (HasSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingHostLinkCreatedEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      if (other.HasSource) {
        Source = other.Source;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 26: {
            Source = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 26: {
            Source = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventTypeData : pb::IMessage<EventTypeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventTypeData> _parser = new pb::MessageParser<EventTypeData>(() => new EventTypeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventTypeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventTypeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventTypeData(EventTypeData other) : this() {
      gameStart_ = other.gameStart_ != null ? other.gameStart_.Clone() : null;
      gameLocalization_ = other.gameLocalization_ != null ? other.gameLocalization_.Clone() : null;
      contextStart_ = other.contextStart_ != null ? other.contextStart_.Clone() : null;
      contextStop_ = other.contextStop_ != null ? other.contextStop_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventTypeData Clone() {
      return new EventTypeData(this);
    }

    /// <summary>Field number for the "gameStart" field.</summary>
    public const int GameStartFieldNumber = 1;
    private global::Uplay.Statistics.GameStartTypeData gameStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameStartTypeData GameStart {
      get { return gameStart_; }
      set {
        gameStart_ = value;
      }
    }

    /// <summary>Field number for the "gameLocalization" field.</summary>
    public const int GameLocalizationFieldNumber = 2;
    private global::Uplay.Statistics.GameLocalizationTypeData gameLocalization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameLocalizationTypeData GameLocalization {
      get { return gameLocalization_; }
      set {
        gameLocalization_ = value;
      }
    }

    /// <summary>Field number for the "contextStart" field.</summary>
    public const int ContextStartFieldNumber = 3;
    private global::Uplay.Statistics.ContextStartTypeData contextStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.ContextStartTypeData ContextStart {
      get { return contextStart_; }
      set {
        contextStart_ = value;
      }
    }

    /// <summary>Field number for the "contextStop" field.</summary>
    public const int ContextStopFieldNumber = 4;
    private global::Uplay.Statistics.ContextStopTypeData contextStop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.ContextStopTypeData ContextStop {
      get { return contextStop_; }
      set {
        contextStop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventTypeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventTypeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameStart, other.GameStart)) return false;
      if (!object.Equals(GameLocalization, other.GameLocalization)) return false;
      if (!object.Equals(ContextStart, other.ContextStart)) return false;
      if (!object.Equals(ContextStop, other.ContextStop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gameStart_ != null) hash ^= GameStart.GetHashCode();
      if (gameLocalization_ != null) hash ^= GameLocalization.GetHashCode();
      if (contextStart_ != null) hash ^= ContextStart.GetHashCode();
      if (contextStop_ != null) hash ^= ContextStop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameStart_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameStart);
      }
      if (gameLocalization_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GameLocalization);
      }
      if (contextStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContextStart);
      }
      if (contextStop_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ContextStop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameStart_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameStart);
      }
      if (gameLocalization_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GameLocalization);
      }
      if (contextStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContextStart);
      }
      if (contextStop_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ContextStop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gameStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameStart);
      }
      if (gameLocalization_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameLocalization);
      }
      if (contextStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContextStart);
      }
      if (contextStop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContextStop);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventTypeData other) {
      if (other == null) {
        return;
      }
      if (other.gameStart_ != null) {
        if (gameStart_ == null) {
          GameStart = new global::Uplay.Statistics.GameStartTypeData();
        }
        GameStart.MergeFrom(other.GameStart);
      }
      if (other.gameLocalization_ != null) {
        if (gameLocalization_ == null) {
          GameLocalization = new global::Uplay.Statistics.GameLocalizationTypeData();
        }
        GameLocalization.MergeFrom(other.GameLocalization);
      }
      if (other.contextStart_ != null) {
        if (contextStart_ == null) {
          ContextStart = new global::Uplay.Statistics.ContextStartTypeData();
        }
        ContextStart.MergeFrom(other.ContextStart);
      }
      if (other.contextStop_ != null) {
        if (contextStop_ == null) {
          ContextStop = new global::Uplay.Statistics.ContextStopTypeData();
        }
        ContextStop.MergeFrom(other.ContextStop);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameStart_ == null) {
              GameStart = new global::Uplay.Statistics.GameStartTypeData();
            }
            input.ReadMessage(GameStart);
            break;
          }
          case 18: {
            if (gameLocalization_ == null) {
              GameLocalization = new global::Uplay.Statistics.GameLocalizationTypeData();
            }
            input.ReadMessage(GameLocalization);
            break;
          }
          case 26: {
            if (contextStart_ == null) {
              ContextStart = new global::Uplay.Statistics.ContextStartTypeData();
            }
            input.ReadMessage(ContextStart);
            break;
          }
          case 34: {
            if (contextStop_ == null) {
              ContextStop = new global::Uplay.Statistics.ContextStopTypeData();
            }
            input.ReadMessage(ContextStop);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameStart_ == null) {
              GameStart = new global::Uplay.Statistics.GameStartTypeData();
            }
            input.ReadMessage(GameStart);
            break;
          }
          case 18: {
            if (gameLocalization_ == null) {
              GameLocalization = new global::Uplay.Statistics.GameLocalizationTypeData();
            }
            input.ReadMessage(GameLocalization);
            break;
          }
          case 26: {
            if (contextStart_ == null) {
              ContextStart = new global::Uplay.Statistics.ContextStartTypeData();
            }
            input.ReadMessage(ContextStart);
            break;
          }
          case 34: {
            if (contextStop_ == null) {
              ContextStop = new global::Uplay.Statistics.ContextStopTypeData();
            }
            input.ReadMessage(ContextStop);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemotePlayHostSessionStreamingStartData : pb::IMessage<RemotePlayHostSessionStreamingStartData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemotePlayHostSessionStreamingStartData> _parser = new pb::MessageParser<RemotePlayHostSessionStreamingStartData>(() => new RemotePlayHostSessionStreamingStartData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RemotePlayHostSessionStreamingStartData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlayHostSessionStreamingStartData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlayHostSessionStreamingStartData(RemotePlayHostSessionStreamingStartData other) : this() {
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      spaceIdGame_ = other.spaceIdGame_;
      streamingService_ = other.streamingService_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlayHostSessionStreamingStartData Clone() {
      return new RemotePlayHostSessionStreamingStartData(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 3;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    /// <summary>Field number for the "streamingService" field.</summary>
    public const int StreamingServiceFieldNumber = 4;
    private readonly static string StreamingServiceDefaultValue = "";

    private string streamingService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamingService {
      get { return streamingService_ ?? StreamingServiceDefaultValue; }
      set {
        streamingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "streamingService" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamingService {
      get { return streamingService_ != null; }
    }
    /// <summary>Clears the value of the "streamingService" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingService() {
      streamingService_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RemotePlayHostSessionStreamingStartData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RemotePlayHostSessionStreamingStartData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      if (StreamingService != other.StreamingService) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (HasStreamingService) hash ^= StreamingService.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasStreamingService) {
        output.WriteRawTag(34);
        output.WriteString(StreamingService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasStreamingService) {
        output.WriteRawTag(34);
        output.WriteString(StreamingService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (HasStreamingService) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamingService);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RemotePlayHostSessionStreamingStartData other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      if (other.HasStreamingService) {
        StreamingService = other.StreamingService;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 34: {
            StreamingService = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 34: {
            StreamingService = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemotePlayHostSessionStreamingStopData : pb::IMessage<RemotePlayHostSessionStreamingStopData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemotePlayHostSessionStreamingStopData> _parser = new pb::MessageParser<RemotePlayHostSessionStreamingStopData>(() => new RemotePlayHostSessionStreamingStopData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RemotePlayHostSessionStreamingStopData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlayHostSessionStreamingStopData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlayHostSessionStreamingStopData(RemotePlayHostSessionStreamingStopData other) : this() {
      hostPeerId_ = other.hostPeerId_;
      side_ = other.side_;
      spaceIdGame_ = other.spaceIdGame_;
      streamingService_ = other.streamingService_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlayHostSessionStreamingStopData Clone() {
      return new RemotePlayHostSessionStreamingStopData(this);
    }

    /// <summary>Field number for the "hostPeerId" field.</summary>
    public const int HostPeerIdFieldNumber = 1;
    private readonly static string HostPeerIdDefaultValue = "";

    private string hostPeerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostPeerId {
      get { return hostPeerId_ ?? HostPeerIdDefaultValue; }
      set {
        hostPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostPeerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPeerId {
      get { return hostPeerId_ != null; }
    }
    /// <summary>Clears the value of the "hostPeerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPeerId() {
      hostPeerId_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "spaceIdGame" field.</summary>
    public const int SpaceIdGameFieldNumber = 3;
    private readonly static string SpaceIdGameDefaultValue = "";

    private string spaceIdGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpaceIdGame {
      get { return spaceIdGame_ ?? SpaceIdGameDefaultValue; }
      set {
        spaceIdGame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "spaceIdGame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpaceIdGame {
      get { return spaceIdGame_ != null; }
    }
    /// <summary>Clears the value of the "spaceIdGame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpaceIdGame() {
      spaceIdGame_ = null;
    }

    /// <summary>Field number for the "streamingService" field.</summary>
    public const int StreamingServiceFieldNumber = 4;
    private readonly static string StreamingServiceDefaultValue = "";

    private string streamingService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamingService {
      get { return streamingService_ ?? StreamingServiceDefaultValue; }
      set {
        streamingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "streamingService" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamingService {
      get { return streamingService_ != null; }
    }
    /// <summary>Clears the value of the "streamingService" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingService() {
      streamingService_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RemotePlayHostSessionStreamingStopData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RemotePlayHostSessionStreamingStopData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostPeerId != other.HostPeerId) return false;
      if (Side != other.Side) return false;
      if (SpaceIdGame != other.SpaceIdGame) return false;
      if (StreamingService != other.StreamingService) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostPeerId) hash ^= HostPeerId.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasSpaceIdGame) hash ^= SpaceIdGame.GetHashCode();
      if (HasStreamingService) hash ^= StreamingService.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasStreamingService) {
        output.WriteRawTag(34);
        output.WriteString(StreamingService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostPeerId) {
        output.WriteRawTag(10);
        output.WriteString(HostPeerId);
      }
      if (HasSide) {
        output.WriteRawTag(18);
        output.WriteString(Side);
      }
      if (HasSpaceIdGame) {
        output.WriteRawTag(26);
        output.WriteString(SpaceIdGame);
      }
      if (HasStreamingService) {
        output.WriteRawTag(34);
        output.WriteString(StreamingService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostPeerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostPeerId);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasSpaceIdGame) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpaceIdGame);
      }
      if (HasStreamingService) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamingService);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RemotePlayHostSessionStreamingStopData other) {
      if (other == null) {
        return;
      }
      if (other.HasHostPeerId) {
        HostPeerId = other.HostPeerId;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasSpaceIdGame) {
        SpaceIdGame = other.SpaceIdGame;
      }
      if (other.HasStreamingService) {
        StreamingService = other.StreamingService;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 34: {
            StreamingService = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostPeerId = input.ReadString();
            break;
          }
          case 18: {
            Side = input.ReadString();
            break;
          }
          case 26: {
            SpaceIdGame = input.ReadString();
            break;
          }
          case 34: {
            StreamingService = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventObjectData : pb::IMessage<EventObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventObjectData> _parser = new pb::MessageParser<EventObjectData>(() => new EventObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventObjectData(EventObjectData other) : this() {
      gameLaunch_ = other.gameLaunch_ != null ? other.gameLaunch_.Clone() : null;
      uiNav_ = other.uiNav_ != null ? other.uiNav_.Clone() : null;
      appStart_ = other.appStart_ != null ? other.appStart_.Clone() : null;
      download_ = other.download_ != null ? other.download_.Clone() : null;
      followLink_ = other.followLink_ != null ? other.followLink_.Clone() : null;
      gameCloudSaveSync_ = other.gameCloudSaveSync_ != null ? other.gameCloudSaveSync_.Clone() : null;
      settingChanged_ = other.settingChanged_ != null ? other.settingChanged_.Clone() : null;
      machineConf_ = other.machineConf_ != null ? other.machineConf_.Clone() : null;
      dlError_ = other.dlError_ != null ? other.dlError_.Clone() : null;
      appQuit_ = other.appQuit_ != null ? other.appQuit_.Clone() : null;
      decompressSliceError_ = other.decompressSliceError_ != null ? other.decompressSliceError_.Clone() : null;
      gameEnd_ = other.gameEnd_ != null ? other.gameEnd_.Clone() : null;
      httpServiceRequest_ = other.httpServiceRequest_ != null ? other.httpServiceRequest_.Clone() : null;
      importSteamFriends_ = other.importSteamFriends_ != null ? other.importSteamFriends_.Clone() : null;
      activateProduct_ = other.activateProduct_ != null ? other.activateProduct_.Clone() : null;
      friendAction_ = other.friendAction_ != null ? other.friendAction_.Clone() : null;
      redeemReward_ = other.redeemReward_ != null ? other.redeemReward_.Clone() : null;
      accountCreation_ = other.accountCreation_ != null ? other.accountCreation_.Clone() : null;
      streamingSession_ = other.streamingSession_ != null ? other.streamingSession_.Clone() : null;
      accountLinking_ = other.accountLinking_ != null ? other.accountLinking_.Clone() : null;
      chatSession_ = other.chatSession_ != null ? other.chatSession_.Clone() : null;
      party_ = other.party_ != null ? other.party_.Clone() : null;
      challengeAction_ = other.challengeAction_ != null ? other.challengeAction_.Clone() : null;
      newsClick_ = other.newsClick_ != null ? other.newsClick_.Clone() : null;
      newsImpression_ = other.newsImpression_ != null ? other.newsImpression_.Clone() : null;
      newsInteraction_ = other.newsInteraction_ != null ? other.newsInteraction_.Clone() : null;
      shopAddToCart_ = other.shopAddToCart_ != null ? other.shopAddToCart_.Clone() : null;
      ticketRenewalFailure_ = other.ticketRenewalFailure_ != null ? other.ticketRenewalFailure_.Clone() : null;
      groupAction_ = other.groupAction_ != null ? other.groupAction_.Clone() : null;
      diagnostic_ = other.diagnostic_ != null ? other.diagnostic_.Clone() : null;
      ingameShopAction_ = other.ingameShopAction_ != null ? other.ingameShopAction_.Clone() : null;
      ingameShopImpression_ = other.ingameShopImpression_ != null ? other.ingameShopImpression_.Clone() : null;
      promoTabInteraction_ = other.promoTabInteraction_ != null ? other.promoTabInteraction_.Clone() : null;
      emailVerification_ = other.emailVerification_ != null ? other.emailVerification_.Clone() : null;
      twoFAActivation_ = other.twoFAActivation_ != null ? other.twoFAActivation_.Clone() : null;
      adImpression_ = other.adImpression_ != null ? other.adImpression_.Clone() : null;
      popUpDisplayEvent_ = other.popUpDisplayEvent_ != null ? other.popUpDisplayEvent_.Clone() : null;
      newsOpen_ = other.newsOpen_ != null ? other.newsOpen_.Clone() : null;
      battlePassAction_ = other.battlePassAction_ != null ? other.battlePassAction_.Clone() : null;
      trustedDeviceAction_ = other.trustedDeviceAction_ != null ? other.trustedDeviceAction_.Clone() : null;
      friendSuggestionAction_ = other.friendSuggestionAction_ != null ? other.friendSuggestionAction_.Clone() : null;
      friendSuggestionImpression_ = other.friendSuggestionImpression_ != null ? other.friendSuggestionImpression_.Clone() : null;
      phoneSecurity_ = other.phoneSecurity_ != null ? other.phoneSecurity_.Clone() : null;
      sendSmsAction_ = other.sendSmsAction_ != null ? other.sendSmsAction_.Clone() : null;
      sharePlaySessionStart_ = other.sharePlaySessionStart_ != null ? other.sharePlaySessionStart_.Clone() : null;
      sharePlaySessionStop_ = other.sharePlaySessionStop_ != null ? other.sharePlaySessionStop_.Clone() : null;
      sharePlayHostPage_ = other.sharePlayHostPage_ != null ? other.sharePlayHostPage_.Clone() : null;
      sharePlayGuestInvitation_ = other.sharePlayGuestInvitation_ != null ? other.sharePlayGuestInvitation_.Clone() : null;
      sharePlayHostInvitation_ = other.sharePlayHostInvitation_ != null ? other.sharePlayHostInvitation_.Clone() : null;
      sharePlayHostError_ = other.sharePlayHostError_ != null ? other.sharePlayHostError_.Clone() : null;
      sharePlayHostSettings_ = other.sharePlayHostSettings_ != null ? other.sharePlayHostSettings_.Clone() : null;
      sharePlayOnboarding_ = other.sharePlayOnboarding_ != null ? other.sharePlayOnboarding_.Clone() : null;
      streamingHostOutOfFocusStart_ = other.streamingHostOutOfFocusStart_ != null ? other.streamingHostOutOfFocusStart_.Clone() : null;
      streamingHostOutOfFocusStop_ = other.streamingHostOutOfFocusStop_ != null ? other.streamingHostOutOfFocusStop_.Clone() : null;
      streamingFeedBack_ = other.streamingFeedBack_ != null ? other.streamingFeedBack_.Clone() : null;
      streamingHostStartSession_ = other.streamingHostStartSession_ != null ? other.streamingHostStartSession_.Clone() : null;
      streamingHostStopSession_ = other.streamingHostStopSession_ != null ? other.streamingHostStopSession_.Clone() : null;
      streamingError_ = other.streamingError_ != null ? other.streamingError_.Clone() : null;
      streamingHostSessionSettings_ = other.streamingHostSessionSettings_ != null ? other.streamingHostSessionSettings_.Clone() : null;
      streamingVGPEvent_ = other.streamingVGPEvent_ != null ? other.streamingVGPEvent_.Clone() : null;
      streamingHostLinkCreated_ = other.streamingHostLinkCreated_ != null ? other.streamingHostLinkCreated_.Clone() : null;
      remotePlaySessionStart_ = other.remotePlaySessionStart_ != null ? other.remotePlaySessionStart_.Clone() : null;
      remotePlaySessionStop_ = other.remotePlaySessionStop_ != null ? other.remotePlaySessionStop_.Clone() : null;
      streamingStatus_ = other.streamingStatus_ != null ? other.streamingStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventObjectData Clone() {
      return new EventObjectData(this);
    }

    /// <summary>Field number for the "gameLaunch" field.</summary>
    public const int GameLaunchFieldNumber = 1;
    private global::Uplay.Statistics.GameLaunchObjectData gameLaunch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameLaunchObjectData GameLaunch {
      get { return gameLaunch_; }
      set {
        gameLaunch_ = value;
      }
    }

    /// <summary>Field number for the "uiNav" field.</summary>
    public const int UiNavFieldNumber = 2;
    private global::Uplay.Statistics.UINavObjectData uiNav_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.UINavObjectData UiNav {
      get { return uiNav_; }
      set {
        uiNav_ = value;
      }
    }

    /// <summary>Field number for the "appStart" field.</summary>
    public const int AppStartFieldNumber = 3;
    private global::Uplay.Statistics.AppStartObjectData appStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.AppStartObjectData AppStart {
      get { return appStart_; }
      set {
        appStart_ = value;
      }
    }

    /// <summary>Field number for the "download" field.</summary>
    public const int DownloadFieldNumber = 4;
    private global::Uplay.Statistics.DownloadObjectData download_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.DownloadObjectData Download {
      get { return download_; }
      set {
        download_ = value;
      }
    }

    /// <summary>Field number for the "followLink" field.</summary>
    public const int FollowLinkFieldNumber = 5;
    private global::Uplay.Statistics.FollowLinkObjectData followLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.FollowLinkObjectData FollowLink {
      get { return followLink_; }
      set {
        followLink_ = value;
      }
    }

    /// <summary>Field number for the "gameCloudSaveSync" field.</summary>
    public const int GameCloudSaveSyncFieldNumber = 6;
    private global::Uplay.Statistics.GameCloudSaveSyncObjectData gameCloudSaveSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameCloudSaveSyncObjectData GameCloudSaveSync {
      get { return gameCloudSaveSync_; }
      set {
        gameCloudSaveSync_ = value;
      }
    }

    /// <summary>Field number for the "settingChanged" field.</summary>
    public const int SettingChangedFieldNumber = 7;
    private global::Uplay.Statistics.SettingChangedObjectData settingChanged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SettingChangedObjectData SettingChanged {
      get { return settingChanged_; }
      set {
        settingChanged_ = value;
      }
    }

    /// <summary>Field number for the "machineConf" field.</summary>
    public const int MachineConfFieldNumber = 8;
    private global::Uplay.Statistics.MachineConfObjectData machineConf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.MachineConfObjectData MachineConf {
      get { return machineConf_; }
      set {
        machineConf_ = value;
      }
    }

    /// <summary>Field number for the "dlError" field.</summary>
    public const int DlErrorFieldNumber = 9;
    private global::Uplay.Statistics.DLErrorObjectData dlError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.DLErrorObjectData DlError {
      get { return dlError_; }
      set {
        dlError_ = value;
      }
    }

    /// <summary>Field number for the "appQuit" field.</summary>
    public const int AppQuitFieldNumber = 10;
    private global::Uplay.Statistics.AppQuitObjectData appQuit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.AppQuitObjectData AppQuit {
      get { return appQuit_; }
      set {
        appQuit_ = value;
      }
    }

    /// <summary>Field number for the "decompressSliceError" field.</summary>
    public const int DecompressSliceErrorFieldNumber = 11;
    private global::Uplay.Statistics.DecompressSliceErrorObjectData decompressSliceError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.DecompressSliceErrorObjectData DecompressSliceError {
      get { return decompressSliceError_; }
      set {
        decompressSliceError_ = value;
      }
    }

    /// <summary>Field number for the "gameEnd" field.</summary>
    public const int GameEndFieldNumber = 12;
    private global::Uplay.Statistics.GameEndObjectData gameEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GameEndObjectData GameEnd {
      get { return gameEnd_; }
      set {
        gameEnd_ = value;
      }
    }

    /// <summary>Field number for the "httpServiceRequest" field.</summary>
    public const int HttpServiceRequestFieldNumber = 13;
    private global::Uplay.Statistics.HttpServiceRequestObjectData httpServiceRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.HttpServiceRequestObjectData HttpServiceRequest {
      get { return httpServiceRequest_; }
      set {
        httpServiceRequest_ = value;
      }
    }

    /// <summary>Field number for the "importSteamFriends" field.</summary>
    public const int ImportSteamFriendsFieldNumber = 14;
    private global::Uplay.Statistics.ImportSteamFriendsObjectData importSteamFriends_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.ImportSteamFriendsObjectData ImportSteamFriends {
      get { return importSteamFriends_; }
      set {
        importSteamFriends_ = value;
      }
    }

    /// <summary>Field number for the "activateProduct" field.</summary>
    public const int ActivateProductFieldNumber = 15;
    private global::Uplay.Statistics.ActivateProductObjectData activateProduct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.ActivateProductObjectData ActivateProduct {
      get { return activateProduct_; }
      set {
        activateProduct_ = value;
      }
    }

    /// <summary>Field number for the "friendAction" field.</summary>
    public const int FriendActionFieldNumber = 16;
    private global::Uplay.Statistics.FriendActionObjectData friendAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.FriendActionObjectData FriendAction {
      get { return friendAction_; }
      set {
        friendAction_ = value;
      }
    }

    /// <summary>Field number for the "redeemReward" field.</summary>
    public const int RedeemRewardFieldNumber = 17;
    private global::Uplay.Statistics.RedeemRewardObjectData redeemReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.RedeemRewardObjectData RedeemReward {
      get { return redeemReward_; }
      set {
        redeemReward_ = value;
      }
    }

    /// <summary>Field number for the "accountCreation" field.</summary>
    public const int AccountCreationFieldNumber = 18;
    private global::Uplay.Statistics.AccountCreationObjectData accountCreation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.AccountCreationObjectData AccountCreation {
      get { return accountCreation_; }
      set {
        accountCreation_ = value;
      }
    }

    /// <summary>Field number for the "streamingSession" field.</summary>
    public const int StreamingSessionFieldNumber = 19;
    private global::Uplay.Statistics.StreamingSessionObjectData streamingSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingSessionObjectData StreamingSession {
      get { return streamingSession_; }
      set {
        streamingSession_ = value;
      }
    }

    /// <summary>Field number for the "accountLinking" field.</summary>
    public const int AccountLinkingFieldNumber = 20;
    private global::Uplay.Statistics.AccountLinkingObjectData accountLinking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.AccountLinkingObjectData AccountLinking {
      get { return accountLinking_; }
      set {
        accountLinking_ = value;
      }
    }

    /// <summary>Field number for the "chatSession" field.</summary>
    public const int ChatSessionFieldNumber = 21;
    private global::Uplay.Statistics.ChatSessionObjectData chatSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.ChatSessionObjectData ChatSession {
      get { return chatSession_; }
      set {
        chatSession_ = value;
      }
    }

    /// <summary>Field number for the "party" field.</summary>
    public const int PartyFieldNumber = 22;
    private global::Uplay.Statistics.PartyObjectData party_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.PartyObjectData Party {
      get { return party_; }
      set {
        party_ = value;
      }
    }

    /// <summary>Field number for the "challengeAction" field.</summary>
    public const int ChallengeActionFieldNumber = 23;
    private global::Uplay.Statistics.ChallengeActionObjectData challengeAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.ChallengeActionObjectData ChallengeAction {
      get { return challengeAction_; }
      set {
        challengeAction_ = value;
      }
    }

    /// <summary>Field number for the "newsClick" field.</summary>
    public const int NewsClickFieldNumber = 24;
    private global::Uplay.Statistics.NewsClickObjectData newsClick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.NewsClickObjectData NewsClick {
      get { return newsClick_; }
      set {
        newsClick_ = value;
      }
    }

    /// <summary>Field number for the "newsImpression" field.</summary>
    public const int NewsImpressionFieldNumber = 25;
    private global::Uplay.Statistics.NewsImpressionObjectData newsImpression_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.NewsImpressionObjectData NewsImpression {
      get { return newsImpression_; }
      set {
        newsImpression_ = value;
      }
    }

    /// <summary>Field number for the "newsInteraction" field.</summary>
    public const int NewsInteractionFieldNumber = 26;
    private global::Uplay.Statistics.NewsInteractionObjectData newsInteraction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.NewsInteractionObjectData NewsInteraction {
      get { return newsInteraction_; }
      set {
        newsInteraction_ = value;
      }
    }

    /// <summary>Field number for the "shopAddToCart" field.</summary>
    public const int ShopAddToCartFieldNumber = 27;
    private global::Uplay.Statistics.ShopAddToCartObjectData shopAddToCart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.ShopAddToCartObjectData ShopAddToCart {
      get { return shopAddToCart_; }
      set {
        shopAddToCart_ = value;
      }
    }

    /// <summary>Field number for the "ticketRenewalFailure" field.</summary>
    public const int TicketRenewalFailureFieldNumber = 28;
    private global::Uplay.Statistics.TicketRenewalFailureObjectData ticketRenewalFailure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.TicketRenewalFailureObjectData TicketRenewalFailure {
      get { return ticketRenewalFailure_; }
      set {
        ticketRenewalFailure_ = value;
      }
    }

    /// <summary>Field number for the "groupAction" field.</summary>
    public const int GroupActionFieldNumber = 29;
    private global::Uplay.Statistics.GroupActionObjectData groupAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.GroupActionObjectData GroupAction {
      get { return groupAction_; }
      set {
        groupAction_ = value;
      }
    }

    /// <summary>Field number for the "diagnostic" field.</summary>
    public const int DiagnosticFieldNumber = 30;
    private global::Uplay.Statistics.DiagnosticObjectData diagnostic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.DiagnosticObjectData Diagnostic {
      get { return diagnostic_; }
      set {
        diagnostic_ = value;
      }
    }

    /// <summary>Field number for the "ingameShopAction" field.</summary>
    public const int IngameShopActionFieldNumber = 31;
    private global::Uplay.Statistics.IngameShopActionObjectData ingameShopAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.IngameShopActionObjectData IngameShopAction {
      get { return ingameShopAction_; }
      set {
        ingameShopAction_ = value;
      }
    }

    /// <summary>Field number for the "IngameShopImpression" field.</summary>
    public const int IngameShopImpressionFieldNumber = 32;
    private global::Uplay.Statistics.IngameShopImpressionObjectData ingameShopImpression_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.IngameShopImpressionObjectData IngameShopImpression {
      get { return ingameShopImpression_; }
      set {
        ingameShopImpression_ = value;
      }
    }

    /// <summary>Field number for the "promoTabInteraction" field.</summary>
    public const int PromoTabInteractionFieldNumber = 33;
    private global::Uplay.Statistics.PromoTabInteractionObjectData promoTabInteraction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.PromoTabInteractionObjectData PromoTabInteraction {
      get { return promoTabInteraction_; }
      set {
        promoTabInteraction_ = value;
      }
    }

    /// <summary>Field number for the "emailVerification" field.</summary>
    public const int EmailVerificationFieldNumber = 34;
    private global::Uplay.Statistics.EmailVerificationObjectData emailVerification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.EmailVerificationObjectData EmailVerification {
      get { return emailVerification_; }
      set {
        emailVerification_ = value;
      }
    }

    /// <summary>Field number for the "twoFAActivation" field.</summary>
    public const int TwoFAActivationFieldNumber = 35;
    private global::Uplay.Statistics.TwoFAActivationObjectData twoFAActivation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.TwoFAActivationObjectData TwoFAActivation {
      get { return twoFAActivation_; }
      set {
        twoFAActivation_ = value;
      }
    }

    /// <summary>Field number for the "adImpression" field.</summary>
    public const int AdImpressionFieldNumber = 36;
    private global::Uplay.Statistics.AdImpressionObjectData adImpression_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.AdImpressionObjectData AdImpression {
      get { return adImpression_; }
      set {
        adImpression_ = value;
      }
    }

    /// <summary>Field number for the "popUpDisplayEvent" field.</summary>
    public const int PopUpDisplayEventFieldNumber = 37;
    private global::Uplay.Statistics.PopUpDisplayEventObjectData popUpDisplayEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.PopUpDisplayEventObjectData PopUpDisplayEvent {
      get { return popUpDisplayEvent_; }
      set {
        popUpDisplayEvent_ = value;
      }
    }

    /// <summary>Field number for the "newsOpen" field.</summary>
    public const int NewsOpenFieldNumber = 38;
    private global::Uplay.Statistics.NewsOpenObjectData newsOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.NewsOpenObjectData NewsOpen {
      get { return newsOpen_; }
      set {
        newsOpen_ = value;
      }
    }

    /// <summary>Field number for the "battlePassAction" field.</summary>
    public const int BattlePassActionFieldNumber = 39;
    private global::Uplay.Statistics.BattlePassActionObjectData battlePassAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.BattlePassActionObjectData BattlePassAction {
      get { return battlePassAction_; }
      set {
        battlePassAction_ = value;
      }
    }

    /// <summary>Field number for the "trustedDeviceAction" field.</summary>
    public const int TrustedDeviceActionFieldNumber = 40;
    private global::Uplay.Statistics.TrustedDeviceActionData trustedDeviceAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.TrustedDeviceActionData TrustedDeviceAction {
      get { return trustedDeviceAction_; }
      set {
        trustedDeviceAction_ = value;
      }
    }

    /// <summary>Field number for the "friendSuggestionAction" field.</summary>
    public const int FriendSuggestionActionFieldNumber = 41;
    private global::Uplay.Statistics.FriendSuggestionActionObjectData friendSuggestionAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.FriendSuggestionActionObjectData FriendSuggestionAction {
      get { return friendSuggestionAction_; }
      set {
        friendSuggestionAction_ = value;
      }
    }

    /// <summary>Field number for the "friendSuggestionImpression" field.</summary>
    public const int FriendSuggestionImpressionFieldNumber = 42;
    private global::Uplay.Statistics.FriendSuggestionImpressionObjectData friendSuggestionImpression_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.FriendSuggestionImpressionObjectData FriendSuggestionImpression {
      get { return friendSuggestionImpression_; }
      set {
        friendSuggestionImpression_ = value;
      }
    }

    /// <summary>Field number for the "phoneSecurity" field.</summary>
    public const int PhoneSecurityFieldNumber = 43;
    private global::Uplay.Statistics.PhoneSecurityObjectData phoneSecurity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.PhoneSecurityObjectData PhoneSecurity {
      get { return phoneSecurity_; }
      set {
        phoneSecurity_ = value;
      }
    }

    /// <summary>Field number for the "SendSmsAction" field.</summary>
    public const int SendSmsActionFieldNumber = 44;
    private global::Uplay.Statistics.SendSmsTrackEventActionObjectData sendSmsAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SendSmsTrackEventActionObjectData SendSmsAction {
      get { return sendSmsAction_; }
      set {
        sendSmsAction_ = value;
      }
    }

    /// <summary>Field number for the "sharePlaySessionStart" field.</summary>
    public const int SharePlaySessionStartFieldNumber = 45;
    private global::Uplay.Statistics.SharePlayHostSessionStreamingStartData sharePlaySessionStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SharePlayHostSessionStreamingStartData SharePlaySessionStart {
      get { return sharePlaySessionStart_; }
      set {
        sharePlaySessionStart_ = value;
      }
    }

    /// <summary>Field number for the "sharePlaySessionStop" field.</summary>
    public const int SharePlaySessionStopFieldNumber = 46;
    private global::Uplay.Statistics.SharePlayHostSessionStreamingStopData sharePlaySessionStop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SharePlayHostSessionStreamingStopData SharePlaySessionStop {
      get { return sharePlaySessionStop_; }
      set {
        sharePlaySessionStop_ = value;
      }
    }

    /// <summary>Field number for the "sharePlayHostPage" field.</summary>
    public const int SharePlayHostPageFieldNumber = 47;
    private global::Uplay.Statistics.SharePlayHostPageData sharePlayHostPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SharePlayHostPageData SharePlayHostPage {
      get { return sharePlayHostPage_; }
      set {
        sharePlayHostPage_ = value;
      }
    }

    /// <summary>Field number for the "sharePlayGuestInvitation" field.</summary>
    public const int SharePlayGuestInvitationFieldNumber = 48;
    private global::Uplay.Statistics.SharePlayGuestInvitationData sharePlayGuestInvitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SharePlayGuestInvitationData SharePlayGuestInvitation {
      get { return sharePlayGuestInvitation_; }
      set {
        sharePlayGuestInvitation_ = value;
      }
    }

    /// <summary>Field number for the "sharePlayHostInvitation" field.</summary>
    public const int SharePlayHostInvitationFieldNumber = 49;
    private global::Uplay.Statistics.SharePlayHostInvitationData sharePlayHostInvitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SharePlayHostInvitationData SharePlayHostInvitation {
      get { return sharePlayHostInvitation_; }
      set {
        sharePlayHostInvitation_ = value;
      }
    }

    /// <summary>Field number for the "sharePlayHostError" field.</summary>
    public const int SharePlayHostErrorFieldNumber = 50;
    private global::Uplay.Statistics.SharePlayHostErrorData sharePlayHostError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SharePlayHostErrorData SharePlayHostError {
      get { return sharePlayHostError_; }
      set {
        sharePlayHostError_ = value;
      }
    }

    /// <summary>Field number for the "sharePlayHostSettings" field.</summary>
    public const int SharePlayHostSettingsFieldNumber = 51;
    private global::Uplay.Statistics.SharePlayHostSettingsData sharePlayHostSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SharePlayHostSettingsData SharePlayHostSettings {
      get { return sharePlayHostSettings_; }
      set {
        sharePlayHostSettings_ = value;
      }
    }

    /// <summary>Field number for the "sharePlayOnboarding" field.</summary>
    public const int SharePlayOnboardingFieldNumber = 52;
    private global::Uplay.Statistics.SharePlayOnboardingData sharePlayOnboarding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.SharePlayOnboardingData SharePlayOnboarding {
      get { return sharePlayOnboarding_; }
      set {
        sharePlayOnboarding_ = value;
      }
    }

    /// <summary>Field number for the "streamingHostOutOfFocusStart" field.</summary>
    public const int StreamingHostOutOfFocusStartFieldNumber = 53;
    private global::Uplay.Statistics.StreamingHostOutOfFocusStartData streamingHostOutOfFocusStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingHostOutOfFocusStartData StreamingHostOutOfFocusStart {
      get { return streamingHostOutOfFocusStart_; }
      set {
        streamingHostOutOfFocusStart_ = value;
      }
    }

    /// <summary>Field number for the "streamingHostOutOfFocusStop" field.</summary>
    public const int StreamingHostOutOfFocusStopFieldNumber = 54;
    private global::Uplay.Statistics.StreamingHostOutOfFocusStopData streamingHostOutOfFocusStop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingHostOutOfFocusStopData StreamingHostOutOfFocusStop {
      get { return streamingHostOutOfFocusStop_; }
      set {
        streamingHostOutOfFocusStop_ = value;
      }
    }

    /// <summary>Field number for the "streamingFeedBack" field.</summary>
    public const int StreamingFeedBackFieldNumber = 55;
    private global::Uplay.Statistics.StreamingFeedBackData streamingFeedBack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingFeedBackData StreamingFeedBack {
      get { return streamingFeedBack_; }
      set {
        streamingFeedBack_ = value;
      }
    }

    /// <summary>Field number for the "streamingHostStartSession" field.</summary>
    public const int StreamingHostStartSessionFieldNumber = 56;
    private global::Uplay.Statistics.StreamingHostStartSessionData streamingHostStartSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingHostStartSessionData StreamingHostStartSession {
      get { return streamingHostStartSession_; }
      set {
        streamingHostStartSession_ = value;
      }
    }

    /// <summary>Field number for the "streamingHostStopSession" field.</summary>
    public const int StreamingHostStopSessionFieldNumber = 57;
    private global::Uplay.Statistics.StreamingHostStopSessionData streamingHostStopSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingHostStopSessionData StreamingHostStopSession {
      get { return streamingHostStopSession_; }
      set {
        streamingHostStopSession_ = value;
      }
    }

    /// <summary>Field number for the "streamingError" field.</summary>
    public const int StreamingErrorFieldNumber = 58;
    private global::Uplay.Statistics.StreamingErrorData streamingError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingErrorData StreamingError {
      get { return streamingError_; }
      set {
        streamingError_ = value;
      }
    }

    /// <summary>Field number for the "streamingHostSessionSettings" field.</summary>
    public const int StreamingHostSessionSettingsFieldNumber = 59;
    private global::Uplay.Statistics.StreamingHostSessionSettingsChanged streamingHostSessionSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingHostSessionSettingsChanged StreamingHostSessionSettings {
      get { return streamingHostSessionSettings_; }
      set {
        streamingHostSessionSettings_ = value;
      }
    }

    /// <summary>Field number for the "streamingVGPEvent" field.</summary>
    public const int StreamingVGPEventFieldNumber = 60;
    private global::Uplay.Statistics.StreamingVGPEvent streamingVGPEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingVGPEvent StreamingVGPEvent {
      get { return streamingVGPEvent_; }
      set {
        streamingVGPEvent_ = value;
      }
    }

    /// <summary>Field number for the "streamingHostLinkCreated" field.</summary>
    public const int StreamingHostLinkCreatedFieldNumber = 61;
    private global::Uplay.Statistics.StreamingHostLinkCreatedEvent streamingHostLinkCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingHostLinkCreatedEvent StreamingHostLinkCreated {
      get { return streamingHostLinkCreated_; }
      set {
        streamingHostLinkCreated_ = value;
      }
    }

    /// <summary>Field number for the "remotePlaySessionStart" field.</summary>
    public const int RemotePlaySessionStartFieldNumber = 62;
    private global::Uplay.Statistics.RemotePlayHostSessionStreamingStartData remotePlaySessionStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.RemotePlayHostSessionStreamingStartData RemotePlaySessionStart {
      get { return remotePlaySessionStart_; }
      set {
        remotePlaySessionStart_ = value;
      }
    }

    /// <summary>Field number for the "remotePlaySessionStop" field.</summary>
    public const int RemotePlaySessionStopFieldNumber = 63;
    private global::Uplay.Statistics.RemotePlayHostSessionStreamingStopData remotePlaySessionStop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.RemotePlayHostSessionStreamingStopData RemotePlaySessionStop {
      get { return remotePlaySessionStop_; }
      set {
        remotePlaySessionStop_ = value;
      }
    }

    /// <summary>Field number for the "streamingStatus" field.</summary>
    public const int StreamingStatusFieldNumber = 64;
    private global::Uplay.Statistics.StreamingStatusData streamingStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.StreamingStatusData StreamingStatus {
      get { return streamingStatus_; }
      set {
        streamingStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameLaunch, other.GameLaunch)) return false;
      if (!object.Equals(UiNav, other.UiNav)) return false;
      if (!object.Equals(AppStart, other.AppStart)) return false;
      if (!object.Equals(Download, other.Download)) return false;
      if (!object.Equals(FollowLink, other.FollowLink)) return false;
      if (!object.Equals(GameCloudSaveSync, other.GameCloudSaveSync)) return false;
      if (!object.Equals(SettingChanged, other.SettingChanged)) return false;
      if (!object.Equals(MachineConf, other.MachineConf)) return false;
      if (!object.Equals(DlError, other.DlError)) return false;
      if (!object.Equals(AppQuit, other.AppQuit)) return false;
      if (!object.Equals(DecompressSliceError, other.DecompressSliceError)) return false;
      if (!object.Equals(GameEnd, other.GameEnd)) return false;
      if (!object.Equals(HttpServiceRequest, other.HttpServiceRequest)) return false;
      if (!object.Equals(ImportSteamFriends, other.ImportSteamFriends)) return false;
      if (!object.Equals(ActivateProduct, other.ActivateProduct)) return false;
      if (!object.Equals(FriendAction, other.FriendAction)) return false;
      if (!object.Equals(RedeemReward, other.RedeemReward)) return false;
      if (!object.Equals(AccountCreation, other.AccountCreation)) return false;
      if (!object.Equals(StreamingSession, other.StreamingSession)) return false;
      if (!object.Equals(AccountLinking, other.AccountLinking)) return false;
      if (!object.Equals(ChatSession, other.ChatSession)) return false;
      if (!object.Equals(Party, other.Party)) return false;
      if (!object.Equals(ChallengeAction, other.ChallengeAction)) return false;
      if (!object.Equals(NewsClick, other.NewsClick)) return false;
      if (!object.Equals(NewsImpression, other.NewsImpression)) return false;
      if (!object.Equals(NewsInteraction, other.NewsInteraction)) return false;
      if (!object.Equals(ShopAddToCart, other.ShopAddToCart)) return false;
      if (!object.Equals(TicketRenewalFailure, other.TicketRenewalFailure)) return false;
      if (!object.Equals(GroupAction, other.GroupAction)) return false;
      if (!object.Equals(Diagnostic, other.Diagnostic)) return false;
      if (!object.Equals(IngameShopAction, other.IngameShopAction)) return false;
      if (!object.Equals(IngameShopImpression, other.IngameShopImpression)) return false;
      if (!object.Equals(PromoTabInteraction, other.PromoTabInteraction)) return false;
      if (!object.Equals(EmailVerification, other.EmailVerification)) return false;
      if (!object.Equals(TwoFAActivation, other.TwoFAActivation)) return false;
      if (!object.Equals(AdImpression, other.AdImpression)) return false;
      if (!object.Equals(PopUpDisplayEvent, other.PopUpDisplayEvent)) return false;
      if (!object.Equals(NewsOpen, other.NewsOpen)) return false;
      if (!object.Equals(BattlePassAction, other.BattlePassAction)) return false;
      if (!object.Equals(TrustedDeviceAction, other.TrustedDeviceAction)) return false;
      if (!object.Equals(FriendSuggestionAction, other.FriendSuggestionAction)) return false;
      if (!object.Equals(FriendSuggestionImpression, other.FriendSuggestionImpression)) return false;
      if (!object.Equals(PhoneSecurity, other.PhoneSecurity)) return false;
      if (!object.Equals(SendSmsAction, other.SendSmsAction)) return false;
      if (!object.Equals(SharePlaySessionStart, other.SharePlaySessionStart)) return false;
      if (!object.Equals(SharePlaySessionStop, other.SharePlaySessionStop)) return false;
      if (!object.Equals(SharePlayHostPage, other.SharePlayHostPage)) return false;
      if (!object.Equals(SharePlayGuestInvitation, other.SharePlayGuestInvitation)) return false;
      if (!object.Equals(SharePlayHostInvitation, other.SharePlayHostInvitation)) return false;
      if (!object.Equals(SharePlayHostError, other.SharePlayHostError)) return false;
      if (!object.Equals(SharePlayHostSettings, other.SharePlayHostSettings)) return false;
      if (!object.Equals(SharePlayOnboarding, other.SharePlayOnboarding)) return false;
      if (!object.Equals(StreamingHostOutOfFocusStart, other.StreamingHostOutOfFocusStart)) return false;
      if (!object.Equals(StreamingHostOutOfFocusStop, other.StreamingHostOutOfFocusStop)) return false;
      if (!object.Equals(StreamingFeedBack, other.StreamingFeedBack)) return false;
      if (!object.Equals(StreamingHostStartSession, other.StreamingHostStartSession)) return false;
      if (!object.Equals(StreamingHostStopSession, other.StreamingHostStopSession)) return false;
      if (!object.Equals(StreamingError, other.StreamingError)) return false;
      if (!object.Equals(StreamingHostSessionSettings, other.StreamingHostSessionSettings)) return false;
      if (!object.Equals(StreamingVGPEvent, other.StreamingVGPEvent)) return false;
      if (!object.Equals(StreamingHostLinkCreated, other.StreamingHostLinkCreated)) return false;
      if (!object.Equals(RemotePlaySessionStart, other.RemotePlaySessionStart)) return false;
      if (!object.Equals(RemotePlaySessionStop, other.RemotePlaySessionStop)) return false;
      if (!object.Equals(StreamingStatus, other.StreamingStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gameLaunch_ != null) hash ^= GameLaunch.GetHashCode();
      if (uiNav_ != null) hash ^= UiNav.GetHashCode();
      if (appStart_ != null) hash ^= AppStart.GetHashCode();
      if (download_ != null) hash ^= Download.GetHashCode();
      if (followLink_ != null) hash ^= FollowLink.GetHashCode();
      if (gameCloudSaveSync_ != null) hash ^= GameCloudSaveSync.GetHashCode();
      if (settingChanged_ != null) hash ^= SettingChanged.GetHashCode();
      if (machineConf_ != null) hash ^= MachineConf.GetHashCode();
      if (dlError_ != null) hash ^= DlError.GetHashCode();
      if (appQuit_ != null) hash ^= AppQuit.GetHashCode();
      if (decompressSliceError_ != null) hash ^= DecompressSliceError.GetHashCode();
      if (gameEnd_ != null) hash ^= GameEnd.GetHashCode();
      if (httpServiceRequest_ != null) hash ^= HttpServiceRequest.GetHashCode();
      if (importSteamFriends_ != null) hash ^= ImportSteamFriends.GetHashCode();
      if (activateProduct_ != null) hash ^= ActivateProduct.GetHashCode();
      if (friendAction_ != null) hash ^= FriendAction.GetHashCode();
      if (redeemReward_ != null) hash ^= RedeemReward.GetHashCode();
      if (accountCreation_ != null) hash ^= AccountCreation.GetHashCode();
      if (streamingSession_ != null) hash ^= StreamingSession.GetHashCode();
      if (accountLinking_ != null) hash ^= AccountLinking.GetHashCode();
      if (chatSession_ != null) hash ^= ChatSession.GetHashCode();
      if (party_ != null) hash ^= Party.GetHashCode();
      if (challengeAction_ != null) hash ^= ChallengeAction.GetHashCode();
      if (newsClick_ != null) hash ^= NewsClick.GetHashCode();
      if (newsImpression_ != null) hash ^= NewsImpression.GetHashCode();
      if (newsInteraction_ != null) hash ^= NewsInteraction.GetHashCode();
      if (shopAddToCart_ != null) hash ^= ShopAddToCart.GetHashCode();
      if (ticketRenewalFailure_ != null) hash ^= TicketRenewalFailure.GetHashCode();
      if (groupAction_ != null) hash ^= GroupAction.GetHashCode();
      if (diagnostic_ != null) hash ^= Diagnostic.GetHashCode();
      if (ingameShopAction_ != null) hash ^= IngameShopAction.GetHashCode();
      if (ingameShopImpression_ != null) hash ^= IngameShopImpression.GetHashCode();
      if (promoTabInteraction_ != null) hash ^= PromoTabInteraction.GetHashCode();
      if (emailVerification_ != null) hash ^= EmailVerification.GetHashCode();
      if (twoFAActivation_ != null) hash ^= TwoFAActivation.GetHashCode();
      if (adImpression_ != null) hash ^= AdImpression.GetHashCode();
      if (popUpDisplayEvent_ != null) hash ^= PopUpDisplayEvent.GetHashCode();
      if (newsOpen_ != null) hash ^= NewsOpen.GetHashCode();
      if (battlePassAction_ != null) hash ^= BattlePassAction.GetHashCode();
      if (trustedDeviceAction_ != null) hash ^= TrustedDeviceAction.GetHashCode();
      if (friendSuggestionAction_ != null) hash ^= FriendSuggestionAction.GetHashCode();
      if (friendSuggestionImpression_ != null) hash ^= FriendSuggestionImpression.GetHashCode();
      if (phoneSecurity_ != null) hash ^= PhoneSecurity.GetHashCode();
      if (sendSmsAction_ != null) hash ^= SendSmsAction.GetHashCode();
      if (sharePlaySessionStart_ != null) hash ^= SharePlaySessionStart.GetHashCode();
      if (sharePlaySessionStop_ != null) hash ^= SharePlaySessionStop.GetHashCode();
      if (sharePlayHostPage_ != null) hash ^= SharePlayHostPage.GetHashCode();
      if (sharePlayGuestInvitation_ != null) hash ^= SharePlayGuestInvitation.GetHashCode();
      if (sharePlayHostInvitation_ != null) hash ^= SharePlayHostInvitation.GetHashCode();
      if (sharePlayHostError_ != null) hash ^= SharePlayHostError.GetHashCode();
      if (sharePlayHostSettings_ != null) hash ^= SharePlayHostSettings.GetHashCode();
      if (sharePlayOnboarding_ != null) hash ^= SharePlayOnboarding.GetHashCode();
      if (streamingHostOutOfFocusStart_ != null) hash ^= StreamingHostOutOfFocusStart.GetHashCode();
      if (streamingHostOutOfFocusStop_ != null) hash ^= StreamingHostOutOfFocusStop.GetHashCode();
      if (streamingFeedBack_ != null) hash ^= StreamingFeedBack.GetHashCode();
      if (streamingHostStartSession_ != null) hash ^= StreamingHostStartSession.GetHashCode();
      if (streamingHostStopSession_ != null) hash ^= StreamingHostStopSession.GetHashCode();
      if (streamingError_ != null) hash ^= StreamingError.GetHashCode();
      if (streamingHostSessionSettings_ != null) hash ^= StreamingHostSessionSettings.GetHashCode();
      if (streamingVGPEvent_ != null) hash ^= StreamingVGPEvent.GetHashCode();
      if (streamingHostLinkCreated_ != null) hash ^= StreamingHostLinkCreated.GetHashCode();
      if (remotePlaySessionStart_ != null) hash ^= RemotePlaySessionStart.GetHashCode();
      if (remotePlaySessionStop_ != null) hash ^= RemotePlaySessionStop.GetHashCode();
      if (streamingStatus_ != null) hash ^= StreamingStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameLaunch_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameLaunch);
      }
      if (uiNav_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UiNav);
      }
      if (appStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AppStart);
      }
      if (download_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Download);
      }
      if (followLink_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FollowLink);
      }
      if (gameCloudSaveSync_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GameCloudSaveSync);
      }
      if (settingChanged_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SettingChanged);
      }
      if (machineConf_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MachineConf);
      }
      if (dlError_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DlError);
      }
      if (appQuit_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AppQuit);
      }
      if (decompressSliceError_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DecompressSliceError);
      }
      if (gameEnd_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GameEnd);
      }
      if (httpServiceRequest_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(HttpServiceRequest);
      }
      if (importSteamFriends_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ImportSteamFriends);
      }
      if (activateProduct_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ActivateProduct);
      }
      if (friendAction_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(FriendAction);
      }
      if (redeemReward_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(RedeemReward);
      }
      if (accountCreation_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(AccountCreation);
      }
      if (streamingSession_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(StreamingSession);
      }
      if (accountLinking_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(AccountLinking);
      }
      if (chatSession_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ChatSession);
      }
      if (party_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Party);
      }
      if (challengeAction_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ChallengeAction);
      }
      if (newsClick_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(NewsClick);
      }
      if (newsImpression_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewsImpression);
      }
      if (newsInteraction_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(NewsInteraction);
      }
      if (shopAddToCart_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(ShopAddToCart);
      }
      if (ticketRenewalFailure_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(TicketRenewalFailure);
      }
      if (groupAction_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(GroupAction);
      }
      if (diagnostic_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Diagnostic);
      }
      if (ingameShopAction_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(IngameShopAction);
      }
      if (ingameShopImpression_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(IngameShopImpression);
      }
      if (promoTabInteraction_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PromoTabInteraction);
      }
      if (emailVerification_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(EmailVerification);
      }
      if (twoFAActivation_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(TwoFAActivation);
      }
      if (adImpression_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(AdImpression);
      }
      if (popUpDisplayEvent_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(PopUpDisplayEvent);
      }
      if (newsOpen_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(NewsOpen);
      }
      if (battlePassAction_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(BattlePassAction);
      }
      if (trustedDeviceAction_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(TrustedDeviceAction);
      }
      if (friendSuggestionAction_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(FriendSuggestionAction);
      }
      if (friendSuggestionImpression_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(FriendSuggestionImpression);
      }
      if (phoneSecurity_ != null) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(PhoneSecurity);
      }
      if (sendSmsAction_ != null) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(SendSmsAction);
      }
      if (sharePlaySessionStart_ != null) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(SharePlaySessionStart);
      }
      if (sharePlaySessionStop_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(SharePlaySessionStop);
      }
      if (sharePlayHostPage_ != null) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(SharePlayHostPage);
      }
      if (sharePlayGuestInvitation_ != null) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(SharePlayGuestInvitation);
      }
      if (sharePlayHostInvitation_ != null) {
        output.WriteRawTag(138, 3);
        output.WriteMessage(SharePlayHostInvitation);
      }
      if (sharePlayHostError_ != null) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(SharePlayHostError);
      }
      if (sharePlayHostSettings_ != null) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(SharePlayHostSettings);
      }
      if (sharePlayOnboarding_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(SharePlayOnboarding);
      }
      if (streamingHostOutOfFocusStart_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(StreamingHostOutOfFocusStart);
      }
      if (streamingHostOutOfFocusStop_ != null) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(StreamingHostOutOfFocusStop);
      }
      if (streamingFeedBack_ != null) {
        output.WriteRawTag(186, 3);
        output.WriteMessage(StreamingFeedBack);
      }
      if (streamingHostStartSession_ != null) {
        output.WriteRawTag(194, 3);
        output.WriteMessage(StreamingHostStartSession);
      }
      if (streamingHostStopSession_ != null) {
        output.WriteRawTag(202, 3);
        output.WriteMessage(StreamingHostStopSession);
      }
      if (streamingError_ != null) {
        output.WriteRawTag(210, 3);
        output.WriteMessage(StreamingError);
      }
      if (streamingHostSessionSettings_ != null) {
        output.WriteRawTag(218, 3);
        output.WriteMessage(StreamingHostSessionSettings);
      }
      if (streamingVGPEvent_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(StreamingVGPEvent);
      }
      if (streamingHostLinkCreated_ != null) {
        output.WriteRawTag(234, 3);
        output.WriteMessage(StreamingHostLinkCreated);
      }
      if (remotePlaySessionStart_ != null) {
        output.WriteRawTag(242, 3);
        output.WriteMessage(RemotePlaySessionStart);
      }
      if (remotePlaySessionStop_ != null) {
        output.WriteRawTag(250, 3);
        output.WriteMessage(RemotePlaySessionStop);
      }
      if (streamingStatus_ != null) {
        output.WriteRawTag(130, 4);
        output.WriteMessage(StreamingStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameLaunch_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameLaunch);
      }
      if (uiNav_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UiNav);
      }
      if (appStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AppStart);
      }
      if (download_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Download);
      }
      if (followLink_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FollowLink);
      }
      if (gameCloudSaveSync_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GameCloudSaveSync);
      }
      if (settingChanged_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SettingChanged);
      }
      if (machineConf_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MachineConf);
      }
      if (dlError_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DlError);
      }
      if (appQuit_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AppQuit);
      }
      if (decompressSliceError_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DecompressSliceError);
      }
      if (gameEnd_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GameEnd);
      }
      if (httpServiceRequest_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(HttpServiceRequest);
      }
      if (importSteamFriends_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ImportSteamFriends);
      }
      if (activateProduct_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ActivateProduct);
      }
      if (friendAction_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(FriendAction);
      }
      if (redeemReward_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(RedeemReward);
      }
      if (accountCreation_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(AccountCreation);
      }
      if (streamingSession_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(StreamingSession);
      }
      if (accountLinking_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(AccountLinking);
      }
      if (chatSession_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ChatSession);
      }
      if (party_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Party);
      }
      if (challengeAction_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ChallengeAction);
      }
      if (newsClick_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(NewsClick);
      }
      if (newsImpression_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewsImpression);
      }
      if (newsInteraction_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(NewsInteraction);
      }
      if (shopAddToCart_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(ShopAddToCart);
      }
      if (ticketRenewalFailure_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(TicketRenewalFailure);
      }
      if (groupAction_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(GroupAction);
      }
      if (diagnostic_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Diagnostic);
      }
      if (ingameShopAction_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(IngameShopAction);
      }
      if (ingameShopImpression_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(IngameShopImpression);
      }
      if (promoTabInteraction_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PromoTabInteraction);
      }
      if (emailVerification_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(EmailVerification);
      }
      if (twoFAActivation_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(TwoFAActivation);
      }
      if (adImpression_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(AdImpression);
      }
      if (popUpDisplayEvent_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(PopUpDisplayEvent);
      }
      if (newsOpen_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(NewsOpen);
      }
      if (battlePassAction_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(BattlePassAction);
      }
      if (trustedDeviceAction_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(TrustedDeviceAction);
      }
      if (friendSuggestionAction_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(FriendSuggestionAction);
      }
      if (friendSuggestionImpression_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(FriendSuggestionImpression);
      }
      if (phoneSecurity_ != null) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(PhoneSecurity);
      }
      if (sendSmsAction_ != null) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(SendSmsAction);
      }
      if (sharePlaySessionStart_ != null) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(SharePlaySessionStart);
      }
      if (sharePlaySessionStop_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(SharePlaySessionStop);
      }
      if (sharePlayHostPage_ != null) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(SharePlayHostPage);
      }
      if (sharePlayGuestInvitation_ != null) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(SharePlayGuestInvitation);
      }
      if (sharePlayHostInvitation_ != null) {
        output.WriteRawTag(138, 3);
        output.WriteMessage(SharePlayHostInvitation);
      }
      if (sharePlayHostError_ != null) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(SharePlayHostError);
      }
      if (sharePlayHostSettings_ != null) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(SharePlayHostSettings);
      }
      if (sharePlayOnboarding_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(SharePlayOnboarding);
      }
      if (streamingHostOutOfFocusStart_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(StreamingHostOutOfFocusStart);
      }
      if (streamingHostOutOfFocusStop_ != null) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(StreamingHostOutOfFocusStop);
      }
      if (streamingFeedBack_ != null) {
        output.WriteRawTag(186, 3);
        output.WriteMessage(StreamingFeedBack);
      }
      if (streamingHostStartSession_ != null) {
        output.WriteRawTag(194, 3);
        output.WriteMessage(StreamingHostStartSession);
      }
      if (streamingHostStopSession_ != null) {
        output.WriteRawTag(202, 3);
        output.WriteMessage(StreamingHostStopSession);
      }
      if (streamingError_ != null) {
        output.WriteRawTag(210, 3);
        output.WriteMessage(StreamingError);
      }
      if (streamingHostSessionSettings_ != null) {
        output.WriteRawTag(218, 3);
        output.WriteMessage(StreamingHostSessionSettings);
      }
      if (streamingVGPEvent_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(StreamingVGPEvent);
      }
      if (streamingHostLinkCreated_ != null) {
        output.WriteRawTag(234, 3);
        output.WriteMessage(StreamingHostLinkCreated);
      }
      if (remotePlaySessionStart_ != null) {
        output.WriteRawTag(242, 3);
        output.WriteMessage(RemotePlaySessionStart);
      }
      if (remotePlaySessionStop_ != null) {
        output.WriteRawTag(250, 3);
        output.WriteMessage(RemotePlaySessionStop);
      }
      if (streamingStatus_ != null) {
        output.WriteRawTag(130, 4);
        output.WriteMessage(StreamingStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gameLaunch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameLaunch);
      }
      if (uiNav_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UiNav);
      }
      if (appStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppStart);
      }
      if (download_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Download);
      }
      if (followLink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FollowLink);
      }
      if (gameCloudSaveSync_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameCloudSaveSync);
      }
      if (settingChanged_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SettingChanged);
      }
      if (machineConf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MachineConf);
      }
      if (dlError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DlError);
      }
      if (appQuit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppQuit);
      }
      if (decompressSliceError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DecompressSliceError);
      }
      if (gameEnd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameEnd);
      }
      if (httpServiceRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpServiceRequest);
      }
      if (importSteamFriends_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImportSteamFriends);
      }
      if (activateProduct_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivateProduct);
      }
      if (friendAction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FriendAction);
      }
      if (redeemReward_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RedeemReward);
      }
      if (accountCreation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AccountCreation);
      }
      if (streamingSession_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingSession);
      }
      if (accountLinking_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AccountLinking);
      }
      if (chatSession_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChatSession);
      }
      if (party_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Party);
      }
      if (challengeAction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChallengeAction);
      }
      if (newsClick_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewsClick);
      }
      if (newsImpression_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewsImpression);
      }
      if (newsInteraction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewsInteraction);
      }
      if (shopAddToCart_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShopAddToCart);
      }
      if (ticketRenewalFailure_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TicketRenewalFailure);
      }
      if (groupAction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GroupAction);
      }
      if (diagnostic_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Diagnostic);
      }
      if (ingameShopAction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IngameShopAction);
      }
      if (ingameShopImpression_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IngameShopImpression);
      }
      if (promoTabInteraction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PromoTabInteraction);
      }
      if (emailVerification_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EmailVerification);
      }
      if (twoFAActivation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TwoFAActivation);
      }
      if (adImpression_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AdImpression);
      }
      if (popUpDisplayEvent_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PopUpDisplayEvent);
      }
      if (newsOpen_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewsOpen);
      }
      if (battlePassAction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BattlePassAction);
      }
      if (trustedDeviceAction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TrustedDeviceAction);
      }
      if (friendSuggestionAction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FriendSuggestionAction);
      }
      if (friendSuggestionImpression_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FriendSuggestionImpression);
      }
      if (phoneSecurity_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PhoneSecurity);
      }
      if (sendSmsAction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SendSmsAction);
      }
      if (sharePlaySessionStart_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlaySessionStart);
      }
      if (sharePlaySessionStop_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlaySessionStop);
      }
      if (sharePlayHostPage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlayHostPage);
      }
      if (sharePlayGuestInvitation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlayGuestInvitation);
      }
      if (sharePlayHostInvitation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlayHostInvitation);
      }
      if (sharePlayHostError_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlayHostError);
      }
      if (sharePlayHostSettings_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlayHostSettings);
      }
      if (sharePlayOnboarding_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlayOnboarding);
      }
      if (streamingHostOutOfFocusStart_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingHostOutOfFocusStart);
      }
      if (streamingHostOutOfFocusStop_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingHostOutOfFocusStop);
      }
      if (streamingFeedBack_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingFeedBack);
      }
      if (streamingHostStartSession_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingHostStartSession);
      }
      if (streamingHostStopSession_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingHostStopSession);
      }
      if (streamingError_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingError);
      }
      if (streamingHostSessionSettings_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingHostSessionSettings);
      }
      if (streamingVGPEvent_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingVGPEvent);
      }
      if (streamingHostLinkCreated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingHostLinkCreated);
      }
      if (remotePlaySessionStart_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemotePlaySessionStart);
      }
      if (remotePlaySessionStop_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemotePlaySessionStop);
      }
      if (streamingStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreamingStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventObjectData other) {
      if (other == null) {
        return;
      }
      if (other.gameLaunch_ != null) {
        if (gameLaunch_ == null) {
          GameLaunch = new global::Uplay.Statistics.GameLaunchObjectData();
        }
        GameLaunch.MergeFrom(other.GameLaunch);
      }
      if (other.uiNav_ != null) {
        if (uiNav_ == null) {
          UiNav = new global::Uplay.Statistics.UINavObjectData();
        }
        UiNav.MergeFrom(other.UiNav);
      }
      if (other.appStart_ != null) {
        if (appStart_ == null) {
          AppStart = new global::Uplay.Statistics.AppStartObjectData();
        }
        AppStart.MergeFrom(other.AppStart);
      }
      if (other.download_ != null) {
        if (download_ == null) {
          Download = new global::Uplay.Statistics.DownloadObjectData();
        }
        Download.MergeFrom(other.Download);
      }
      if (other.followLink_ != null) {
        if (followLink_ == null) {
          FollowLink = new global::Uplay.Statistics.FollowLinkObjectData();
        }
        FollowLink.MergeFrom(other.FollowLink);
      }
      if (other.gameCloudSaveSync_ != null) {
        if (gameCloudSaveSync_ == null) {
          GameCloudSaveSync = new global::Uplay.Statistics.GameCloudSaveSyncObjectData();
        }
        GameCloudSaveSync.MergeFrom(other.GameCloudSaveSync);
      }
      if (other.settingChanged_ != null) {
        if (settingChanged_ == null) {
          SettingChanged = new global::Uplay.Statistics.SettingChangedObjectData();
        }
        SettingChanged.MergeFrom(other.SettingChanged);
      }
      if (other.machineConf_ != null) {
        if (machineConf_ == null) {
          MachineConf = new global::Uplay.Statistics.MachineConfObjectData();
        }
        MachineConf.MergeFrom(other.MachineConf);
      }
      if (other.dlError_ != null) {
        if (dlError_ == null) {
          DlError = new global::Uplay.Statistics.DLErrorObjectData();
        }
        DlError.MergeFrom(other.DlError);
      }
      if (other.appQuit_ != null) {
        if (appQuit_ == null) {
          AppQuit = new global::Uplay.Statistics.AppQuitObjectData();
        }
        AppQuit.MergeFrom(other.AppQuit);
      }
      if (other.decompressSliceError_ != null) {
        if (decompressSliceError_ == null) {
          DecompressSliceError = new global::Uplay.Statistics.DecompressSliceErrorObjectData();
        }
        DecompressSliceError.MergeFrom(other.DecompressSliceError);
      }
      if (other.gameEnd_ != null) {
        if (gameEnd_ == null) {
          GameEnd = new global::Uplay.Statistics.GameEndObjectData();
        }
        GameEnd.MergeFrom(other.GameEnd);
      }
      if (other.httpServiceRequest_ != null) {
        if (httpServiceRequest_ == null) {
          HttpServiceRequest = new global::Uplay.Statistics.HttpServiceRequestObjectData();
        }
        HttpServiceRequest.MergeFrom(other.HttpServiceRequest);
      }
      if (other.importSteamFriends_ != null) {
        if (importSteamFriends_ == null) {
          ImportSteamFriends = new global::Uplay.Statistics.ImportSteamFriendsObjectData();
        }
        ImportSteamFriends.MergeFrom(other.ImportSteamFriends);
      }
      if (other.activateProduct_ != null) {
        if (activateProduct_ == null) {
          ActivateProduct = new global::Uplay.Statistics.ActivateProductObjectData();
        }
        ActivateProduct.MergeFrom(other.ActivateProduct);
      }
      if (other.friendAction_ != null) {
        if (friendAction_ == null) {
          FriendAction = new global::Uplay.Statistics.FriendActionObjectData();
        }
        FriendAction.MergeFrom(other.FriendAction);
      }
      if (other.redeemReward_ != null) {
        if (redeemReward_ == null) {
          RedeemReward = new global::Uplay.Statistics.RedeemRewardObjectData();
        }
        RedeemReward.MergeFrom(other.RedeemReward);
      }
      if (other.accountCreation_ != null) {
        if (accountCreation_ == null) {
          AccountCreation = new global::Uplay.Statistics.AccountCreationObjectData();
        }
        AccountCreation.MergeFrom(other.AccountCreation);
      }
      if (other.streamingSession_ != null) {
        if (streamingSession_ == null) {
          StreamingSession = new global::Uplay.Statistics.StreamingSessionObjectData();
        }
        StreamingSession.MergeFrom(other.StreamingSession);
      }
      if (other.accountLinking_ != null) {
        if (accountLinking_ == null) {
          AccountLinking = new global::Uplay.Statistics.AccountLinkingObjectData();
        }
        AccountLinking.MergeFrom(other.AccountLinking);
      }
      if (other.chatSession_ != null) {
        if (chatSession_ == null) {
          ChatSession = new global::Uplay.Statistics.ChatSessionObjectData();
        }
        ChatSession.MergeFrom(other.ChatSession);
      }
      if (other.party_ != null) {
        if (party_ == null) {
          Party = new global::Uplay.Statistics.PartyObjectData();
        }
        Party.MergeFrom(other.Party);
      }
      if (other.challengeAction_ != null) {
        if (challengeAction_ == null) {
          ChallengeAction = new global::Uplay.Statistics.ChallengeActionObjectData();
        }
        ChallengeAction.MergeFrom(other.ChallengeAction);
      }
      if (other.newsClick_ != null) {
        if (newsClick_ == null) {
          NewsClick = new global::Uplay.Statistics.NewsClickObjectData();
        }
        NewsClick.MergeFrom(other.NewsClick);
      }
      if (other.newsImpression_ != null) {
        if (newsImpression_ == null) {
          NewsImpression = new global::Uplay.Statistics.NewsImpressionObjectData();
        }
        NewsImpression.MergeFrom(other.NewsImpression);
      }
      if (other.newsInteraction_ != null) {
        if (newsInteraction_ == null) {
          NewsInteraction = new global::Uplay.Statistics.NewsInteractionObjectData();
        }
        NewsInteraction.MergeFrom(other.NewsInteraction);
      }
      if (other.shopAddToCart_ != null) {
        if (shopAddToCart_ == null) {
          ShopAddToCart = new global::Uplay.Statistics.ShopAddToCartObjectData();
        }
        ShopAddToCart.MergeFrom(other.ShopAddToCart);
      }
      if (other.ticketRenewalFailure_ != null) {
        if (ticketRenewalFailure_ == null) {
          TicketRenewalFailure = new global::Uplay.Statistics.TicketRenewalFailureObjectData();
        }
        TicketRenewalFailure.MergeFrom(other.TicketRenewalFailure);
      }
      if (other.groupAction_ != null) {
        if (groupAction_ == null) {
          GroupAction = new global::Uplay.Statistics.GroupActionObjectData();
        }
        GroupAction.MergeFrom(other.GroupAction);
      }
      if (other.diagnostic_ != null) {
        if (diagnostic_ == null) {
          Diagnostic = new global::Uplay.Statistics.DiagnosticObjectData();
        }
        Diagnostic.MergeFrom(other.Diagnostic);
      }
      if (other.ingameShopAction_ != null) {
        if (ingameShopAction_ == null) {
          IngameShopAction = new global::Uplay.Statistics.IngameShopActionObjectData();
        }
        IngameShopAction.MergeFrom(other.IngameShopAction);
      }
      if (other.ingameShopImpression_ != null) {
        if (ingameShopImpression_ == null) {
          IngameShopImpression = new global::Uplay.Statistics.IngameShopImpressionObjectData();
        }
        IngameShopImpression.MergeFrom(other.IngameShopImpression);
      }
      if (other.promoTabInteraction_ != null) {
        if (promoTabInteraction_ == null) {
          PromoTabInteraction = new global::Uplay.Statistics.PromoTabInteractionObjectData();
        }
        PromoTabInteraction.MergeFrom(other.PromoTabInteraction);
      }
      if (other.emailVerification_ != null) {
        if (emailVerification_ == null) {
          EmailVerification = new global::Uplay.Statistics.EmailVerificationObjectData();
        }
        EmailVerification.MergeFrom(other.EmailVerification);
      }
      if (other.twoFAActivation_ != null) {
        if (twoFAActivation_ == null) {
          TwoFAActivation = new global::Uplay.Statistics.TwoFAActivationObjectData();
        }
        TwoFAActivation.MergeFrom(other.TwoFAActivation);
      }
      if (other.adImpression_ != null) {
        if (adImpression_ == null) {
          AdImpression = new global::Uplay.Statistics.AdImpressionObjectData();
        }
        AdImpression.MergeFrom(other.AdImpression);
      }
      if (other.popUpDisplayEvent_ != null) {
        if (popUpDisplayEvent_ == null) {
          PopUpDisplayEvent = new global::Uplay.Statistics.PopUpDisplayEventObjectData();
        }
        PopUpDisplayEvent.MergeFrom(other.PopUpDisplayEvent);
      }
      if (other.newsOpen_ != null) {
        if (newsOpen_ == null) {
          NewsOpen = new global::Uplay.Statistics.NewsOpenObjectData();
        }
        NewsOpen.MergeFrom(other.NewsOpen);
      }
      if (other.battlePassAction_ != null) {
        if (battlePassAction_ == null) {
          BattlePassAction = new global::Uplay.Statistics.BattlePassActionObjectData();
        }
        BattlePassAction.MergeFrom(other.BattlePassAction);
      }
      if (other.trustedDeviceAction_ != null) {
        if (trustedDeviceAction_ == null) {
          TrustedDeviceAction = new global::Uplay.Statistics.TrustedDeviceActionData();
        }
        TrustedDeviceAction.MergeFrom(other.TrustedDeviceAction);
      }
      if (other.friendSuggestionAction_ != null) {
        if (friendSuggestionAction_ == null) {
          FriendSuggestionAction = new global::Uplay.Statistics.FriendSuggestionActionObjectData();
        }
        FriendSuggestionAction.MergeFrom(other.FriendSuggestionAction);
      }
      if (other.friendSuggestionImpression_ != null) {
        if (friendSuggestionImpression_ == null) {
          FriendSuggestionImpression = new global::Uplay.Statistics.FriendSuggestionImpressionObjectData();
        }
        FriendSuggestionImpression.MergeFrom(other.FriendSuggestionImpression);
      }
      if (other.phoneSecurity_ != null) {
        if (phoneSecurity_ == null) {
          PhoneSecurity = new global::Uplay.Statistics.PhoneSecurityObjectData();
        }
        PhoneSecurity.MergeFrom(other.PhoneSecurity);
      }
      if (other.sendSmsAction_ != null) {
        if (sendSmsAction_ == null) {
          SendSmsAction = new global::Uplay.Statistics.SendSmsTrackEventActionObjectData();
        }
        SendSmsAction.MergeFrom(other.SendSmsAction);
      }
      if (other.sharePlaySessionStart_ != null) {
        if (sharePlaySessionStart_ == null) {
          SharePlaySessionStart = new global::Uplay.Statistics.SharePlayHostSessionStreamingStartData();
        }
        SharePlaySessionStart.MergeFrom(other.SharePlaySessionStart);
      }
      if (other.sharePlaySessionStop_ != null) {
        if (sharePlaySessionStop_ == null) {
          SharePlaySessionStop = new global::Uplay.Statistics.SharePlayHostSessionStreamingStopData();
        }
        SharePlaySessionStop.MergeFrom(other.SharePlaySessionStop);
      }
      if (other.sharePlayHostPage_ != null) {
        if (sharePlayHostPage_ == null) {
          SharePlayHostPage = new global::Uplay.Statistics.SharePlayHostPageData();
        }
        SharePlayHostPage.MergeFrom(other.SharePlayHostPage);
      }
      if (other.sharePlayGuestInvitation_ != null) {
        if (sharePlayGuestInvitation_ == null) {
          SharePlayGuestInvitation = new global::Uplay.Statistics.SharePlayGuestInvitationData();
        }
        SharePlayGuestInvitation.MergeFrom(other.SharePlayGuestInvitation);
      }
      if (other.sharePlayHostInvitation_ != null) {
        if (sharePlayHostInvitation_ == null) {
          SharePlayHostInvitation = new global::Uplay.Statistics.SharePlayHostInvitationData();
        }
        SharePlayHostInvitation.MergeFrom(other.SharePlayHostInvitation);
      }
      if (other.sharePlayHostError_ != null) {
        if (sharePlayHostError_ == null) {
          SharePlayHostError = new global::Uplay.Statistics.SharePlayHostErrorData();
        }
        SharePlayHostError.MergeFrom(other.SharePlayHostError);
      }
      if (other.sharePlayHostSettings_ != null) {
        if (sharePlayHostSettings_ == null) {
          SharePlayHostSettings = new global::Uplay.Statistics.SharePlayHostSettingsData();
        }
        SharePlayHostSettings.MergeFrom(other.SharePlayHostSettings);
      }
      if (other.sharePlayOnboarding_ != null) {
        if (sharePlayOnboarding_ == null) {
          SharePlayOnboarding = new global::Uplay.Statistics.SharePlayOnboardingData();
        }
        SharePlayOnboarding.MergeFrom(other.SharePlayOnboarding);
      }
      if (other.streamingHostOutOfFocusStart_ != null) {
        if (streamingHostOutOfFocusStart_ == null) {
          StreamingHostOutOfFocusStart = new global::Uplay.Statistics.StreamingHostOutOfFocusStartData();
        }
        StreamingHostOutOfFocusStart.MergeFrom(other.StreamingHostOutOfFocusStart);
      }
      if (other.streamingHostOutOfFocusStop_ != null) {
        if (streamingHostOutOfFocusStop_ == null) {
          StreamingHostOutOfFocusStop = new global::Uplay.Statistics.StreamingHostOutOfFocusStopData();
        }
        StreamingHostOutOfFocusStop.MergeFrom(other.StreamingHostOutOfFocusStop);
      }
      if (other.streamingFeedBack_ != null) {
        if (streamingFeedBack_ == null) {
          StreamingFeedBack = new global::Uplay.Statistics.StreamingFeedBackData();
        }
        StreamingFeedBack.MergeFrom(other.StreamingFeedBack);
      }
      if (other.streamingHostStartSession_ != null) {
        if (streamingHostStartSession_ == null) {
          StreamingHostStartSession = new global::Uplay.Statistics.StreamingHostStartSessionData();
        }
        StreamingHostStartSession.MergeFrom(other.StreamingHostStartSession);
      }
      if (other.streamingHostStopSession_ != null) {
        if (streamingHostStopSession_ == null) {
          StreamingHostStopSession = new global::Uplay.Statistics.StreamingHostStopSessionData();
        }
        StreamingHostStopSession.MergeFrom(other.StreamingHostStopSession);
      }
      if (other.streamingError_ != null) {
        if (streamingError_ == null) {
          StreamingError = new global::Uplay.Statistics.StreamingErrorData();
        }
        StreamingError.MergeFrom(other.StreamingError);
      }
      if (other.streamingHostSessionSettings_ != null) {
        if (streamingHostSessionSettings_ == null) {
          StreamingHostSessionSettings = new global::Uplay.Statistics.StreamingHostSessionSettingsChanged();
        }
        StreamingHostSessionSettings.MergeFrom(other.StreamingHostSessionSettings);
      }
      if (other.streamingVGPEvent_ != null) {
        if (streamingVGPEvent_ == null) {
          StreamingVGPEvent = new global::Uplay.Statistics.StreamingVGPEvent();
        }
        StreamingVGPEvent.MergeFrom(other.StreamingVGPEvent);
      }
      if (other.streamingHostLinkCreated_ != null) {
        if (streamingHostLinkCreated_ == null) {
          StreamingHostLinkCreated = new global::Uplay.Statistics.StreamingHostLinkCreatedEvent();
        }
        StreamingHostLinkCreated.MergeFrom(other.StreamingHostLinkCreated);
      }
      if (other.remotePlaySessionStart_ != null) {
        if (remotePlaySessionStart_ == null) {
          RemotePlaySessionStart = new global::Uplay.Statistics.RemotePlayHostSessionStreamingStartData();
        }
        RemotePlaySessionStart.MergeFrom(other.RemotePlaySessionStart);
      }
      if (other.remotePlaySessionStop_ != null) {
        if (remotePlaySessionStop_ == null) {
          RemotePlaySessionStop = new global::Uplay.Statistics.RemotePlayHostSessionStreamingStopData();
        }
        RemotePlaySessionStop.MergeFrom(other.RemotePlaySessionStop);
      }
      if (other.streamingStatus_ != null) {
        if (streamingStatus_ == null) {
          StreamingStatus = new global::Uplay.Statistics.StreamingStatusData();
        }
        StreamingStatus.MergeFrom(other.StreamingStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameLaunch_ == null) {
              GameLaunch = new global::Uplay.Statistics.GameLaunchObjectData();
            }
            input.ReadMessage(GameLaunch);
            break;
          }
          case 18: {
            if (uiNav_ == null) {
              UiNav = new global::Uplay.Statistics.UINavObjectData();
            }
            input.ReadMessage(UiNav);
            break;
          }
          case 26: {
            if (appStart_ == null) {
              AppStart = new global::Uplay.Statistics.AppStartObjectData();
            }
            input.ReadMessage(AppStart);
            break;
          }
          case 34: {
            if (download_ == null) {
              Download = new global::Uplay.Statistics.DownloadObjectData();
            }
            input.ReadMessage(Download);
            break;
          }
          case 42: {
            if (followLink_ == null) {
              FollowLink = new global::Uplay.Statistics.FollowLinkObjectData();
            }
            input.ReadMessage(FollowLink);
            break;
          }
          case 50: {
            if (gameCloudSaveSync_ == null) {
              GameCloudSaveSync = new global::Uplay.Statistics.GameCloudSaveSyncObjectData();
            }
            input.ReadMessage(GameCloudSaveSync);
            break;
          }
          case 58: {
            if (settingChanged_ == null) {
              SettingChanged = new global::Uplay.Statistics.SettingChangedObjectData();
            }
            input.ReadMessage(SettingChanged);
            break;
          }
          case 66: {
            if (machineConf_ == null) {
              MachineConf = new global::Uplay.Statistics.MachineConfObjectData();
            }
            input.ReadMessage(MachineConf);
            break;
          }
          case 74: {
            if (dlError_ == null) {
              DlError = new global::Uplay.Statistics.DLErrorObjectData();
            }
            input.ReadMessage(DlError);
            break;
          }
          case 82: {
            if (appQuit_ == null) {
              AppQuit = new global::Uplay.Statistics.AppQuitObjectData();
            }
            input.ReadMessage(AppQuit);
            break;
          }
          case 90: {
            if (decompressSliceError_ == null) {
              DecompressSliceError = new global::Uplay.Statistics.DecompressSliceErrorObjectData();
            }
            input.ReadMessage(DecompressSliceError);
            break;
          }
          case 98: {
            if (gameEnd_ == null) {
              GameEnd = new global::Uplay.Statistics.GameEndObjectData();
            }
            input.ReadMessage(GameEnd);
            break;
          }
          case 106: {
            if (httpServiceRequest_ == null) {
              HttpServiceRequest = new global::Uplay.Statistics.HttpServiceRequestObjectData();
            }
            input.ReadMessage(HttpServiceRequest);
            break;
          }
          case 114: {
            if (importSteamFriends_ == null) {
              ImportSteamFriends = new global::Uplay.Statistics.ImportSteamFriendsObjectData();
            }
            input.ReadMessage(ImportSteamFriends);
            break;
          }
          case 122: {
            if (activateProduct_ == null) {
              ActivateProduct = new global::Uplay.Statistics.ActivateProductObjectData();
            }
            input.ReadMessage(ActivateProduct);
            break;
          }
          case 130: {
            if (friendAction_ == null) {
              FriendAction = new global::Uplay.Statistics.FriendActionObjectData();
            }
            input.ReadMessage(FriendAction);
            break;
          }
          case 138: {
            if (redeemReward_ == null) {
              RedeemReward = new global::Uplay.Statistics.RedeemRewardObjectData();
            }
            input.ReadMessage(RedeemReward);
            break;
          }
          case 146: {
            if (accountCreation_ == null) {
              AccountCreation = new global::Uplay.Statistics.AccountCreationObjectData();
            }
            input.ReadMessage(AccountCreation);
            break;
          }
          case 154: {
            if (streamingSession_ == null) {
              StreamingSession = new global::Uplay.Statistics.StreamingSessionObjectData();
            }
            input.ReadMessage(StreamingSession);
            break;
          }
          case 162: {
            if (accountLinking_ == null) {
              AccountLinking = new global::Uplay.Statistics.AccountLinkingObjectData();
            }
            input.ReadMessage(AccountLinking);
            break;
          }
          case 170: {
            if (chatSession_ == null) {
              ChatSession = new global::Uplay.Statistics.ChatSessionObjectData();
            }
            input.ReadMessage(ChatSession);
            break;
          }
          case 178: {
            if (party_ == null) {
              Party = new global::Uplay.Statistics.PartyObjectData();
            }
            input.ReadMessage(Party);
            break;
          }
          case 186: {
            if (challengeAction_ == null) {
              ChallengeAction = new global::Uplay.Statistics.ChallengeActionObjectData();
            }
            input.ReadMessage(ChallengeAction);
            break;
          }
          case 194: {
            if (newsClick_ == null) {
              NewsClick = new global::Uplay.Statistics.NewsClickObjectData();
            }
            input.ReadMessage(NewsClick);
            break;
          }
          case 202: {
            if (newsImpression_ == null) {
              NewsImpression = new global::Uplay.Statistics.NewsImpressionObjectData();
            }
            input.ReadMessage(NewsImpression);
            break;
          }
          case 210: {
            if (newsInteraction_ == null) {
              NewsInteraction = new global::Uplay.Statistics.NewsInteractionObjectData();
            }
            input.ReadMessage(NewsInteraction);
            break;
          }
          case 218: {
            if (shopAddToCart_ == null) {
              ShopAddToCart = new global::Uplay.Statistics.ShopAddToCartObjectData();
            }
            input.ReadMessage(ShopAddToCart);
            break;
          }
          case 226: {
            if (ticketRenewalFailure_ == null) {
              TicketRenewalFailure = new global::Uplay.Statistics.TicketRenewalFailureObjectData();
            }
            input.ReadMessage(TicketRenewalFailure);
            break;
          }
          case 234: {
            if (groupAction_ == null) {
              GroupAction = new global::Uplay.Statistics.GroupActionObjectData();
            }
            input.ReadMessage(GroupAction);
            break;
          }
          case 242: {
            if (diagnostic_ == null) {
              Diagnostic = new global::Uplay.Statistics.DiagnosticObjectData();
            }
            input.ReadMessage(Diagnostic);
            break;
          }
          case 250: {
            if (ingameShopAction_ == null) {
              IngameShopAction = new global::Uplay.Statistics.IngameShopActionObjectData();
            }
            input.ReadMessage(IngameShopAction);
            break;
          }
          case 258: {
            if (ingameShopImpression_ == null) {
              IngameShopImpression = new global::Uplay.Statistics.IngameShopImpressionObjectData();
            }
            input.ReadMessage(IngameShopImpression);
            break;
          }
          case 266: {
            if (promoTabInteraction_ == null) {
              PromoTabInteraction = new global::Uplay.Statistics.PromoTabInteractionObjectData();
            }
            input.ReadMessage(PromoTabInteraction);
            break;
          }
          case 274: {
            if (emailVerification_ == null) {
              EmailVerification = new global::Uplay.Statistics.EmailVerificationObjectData();
            }
            input.ReadMessage(EmailVerification);
            break;
          }
          case 282: {
            if (twoFAActivation_ == null) {
              TwoFAActivation = new global::Uplay.Statistics.TwoFAActivationObjectData();
            }
            input.ReadMessage(TwoFAActivation);
            break;
          }
          case 290: {
            if (adImpression_ == null) {
              AdImpression = new global::Uplay.Statistics.AdImpressionObjectData();
            }
            input.ReadMessage(AdImpression);
            break;
          }
          case 298: {
            if (popUpDisplayEvent_ == null) {
              PopUpDisplayEvent = new global::Uplay.Statistics.PopUpDisplayEventObjectData();
            }
            input.ReadMessage(PopUpDisplayEvent);
            break;
          }
          case 306: {
            if (newsOpen_ == null) {
              NewsOpen = new global::Uplay.Statistics.NewsOpenObjectData();
            }
            input.ReadMessage(NewsOpen);
            break;
          }
          case 314: {
            if (battlePassAction_ == null) {
              BattlePassAction = new global::Uplay.Statistics.BattlePassActionObjectData();
            }
            input.ReadMessage(BattlePassAction);
            break;
          }
          case 322: {
            if (trustedDeviceAction_ == null) {
              TrustedDeviceAction = new global::Uplay.Statistics.TrustedDeviceActionData();
            }
            input.ReadMessage(TrustedDeviceAction);
            break;
          }
          case 330: {
            if (friendSuggestionAction_ == null) {
              FriendSuggestionAction = new global::Uplay.Statistics.FriendSuggestionActionObjectData();
            }
            input.ReadMessage(FriendSuggestionAction);
            break;
          }
          case 338: {
            if (friendSuggestionImpression_ == null) {
              FriendSuggestionImpression = new global::Uplay.Statistics.FriendSuggestionImpressionObjectData();
            }
            input.ReadMessage(FriendSuggestionImpression);
            break;
          }
          case 346: {
            if (phoneSecurity_ == null) {
              PhoneSecurity = new global::Uplay.Statistics.PhoneSecurityObjectData();
            }
            input.ReadMessage(PhoneSecurity);
            break;
          }
          case 354: {
            if (sendSmsAction_ == null) {
              SendSmsAction = new global::Uplay.Statistics.SendSmsTrackEventActionObjectData();
            }
            input.ReadMessage(SendSmsAction);
            break;
          }
          case 362: {
            if (sharePlaySessionStart_ == null) {
              SharePlaySessionStart = new global::Uplay.Statistics.SharePlayHostSessionStreamingStartData();
            }
            input.ReadMessage(SharePlaySessionStart);
            break;
          }
          case 370: {
            if (sharePlaySessionStop_ == null) {
              SharePlaySessionStop = new global::Uplay.Statistics.SharePlayHostSessionStreamingStopData();
            }
            input.ReadMessage(SharePlaySessionStop);
            break;
          }
          case 378: {
            if (sharePlayHostPage_ == null) {
              SharePlayHostPage = new global::Uplay.Statistics.SharePlayHostPageData();
            }
            input.ReadMessage(SharePlayHostPage);
            break;
          }
          case 386: {
            if (sharePlayGuestInvitation_ == null) {
              SharePlayGuestInvitation = new global::Uplay.Statistics.SharePlayGuestInvitationData();
            }
            input.ReadMessage(SharePlayGuestInvitation);
            break;
          }
          case 394: {
            if (sharePlayHostInvitation_ == null) {
              SharePlayHostInvitation = new global::Uplay.Statistics.SharePlayHostInvitationData();
            }
            input.ReadMessage(SharePlayHostInvitation);
            break;
          }
          case 402: {
            if (sharePlayHostError_ == null) {
              SharePlayHostError = new global::Uplay.Statistics.SharePlayHostErrorData();
            }
            input.ReadMessage(SharePlayHostError);
            break;
          }
          case 410: {
            if (sharePlayHostSettings_ == null) {
              SharePlayHostSettings = new global::Uplay.Statistics.SharePlayHostSettingsData();
            }
            input.ReadMessage(SharePlayHostSettings);
            break;
          }
          case 418: {
            if (sharePlayOnboarding_ == null) {
              SharePlayOnboarding = new global::Uplay.Statistics.SharePlayOnboardingData();
            }
            input.ReadMessage(SharePlayOnboarding);
            break;
          }
          case 426: {
            if (streamingHostOutOfFocusStart_ == null) {
              StreamingHostOutOfFocusStart = new global::Uplay.Statistics.StreamingHostOutOfFocusStartData();
            }
            input.ReadMessage(StreamingHostOutOfFocusStart);
            break;
          }
          case 434: {
            if (streamingHostOutOfFocusStop_ == null) {
              StreamingHostOutOfFocusStop = new global::Uplay.Statistics.StreamingHostOutOfFocusStopData();
            }
            input.ReadMessage(StreamingHostOutOfFocusStop);
            break;
          }
          case 442: {
            if (streamingFeedBack_ == null) {
              StreamingFeedBack = new global::Uplay.Statistics.StreamingFeedBackData();
            }
            input.ReadMessage(StreamingFeedBack);
            break;
          }
          case 450: {
            if (streamingHostStartSession_ == null) {
              StreamingHostStartSession = new global::Uplay.Statistics.StreamingHostStartSessionData();
            }
            input.ReadMessage(StreamingHostStartSession);
            break;
          }
          case 458: {
            if (streamingHostStopSession_ == null) {
              StreamingHostStopSession = new global::Uplay.Statistics.StreamingHostStopSessionData();
            }
            input.ReadMessage(StreamingHostStopSession);
            break;
          }
          case 466: {
            if (streamingError_ == null) {
              StreamingError = new global::Uplay.Statistics.StreamingErrorData();
            }
            input.ReadMessage(StreamingError);
            break;
          }
          case 474: {
            if (streamingHostSessionSettings_ == null) {
              StreamingHostSessionSettings = new global::Uplay.Statistics.StreamingHostSessionSettingsChanged();
            }
            input.ReadMessage(StreamingHostSessionSettings);
            break;
          }
          case 482: {
            if (streamingVGPEvent_ == null) {
              StreamingVGPEvent = new global::Uplay.Statistics.StreamingVGPEvent();
            }
            input.ReadMessage(StreamingVGPEvent);
            break;
          }
          case 490: {
            if (streamingHostLinkCreated_ == null) {
              StreamingHostLinkCreated = new global::Uplay.Statistics.StreamingHostLinkCreatedEvent();
            }
            input.ReadMessage(StreamingHostLinkCreated);
            break;
          }
          case 498: {
            if (remotePlaySessionStart_ == null) {
              RemotePlaySessionStart = new global::Uplay.Statistics.RemotePlayHostSessionStreamingStartData();
            }
            input.ReadMessage(RemotePlaySessionStart);
            break;
          }
          case 506: {
            if (remotePlaySessionStop_ == null) {
              RemotePlaySessionStop = new global::Uplay.Statistics.RemotePlayHostSessionStreamingStopData();
            }
            input.ReadMessage(RemotePlaySessionStop);
            break;
          }
          case 514: {
            if (streamingStatus_ == null) {
              StreamingStatus = new global::Uplay.Statistics.StreamingStatusData();
            }
            input.ReadMessage(StreamingStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameLaunch_ == null) {
              GameLaunch = new global::Uplay.Statistics.GameLaunchObjectData();
            }
            input.ReadMessage(GameLaunch);
            break;
          }
          case 18: {
            if (uiNav_ == null) {
              UiNav = new global::Uplay.Statistics.UINavObjectData();
            }
            input.ReadMessage(UiNav);
            break;
          }
          case 26: {
            if (appStart_ == null) {
              AppStart = new global::Uplay.Statistics.AppStartObjectData();
            }
            input.ReadMessage(AppStart);
            break;
          }
          case 34: {
            if (download_ == null) {
              Download = new global::Uplay.Statistics.DownloadObjectData();
            }
            input.ReadMessage(Download);
            break;
          }
          case 42: {
            if (followLink_ == null) {
              FollowLink = new global::Uplay.Statistics.FollowLinkObjectData();
            }
            input.ReadMessage(FollowLink);
            break;
          }
          case 50: {
            if (gameCloudSaveSync_ == null) {
              GameCloudSaveSync = new global::Uplay.Statistics.GameCloudSaveSyncObjectData();
            }
            input.ReadMessage(GameCloudSaveSync);
            break;
          }
          case 58: {
            if (settingChanged_ == null) {
              SettingChanged = new global::Uplay.Statistics.SettingChangedObjectData();
            }
            input.ReadMessage(SettingChanged);
            break;
          }
          case 66: {
            if (machineConf_ == null) {
              MachineConf = new global::Uplay.Statistics.MachineConfObjectData();
            }
            input.ReadMessage(MachineConf);
            break;
          }
          case 74: {
            if (dlError_ == null) {
              DlError = new global::Uplay.Statistics.DLErrorObjectData();
            }
            input.ReadMessage(DlError);
            break;
          }
          case 82: {
            if (appQuit_ == null) {
              AppQuit = new global::Uplay.Statistics.AppQuitObjectData();
            }
            input.ReadMessage(AppQuit);
            break;
          }
          case 90: {
            if (decompressSliceError_ == null) {
              DecompressSliceError = new global::Uplay.Statistics.DecompressSliceErrorObjectData();
            }
            input.ReadMessage(DecompressSliceError);
            break;
          }
          case 98: {
            if (gameEnd_ == null) {
              GameEnd = new global::Uplay.Statistics.GameEndObjectData();
            }
            input.ReadMessage(GameEnd);
            break;
          }
          case 106: {
            if (httpServiceRequest_ == null) {
              HttpServiceRequest = new global::Uplay.Statistics.HttpServiceRequestObjectData();
            }
            input.ReadMessage(HttpServiceRequest);
            break;
          }
          case 114: {
            if (importSteamFriends_ == null) {
              ImportSteamFriends = new global::Uplay.Statistics.ImportSteamFriendsObjectData();
            }
            input.ReadMessage(ImportSteamFriends);
            break;
          }
          case 122: {
            if (activateProduct_ == null) {
              ActivateProduct = new global::Uplay.Statistics.ActivateProductObjectData();
            }
            input.ReadMessage(ActivateProduct);
            break;
          }
          case 130: {
            if (friendAction_ == null) {
              FriendAction = new global::Uplay.Statistics.FriendActionObjectData();
            }
            input.ReadMessage(FriendAction);
            break;
          }
          case 138: {
            if (redeemReward_ == null) {
              RedeemReward = new global::Uplay.Statistics.RedeemRewardObjectData();
            }
            input.ReadMessage(RedeemReward);
            break;
          }
          case 146: {
            if (accountCreation_ == null) {
              AccountCreation = new global::Uplay.Statistics.AccountCreationObjectData();
            }
            input.ReadMessage(AccountCreation);
            break;
          }
          case 154: {
            if (streamingSession_ == null) {
              StreamingSession = new global::Uplay.Statistics.StreamingSessionObjectData();
            }
            input.ReadMessage(StreamingSession);
            break;
          }
          case 162: {
            if (accountLinking_ == null) {
              AccountLinking = new global::Uplay.Statistics.AccountLinkingObjectData();
            }
            input.ReadMessage(AccountLinking);
            break;
          }
          case 170: {
            if (chatSession_ == null) {
              ChatSession = new global::Uplay.Statistics.ChatSessionObjectData();
            }
            input.ReadMessage(ChatSession);
            break;
          }
          case 178: {
            if (party_ == null) {
              Party = new global::Uplay.Statistics.PartyObjectData();
            }
            input.ReadMessage(Party);
            break;
          }
          case 186: {
            if (challengeAction_ == null) {
              ChallengeAction = new global::Uplay.Statistics.ChallengeActionObjectData();
            }
            input.ReadMessage(ChallengeAction);
            break;
          }
          case 194: {
            if (newsClick_ == null) {
              NewsClick = new global::Uplay.Statistics.NewsClickObjectData();
            }
            input.ReadMessage(NewsClick);
            break;
          }
          case 202: {
            if (newsImpression_ == null) {
              NewsImpression = new global::Uplay.Statistics.NewsImpressionObjectData();
            }
            input.ReadMessage(NewsImpression);
            break;
          }
          case 210: {
            if (newsInteraction_ == null) {
              NewsInteraction = new global::Uplay.Statistics.NewsInteractionObjectData();
            }
            input.ReadMessage(NewsInteraction);
            break;
          }
          case 218: {
            if (shopAddToCart_ == null) {
              ShopAddToCart = new global::Uplay.Statistics.ShopAddToCartObjectData();
            }
            input.ReadMessage(ShopAddToCart);
            break;
          }
          case 226: {
            if (ticketRenewalFailure_ == null) {
              TicketRenewalFailure = new global::Uplay.Statistics.TicketRenewalFailureObjectData();
            }
            input.ReadMessage(TicketRenewalFailure);
            break;
          }
          case 234: {
            if (groupAction_ == null) {
              GroupAction = new global::Uplay.Statistics.GroupActionObjectData();
            }
            input.ReadMessage(GroupAction);
            break;
          }
          case 242: {
            if (diagnostic_ == null) {
              Diagnostic = new global::Uplay.Statistics.DiagnosticObjectData();
            }
            input.ReadMessage(Diagnostic);
            break;
          }
          case 250: {
            if (ingameShopAction_ == null) {
              IngameShopAction = new global::Uplay.Statistics.IngameShopActionObjectData();
            }
            input.ReadMessage(IngameShopAction);
            break;
          }
          case 258: {
            if (ingameShopImpression_ == null) {
              IngameShopImpression = new global::Uplay.Statistics.IngameShopImpressionObjectData();
            }
            input.ReadMessage(IngameShopImpression);
            break;
          }
          case 266: {
            if (promoTabInteraction_ == null) {
              PromoTabInteraction = new global::Uplay.Statistics.PromoTabInteractionObjectData();
            }
            input.ReadMessage(PromoTabInteraction);
            break;
          }
          case 274: {
            if (emailVerification_ == null) {
              EmailVerification = new global::Uplay.Statistics.EmailVerificationObjectData();
            }
            input.ReadMessage(EmailVerification);
            break;
          }
          case 282: {
            if (twoFAActivation_ == null) {
              TwoFAActivation = new global::Uplay.Statistics.TwoFAActivationObjectData();
            }
            input.ReadMessage(TwoFAActivation);
            break;
          }
          case 290: {
            if (adImpression_ == null) {
              AdImpression = new global::Uplay.Statistics.AdImpressionObjectData();
            }
            input.ReadMessage(AdImpression);
            break;
          }
          case 298: {
            if (popUpDisplayEvent_ == null) {
              PopUpDisplayEvent = new global::Uplay.Statistics.PopUpDisplayEventObjectData();
            }
            input.ReadMessage(PopUpDisplayEvent);
            break;
          }
          case 306: {
            if (newsOpen_ == null) {
              NewsOpen = new global::Uplay.Statistics.NewsOpenObjectData();
            }
            input.ReadMessage(NewsOpen);
            break;
          }
          case 314: {
            if (battlePassAction_ == null) {
              BattlePassAction = new global::Uplay.Statistics.BattlePassActionObjectData();
            }
            input.ReadMessage(BattlePassAction);
            break;
          }
          case 322: {
            if (trustedDeviceAction_ == null) {
              TrustedDeviceAction = new global::Uplay.Statistics.TrustedDeviceActionData();
            }
            input.ReadMessage(TrustedDeviceAction);
            break;
          }
          case 330: {
            if (friendSuggestionAction_ == null) {
              FriendSuggestionAction = new global::Uplay.Statistics.FriendSuggestionActionObjectData();
            }
            input.ReadMessage(FriendSuggestionAction);
            break;
          }
          case 338: {
            if (friendSuggestionImpression_ == null) {
              FriendSuggestionImpression = new global::Uplay.Statistics.FriendSuggestionImpressionObjectData();
            }
            input.ReadMessage(FriendSuggestionImpression);
            break;
          }
          case 346: {
            if (phoneSecurity_ == null) {
              PhoneSecurity = new global::Uplay.Statistics.PhoneSecurityObjectData();
            }
            input.ReadMessage(PhoneSecurity);
            break;
          }
          case 354: {
            if (sendSmsAction_ == null) {
              SendSmsAction = new global::Uplay.Statistics.SendSmsTrackEventActionObjectData();
            }
            input.ReadMessage(SendSmsAction);
            break;
          }
          case 362: {
            if (sharePlaySessionStart_ == null) {
              SharePlaySessionStart = new global::Uplay.Statistics.SharePlayHostSessionStreamingStartData();
            }
            input.ReadMessage(SharePlaySessionStart);
            break;
          }
          case 370: {
            if (sharePlaySessionStop_ == null) {
              SharePlaySessionStop = new global::Uplay.Statistics.SharePlayHostSessionStreamingStopData();
            }
            input.ReadMessage(SharePlaySessionStop);
            break;
          }
          case 378: {
            if (sharePlayHostPage_ == null) {
              SharePlayHostPage = new global::Uplay.Statistics.SharePlayHostPageData();
            }
            input.ReadMessage(SharePlayHostPage);
            break;
          }
          case 386: {
            if (sharePlayGuestInvitation_ == null) {
              SharePlayGuestInvitation = new global::Uplay.Statistics.SharePlayGuestInvitationData();
            }
            input.ReadMessage(SharePlayGuestInvitation);
            break;
          }
          case 394: {
            if (sharePlayHostInvitation_ == null) {
              SharePlayHostInvitation = new global::Uplay.Statistics.SharePlayHostInvitationData();
            }
            input.ReadMessage(SharePlayHostInvitation);
            break;
          }
          case 402: {
            if (sharePlayHostError_ == null) {
              SharePlayHostError = new global::Uplay.Statistics.SharePlayHostErrorData();
            }
            input.ReadMessage(SharePlayHostError);
            break;
          }
          case 410: {
            if (sharePlayHostSettings_ == null) {
              SharePlayHostSettings = new global::Uplay.Statistics.SharePlayHostSettingsData();
            }
            input.ReadMessage(SharePlayHostSettings);
            break;
          }
          case 418: {
            if (sharePlayOnboarding_ == null) {
              SharePlayOnboarding = new global::Uplay.Statistics.SharePlayOnboardingData();
            }
            input.ReadMessage(SharePlayOnboarding);
            break;
          }
          case 426: {
            if (streamingHostOutOfFocusStart_ == null) {
              StreamingHostOutOfFocusStart = new global::Uplay.Statistics.StreamingHostOutOfFocusStartData();
            }
            input.ReadMessage(StreamingHostOutOfFocusStart);
            break;
          }
          case 434: {
            if (streamingHostOutOfFocusStop_ == null) {
              StreamingHostOutOfFocusStop = new global::Uplay.Statistics.StreamingHostOutOfFocusStopData();
            }
            input.ReadMessage(StreamingHostOutOfFocusStop);
            break;
          }
          case 442: {
            if (streamingFeedBack_ == null) {
              StreamingFeedBack = new global::Uplay.Statistics.StreamingFeedBackData();
            }
            input.ReadMessage(StreamingFeedBack);
            break;
          }
          case 450: {
            if (streamingHostStartSession_ == null) {
              StreamingHostStartSession = new global::Uplay.Statistics.StreamingHostStartSessionData();
            }
            input.ReadMessage(StreamingHostStartSession);
            break;
          }
          case 458: {
            if (streamingHostStopSession_ == null) {
              StreamingHostStopSession = new global::Uplay.Statistics.StreamingHostStopSessionData();
            }
            input.ReadMessage(StreamingHostStopSession);
            break;
          }
          case 466: {
            if (streamingError_ == null) {
              StreamingError = new global::Uplay.Statistics.StreamingErrorData();
            }
            input.ReadMessage(StreamingError);
            break;
          }
          case 474: {
            if (streamingHostSessionSettings_ == null) {
              StreamingHostSessionSettings = new global::Uplay.Statistics.StreamingHostSessionSettingsChanged();
            }
            input.ReadMessage(StreamingHostSessionSettings);
            break;
          }
          case 482: {
            if (streamingVGPEvent_ == null) {
              StreamingVGPEvent = new global::Uplay.Statistics.StreamingVGPEvent();
            }
            input.ReadMessage(StreamingVGPEvent);
            break;
          }
          case 490: {
            if (streamingHostLinkCreated_ == null) {
              StreamingHostLinkCreated = new global::Uplay.Statistics.StreamingHostLinkCreatedEvent();
            }
            input.ReadMessage(StreamingHostLinkCreated);
            break;
          }
          case 498: {
            if (remotePlaySessionStart_ == null) {
              RemotePlaySessionStart = new global::Uplay.Statistics.RemotePlayHostSessionStreamingStartData();
            }
            input.ReadMessage(RemotePlaySessionStart);
            break;
          }
          case 506: {
            if (remotePlaySessionStop_ == null) {
              RemotePlaySessionStop = new global::Uplay.Statistics.RemotePlayHostSessionStreamingStopData();
            }
            input.ReadMessage(RemotePlaySessionStop);
            break;
          }
          case 514: {
            if (streamingStatus_ == null) {
              StreamingStatus = new global::Uplay.Statistics.StreamingStatusData();
            }
            input.ReadMessage(StreamingStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Event : pb::IMessage<Event>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event(Event other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      seqId_ = other.seqId_;
      createdDate_ = other.createdDate_;
      contexts_ = other.contexts_.Clone();
      obj_ = other.obj_ != null ? other.obj_.Clone() : null;
      typeData_ = other.typeData_ != null ? other.typeData_.Clone() : null;
      buildNumber_ = other.buildNumber_;
      clientVersion_ = other.clientVersion_;
      ownedGames_ = other.ownedGames_;
      userType_ = other.userType_;
      mAccount_ = other.mAccount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "seqId" field.</summary>
    public const int SeqIdFieldNumber = 2;
    private readonly static uint SeqIdDefaultValue = 0;

    private uint seqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SeqId {
      get { if ((_hasBits0 & 1) != 0) { return seqId_; } else { return SeqIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seqId_ = value;
      }
    }
    /// <summary>Gets whether the "seqId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeqId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seqId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeqId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "createdDate" field.</summary>
    public const int CreatedDateFieldNumber = 3;
    private readonly static string CreatedDateDefaultValue = "";

    private string createdDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CreatedDate {
      get { return createdDate_ ?? CreatedDateDefaultValue; }
      set {
        createdDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "createdDate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatedDate {
      get { return createdDate_ != null; }
    }
    /// <summary>Clears the value of the "createdDate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatedDate() {
      createdDate_ = null;
    }

    /// <summary>Field number for the "contexts" field.</summary>
    public const int ContextsFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_contexts_codec
        = pb::FieldCodec.ForUInt32(32);
    private readonly pbc::RepeatedField<uint> contexts_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Contexts {
      get { return contexts_; }
    }

    /// <summary>Field number for the "obj" field.</summary>
    public const int ObjFieldNumber = 5;
    private global::Uplay.Statistics.EventObjectData obj_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.EventObjectData Obj {
      get { return obj_; }
      set {
        obj_ = value;
      }
    }

    /// <summary>Field number for the "typeData" field.</summary>
    public const int TypeDataFieldNumber = 6;
    private global::Uplay.Statistics.EventTypeData typeData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.EventTypeData TypeData {
      get { return typeData_; }
      set {
        typeData_ = value;
      }
    }

    /// <summary>Field number for the "buildNumber" field.</summary>
    public const int BuildNumberFieldNumber = 7;
    private readonly static uint BuildNumberDefaultValue = 0;

    private uint buildNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BuildNumber {
      get { if ((_hasBits0 & 2) != 0) { return buildNumber_; } else { return BuildNumberDefaultValue; } }
      set {
        _hasBits0 |= 2;
        buildNumber_ = value;
      }
    }
    /// <summary>Gets whether the "buildNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildNumber {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "buildNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildNumber() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clientVersion" field.</summary>
    public const int ClientVersionFieldNumber = 8;
    private readonly static string ClientVersionDefaultValue = "";

    private string clientVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientVersion {
      get { return clientVersion_ ?? ClientVersionDefaultValue; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clientVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientVersion {
      get { return clientVersion_ != null; }
    }
    /// <summary>Clears the value of the "clientVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientVersion() {
      clientVersion_ = null;
    }

    /// <summary>Field number for the "ownedGames" field.</summary>
    public const int OwnedGamesFieldNumber = 12;
    private readonly static uint OwnedGamesDefaultValue = 0;

    private uint ownedGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwnedGames {
      get { if ((_hasBits0 & 4) != 0) { return ownedGames_; } else { return OwnedGamesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ownedGames_ = value;
      }
    }
    /// <summary>Gets whether the "ownedGames" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnedGames {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ownedGames" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnedGames() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "userType" field.</summary>
    public const int UserTypeFieldNumber = 13;
    private readonly static string UserTypeDefaultValue = "";

    private string userType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserType {
      get { return userType_ ?? UserTypeDefaultValue; }
      set {
        userType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserType {
      get { return userType_ != null; }
    }
    /// <summary>Clears the value of the "userType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserType() {
      userType_ = null;
    }

    /// <summary>Field number for the "mAccount" field.</summary>
    public const int MAccountFieldNumber = 14;
    private readonly static bool MAccountDefaultValue = false;

    private bool mAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MAccount {
      get { if ((_hasBits0 & 8) != 0) { return mAccount_; } else { return MAccountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mAccount_ = value;
      }
    }
    /// <summary>Gets whether the "mAccount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMAccount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mAccount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMAccount() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (SeqId != other.SeqId) return false;
      if (CreatedDate != other.CreatedDate) return false;
      if(!contexts_.Equals(other.contexts_)) return false;
      if (!object.Equals(Obj, other.Obj)) return false;
      if (!object.Equals(TypeData, other.TypeData)) return false;
      if (BuildNumber != other.BuildNumber) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (OwnedGames != other.OwnedGames) return false;
      if (UserType != other.UserType) return false;
      if (MAccount != other.MAccount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasSeqId) hash ^= SeqId.GetHashCode();
      if (HasCreatedDate) hash ^= CreatedDate.GetHashCode();
      hash ^= contexts_.GetHashCode();
      if (obj_ != null) hash ^= Obj.GetHashCode();
      if (typeData_ != null) hash ^= TypeData.GetHashCode();
      if (HasBuildNumber) hash ^= BuildNumber.GetHashCode();
      if (HasClientVersion) hash ^= ClientVersion.GetHashCode();
      if (HasOwnedGames) hash ^= OwnedGames.GetHashCode();
      if (HasUserType) hash ^= UserType.GetHashCode();
      if (HasMAccount) hash ^= MAccount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasSeqId) {
        output.WriteRawTag(16);
        output.WriteUInt32(SeqId);
      }
      if (HasCreatedDate) {
        output.WriteRawTag(26);
        output.WriteString(CreatedDate);
      }
      contexts_.WriteTo(output, _repeated_contexts_codec);
      if (obj_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Obj);
      }
      if (typeData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TypeData);
      }
      if (HasBuildNumber) {
        output.WriteRawTag(56);
        output.WriteUInt32(BuildNumber);
      }
      if (HasClientVersion) {
        output.WriteRawTag(66);
        output.WriteString(ClientVersion);
      }
      if (HasOwnedGames) {
        output.WriteRawTag(96);
        output.WriteUInt32(OwnedGames);
      }
      if (HasUserType) {
        output.WriteRawTag(106);
        output.WriteString(UserType);
      }
      if (HasMAccount) {
        output.WriteRawTag(112);
        output.WriteBool(MAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasSeqId) {
        output.WriteRawTag(16);
        output.WriteUInt32(SeqId);
      }
      if (HasCreatedDate) {
        output.WriteRawTag(26);
        output.WriteString(CreatedDate);
      }
      contexts_.WriteTo(ref output, _repeated_contexts_codec);
      if (obj_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Obj);
      }
      if (typeData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TypeData);
      }
      if (HasBuildNumber) {
        output.WriteRawTag(56);
        output.WriteUInt32(BuildNumber);
      }
      if (HasClientVersion) {
        output.WriteRawTag(66);
        output.WriteString(ClientVersion);
      }
      if (HasOwnedGames) {
        output.WriteRawTag(96);
        output.WriteUInt32(OwnedGames);
      }
      if (HasUserType) {
        output.WriteRawTag(106);
        output.WriteString(UserType);
      }
      if (HasMAccount) {
        output.WriteRawTag(112);
        output.WriteBool(MAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasSeqId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SeqId);
      }
      if (HasCreatedDate) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedDate);
      }
      size += contexts_.CalculateSize(_repeated_contexts_codec);
      if (obj_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Obj);
      }
      if (typeData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeData);
      }
      if (HasBuildNumber) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuildNumber);
      }
      if (HasClientVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (HasOwnedGames) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwnedGames);
      }
      if (HasUserType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserType);
      }
      if (HasMAccount) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasSeqId) {
        SeqId = other.SeqId;
      }
      if (other.HasCreatedDate) {
        CreatedDate = other.CreatedDate;
      }
      contexts_.Add(other.contexts_);
      if (other.obj_ != null) {
        if (obj_ == null) {
          Obj = new global::Uplay.Statistics.EventObjectData();
        }
        Obj.MergeFrom(other.Obj);
      }
      if (other.typeData_ != null) {
        if (typeData_ == null) {
          TypeData = new global::Uplay.Statistics.EventTypeData();
        }
        TypeData.MergeFrom(other.TypeData);
      }
      if (other.HasBuildNumber) {
        BuildNumber = other.BuildNumber;
      }
      if (other.HasClientVersion) {
        ClientVersion = other.ClientVersion;
      }
      if (other.HasOwnedGames) {
        OwnedGames = other.OwnedGames;
      }
      if (other.HasUserType) {
        UserType = other.UserType;
      }
      if (other.HasMAccount) {
        MAccount = other.MAccount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            SeqId = input.ReadUInt32();
            break;
          }
          case 26: {
            CreatedDate = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            contexts_.AddEntriesFrom(input, _repeated_contexts_codec);
            break;
          }
          case 42: {
            if (obj_ == null) {
              Obj = new global::Uplay.Statistics.EventObjectData();
            }
            input.ReadMessage(Obj);
            break;
          }
          case 50: {
            if (typeData_ == null) {
              TypeData = new global::Uplay.Statistics.EventTypeData();
            }
            input.ReadMessage(TypeData);
            break;
          }
          case 56: {
            BuildNumber = input.ReadUInt32();
            break;
          }
          case 66: {
            ClientVersion = input.ReadString();
            break;
          }
          case 96: {
            OwnedGames = input.ReadUInt32();
            break;
          }
          case 106: {
            UserType = input.ReadString();
            break;
          }
          case 112: {
            MAccount = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            SeqId = input.ReadUInt32();
            break;
          }
          case 26: {
            CreatedDate = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            contexts_.AddEntriesFrom(ref input, _repeated_contexts_codec);
            break;
          }
          case 42: {
            if (obj_ == null) {
              Obj = new global::Uplay.Statistics.EventObjectData();
            }
            input.ReadMessage(Obj);
            break;
          }
          case 50: {
            if (typeData_ == null) {
              TypeData = new global::Uplay.Statistics.EventTypeData();
            }
            input.ReadMessage(TypeData);
            break;
          }
          case 56: {
            BuildNumber = input.ReadUInt32();
            break;
          }
          case 66: {
            ClientVersion = input.ReadString();
            break;
          }
          case 96: {
            OwnedGames = input.ReadUInt32();
            break;
          }
          case 106: {
            UserType = input.ReadString();
            break;
          }
          case 112: {
            MAccount = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TrackingSession : pb::IMessage<TrackingSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackingSession> _parser = new pb::MessageParser<TrackingSession>(() => new TrackingSession());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackingSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackingSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackingSession(TrackingSession other) : this() {
      _hasBits0 = other._hasBits0;
      endEvent_ = other.endEvent_ != null ? other.endEvent_.Clone() : null;
      runtimeSeconds_ = other.runtimeSeconds_;
      secondsSinceStart_ = other.secondsSinceStart_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackingSession Clone() {
      return new TrackingSession(this);
    }

    /// <summary>Field number for the "endEvent" field.</summary>
    public const int EndEventFieldNumber = 1;
    private global::Uplay.Statistics.Event endEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Statistics.Event EndEvent {
      get { return endEvent_; }
      set {
        endEvent_ = value;
      }
    }

    /// <summary>Field number for the "runtimeSeconds" field.</summary>
    public const int RuntimeSecondsFieldNumber = 2;
    private readonly static ulong RuntimeSecondsDefaultValue = 0UL;

    private ulong runtimeSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RuntimeSeconds {
      get { if ((_hasBits0 & 1) != 0) { return runtimeSeconds_; } else { return RuntimeSecondsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        runtimeSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "runtimeSeconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRuntimeSeconds {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "runtimeSeconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRuntimeSeconds() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "secondsSinceStart" field.</summary>
    public const int SecondsSinceStartFieldNumber = 3;
    private readonly static uint SecondsSinceStartDefaultValue = 0;

    private uint secondsSinceStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SecondsSinceStart {
      get { if ((_hasBits0 & 2) != 0) { return secondsSinceStart_; } else { return SecondsSinceStartDefaultValue; } }
      set {
        _hasBits0 |= 2;
        secondsSinceStart_ = value;
      }
    }
    /// <summary>Gets whether the "secondsSinceStart" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondsSinceStart {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "secondsSinceStart" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondsSinceStart() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackingSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackingSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EndEvent, other.EndEvent)) return false;
      if (RuntimeSeconds != other.RuntimeSeconds) return false;
      if (SecondsSinceStart != other.SecondsSinceStart) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (endEvent_ != null) hash ^= EndEvent.GetHashCode();
      if (HasRuntimeSeconds) hash ^= RuntimeSeconds.GetHashCode();
      if (HasSecondsSinceStart) hash ^= SecondsSinceStart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (endEvent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EndEvent);
      }
      if (HasRuntimeSeconds) {
        output.WriteRawTag(16);
        output.WriteUInt64(RuntimeSeconds);
      }
      if (HasSecondsSinceStart) {
        output.WriteRawTag(24);
        output.WriteUInt32(SecondsSinceStart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (endEvent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EndEvent);
      }
      if (HasRuntimeSeconds) {
        output.WriteRawTag(16);
        output.WriteUInt64(RuntimeSeconds);
      }
      if (HasSecondsSinceStart) {
        output.WriteRawTag(24);
        output.WriteUInt32(SecondsSinceStart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (endEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndEvent);
      }
      if (HasRuntimeSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RuntimeSeconds);
      }
      if (HasSecondsSinceStart) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SecondsSinceStart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackingSession other) {
      if (other == null) {
        return;
      }
      if (other.endEvent_ != null) {
        if (endEvent_ == null) {
          EndEvent = new global::Uplay.Statistics.Event();
        }
        EndEvent.MergeFrom(other.EndEvent);
      }
      if (other.HasRuntimeSeconds) {
        RuntimeSeconds = other.RuntimeSeconds;
      }
      if (other.HasSecondsSinceStart) {
        SecondsSinceStart = other.SecondsSinceStart;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (endEvent_ == null) {
              EndEvent = new global::Uplay.Statistics.Event();
            }
            input.ReadMessage(EndEvent);
            break;
          }
          case 16: {
            RuntimeSeconds = input.ReadUInt64();
            break;
          }
          case 24: {
            SecondsSinceStart = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (endEvent_ == null) {
              EndEvent = new global::Uplay.Statistics.Event();
            }
            input.ReadMessage(EndEvent);
            break;
          }
          case 16: {
            RuntimeSeconds = input.ReadUInt64();
            break;
          }
          case 24: {
            SecondsSinceStart = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StatisticsSession : pb::IMessage<StatisticsSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatisticsSession> _parser = new pb::MessageParser<StatisticsSession>(() => new StatisticsSession());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StatisticsSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatisticsSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatisticsSession(StatisticsSession other) : this() {
      _hasBits0 = other._hasBits0;
      events_ = other.events_.Clone();
      buildNumber_ = other.buildNumber_;
      accountId_ = other.accountId_;
      sessionId_ = other.sessionId_;
      nextSequenceId_ = other.nextSequenceId_;
      trackingSessions_ = other.trackingSessions_.Clone();
      secondsSinceStart_ = other.secondsSinceStart_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatisticsSession Clone() {
      return new StatisticsSession(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uplay.Statistics.Event> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::Uplay.Statistics.Event.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Statistics.Event> events_ = new pbc::RepeatedField<global::Uplay.Statistics.Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Statistics.Event> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "buildNumber" field.</summary>
    public const int BuildNumberFieldNumber = 2;
    private readonly static uint BuildNumberDefaultValue = 0;

    private uint buildNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BuildNumber {
      get { if ((_hasBits0 & 1) != 0) { return buildNumber_; } else { return BuildNumberDefaultValue; } }
      set {
        _hasBits0 |= 1;
        buildNumber_ = value;
      }
    }
    /// <summary>Gets whether the "buildNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "buildNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildNumber() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "accountId" field.</summary>
    public const int AccountIdFieldNumber = 3;
    private readonly static string AccountIdDefaultValue = "";

    private string accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccountId {
      get { return accountId_ ?? AccountIdDefaultValue; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the "accountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "sessionId" field.</summary>
    public const int SessionIdFieldNumber = 4;
    private readonly static string SessionIdDefaultValue = "";

    private string sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_ ?? SessionIdDefaultValue; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sessionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionId {
      get { return sessionId_ != null; }
    }
    /// <summary>Clears the value of the "sessionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionId() {
      sessionId_ = null;
    }

    /// <summary>Field number for the "nextSequenceId" field.</summary>
    public const int NextSequenceIdFieldNumber = 5;
    private readonly static uint NextSequenceIdDefaultValue = 0;

    private uint nextSequenceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NextSequenceId {
      get { if ((_hasBits0 & 2) != 0) { return nextSequenceId_; } else { return NextSequenceIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        nextSequenceId_ = value;
      }
    }
    /// <summary>Gets whether the "nextSequenceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNextSequenceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "nextSequenceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNextSequenceId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "trackingSessions" field.</summary>
    public const int TrackingSessionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Uplay.Statistics.TrackingSession> _repeated_trackingSessions_codec
        = pb::FieldCodec.ForMessage(50, global::Uplay.Statistics.TrackingSession.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Statistics.TrackingSession> trackingSessions_ = new pbc::RepeatedField<global::Uplay.Statistics.TrackingSession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Statistics.TrackingSession> TrackingSessions {
      get { return trackingSessions_; }
    }

    /// <summary>Field number for the "secondsSinceStart" field.</summary>
    public const int SecondsSinceStartFieldNumber = 7;
    private readonly static uint SecondsSinceStartDefaultValue = 0;

    private uint secondsSinceStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SecondsSinceStart {
      get { if ((_hasBits0 & 4) != 0) { return secondsSinceStart_; } else { return SecondsSinceStartDefaultValue; } }
      set {
        _hasBits0 |= 4;
        secondsSinceStart_ = value;
      }
    }
    /// <summary>Gets whether the "secondsSinceStart" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondsSinceStart {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "secondsSinceStart" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondsSinceStart() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StatisticsSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StatisticsSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      if (BuildNumber != other.BuildNumber) return false;
      if (AccountId != other.AccountId) return false;
      if (SessionId != other.SessionId) return false;
      if (NextSequenceId != other.NextSequenceId) return false;
      if(!trackingSessions_.Equals(other.trackingSessions_)) return false;
      if (SecondsSinceStart != other.SecondsSinceStart) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (HasBuildNumber) hash ^= BuildNumber.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (HasNextSequenceId) hash ^= NextSequenceId.GetHashCode();
      hash ^= trackingSessions_.GetHashCode();
      if (HasSecondsSinceStart) hash ^= SecondsSinceStart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      events_.WriteTo(output, _repeated_events_codec);
      if (HasBuildNumber) {
        output.WriteRawTag(16);
        output.WriteUInt32(BuildNumber);
      }
      if (HasAccountId) {
        output.WriteRawTag(26);
        output.WriteString(AccountId);
      }
      if (HasSessionId) {
        output.WriteRawTag(34);
        output.WriteString(SessionId);
      }
      if (HasNextSequenceId) {
        output.WriteRawTag(40);
        output.WriteUInt32(NextSequenceId);
      }
      trackingSessions_.WriteTo(output, _repeated_trackingSessions_codec);
      if (HasSecondsSinceStart) {
        output.WriteRawTag(56);
        output.WriteUInt32(SecondsSinceStart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      events_.WriteTo(ref output, _repeated_events_codec);
      if (HasBuildNumber) {
        output.WriteRawTag(16);
        output.WriteUInt32(BuildNumber);
      }
      if (HasAccountId) {
        output.WriteRawTag(26);
        output.WriteString(AccountId);
      }
      if (HasSessionId) {
        output.WriteRawTag(34);
        output.WriteString(SessionId);
      }
      if (HasNextSequenceId) {
        output.WriteRawTag(40);
        output.WriteUInt32(NextSequenceId);
      }
      trackingSessions_.WriteTo(ref output, _repeated_trackingSessions_codec);
      if (HasSecondsSinceStart) {
        output.WriteRawTag(56);
        output.WriteUInt32(SecondsSinceStart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (HasBuildNumber) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuildNumber);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      if (HasSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (HasNextSequenceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextSequenceId);
      }
      size += trackingSessions_.CalculateSize(_repeated_trackingSessions_codec);
      if (HasSecondsSinceStart) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SecondsSinceStart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StatisticsSession other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      if (other.HasBuildNumber) {
        BuildNumber = other.BuildNumber;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      if (other.HasNextSequenceId) {
        NextSequenceId = other.NextSequenceId;
      }
      trackingSessions_.Add(other.trackingSessions_);
      if (other.HasSecondsSinceStart) {
        SecondsSinceStart = other.SecondsSinceStart;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 16: {
            BuildNumber = input.ReadUInt32();
            break;
          }
          case 26: {
            AccountId = input.ReadString();
            break;
          }
          case 34: {
            SessionId = input.ReadString();
            break;
          }
          case 40: {
            NextSequenceId = input.ReadUInt32();
            break;
          }
          case 50: {
            trackingSessions_.AddEntriesFrom(input, _repeated_trackingSessions_codec);
            break;
          }
          case 56: {
            SecondsSinceStart = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
          case 16: {
            BuildNumber = input.ReadUInt32();
            break;
          }
          case 26: {
            AccountId = input.ReadString();
            break;
          }
          case 34: {
            SessionId = input.ReadString();
            break;
          }
          case 40: {
            NextSequenceId = input.ReadUInt32();
            break;
          }
          case 50: {
            trackingSessions_.AddEntriesFrom(ref input, _repeated_trackingSessions_codec);
            break;
          }
          case 56: {
            SecondsSinceStart = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StatisticsCache : pb::IMessage<StatisticsCache>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatisticsCache> _parser = new pb::MessageParser<StatisticsCache>(() => new StatisticsCache());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StatisticsCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Statistics.StatisticsReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatisticsCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatisticsCache(StatisticsCache other) : this() {
      _hasBits0 = other._hasBits0;
      version_ = other.version_;
      sessions_ = other.sessions_.Clone();
      date_ = other.date_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatisticsCache Clone() {
      return new StatisticsCache(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Uplay.Statistics.StatisticsSession> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(18, global::Uplay.Statistics.StatisticsSession.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Statistics.StatisticsSession> sessions_ = new pbc::RepeatedField<global::Uplay.Statistics.StatisticsSession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Statistics.StatisticsSession> Sessions {
      get { return sessions_; }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 3;
    private readonly static string DateDefaultValue = "";

    private string date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Date {
      get { return date_ ?? DateDefaultValue; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDate {
      get { return date_ != null; }
    }
    /// <summary>Clears the value of the "date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDate() {
      date_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StatisticsCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StatisticsCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!sessions_.Equals(other.sessions_)) return false;
      if (Date != other.Date) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      hash ^= sessions_.GetHashCode();
      if (HasDate) hash ^= Date.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (HasDate) {
        output.WriteRawTag(26);
        output.WriteString(Date);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      sessions_.WriteTo(ref output, _repeated_sessions_codec);
      if (HasDate) {
        output.WriteRawTag(26);
        output.WriteString(Date);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (HasDate) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StatisticsCache other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      sessions_.Add(other.sessions_);
      if (other.HasDate) {
        Date = other.Date;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
          case 26: {
            Date = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
            break;
          }
          case 26: {
            Date = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
